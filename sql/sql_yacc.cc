/* A Bison parser, made by GNU Bison 2.7.  */

/* Bison implementation for Yacc-like parsers in C
   
      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.7"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yylval          MYSQLlval
#define yychar          MYSQLchar
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs
#define yylloc          MYSQLlloc

/* Copy the first part of user declarations.  */
/* Line 371 of yacc.c  */
#line 24 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "partition_info.h"                   /* partition_info */
#include "sql_partition.h"                    /* mem_alloc_error */
#include "auth_common.h"                      /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype */
#include "rpl_slave.h"
#include "rpl_msr.h"       /* multisource replication */
#include "rpl_filter.h"
#include "log_event.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_servers.h"
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"
#include "rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql_show_status.h"                 // build_show_session_status, ...
#include "parse_location.h"
#include "parse_tree_helpers.h"
#include "lex_token.h"
#include "item_cmpfunc.h"
#include "item_geofunc.h"
#include "item_json_func.h"
#include "sql_plugin.h"                      // plugin_is_ready
#include "parse_tree_hints.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, (char*) (A));      \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_syntax_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYTHD->mem_root)


/**
  Parse_tree_node::contextualize_() function call wrapper
*/
#define TMP_CONTEXTUALIZE(x)        \
  do                                \
  {                                 \
    Parse_context pc(YYTHD, Select);\
    if ((x)->contextualize_(&pc))   \
      MYSQL_YYABORT;                \
  } while(0)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    Parse_context pc(YYTHD, Select);                    \
    if (YYTHD->is_error() || (x)->contextualize(&pc))   \
      MYSQL_YYABORT;                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                  \
  do                                                   \
  {                                                    \
    Parse_context pc(YYTHD, Select);                   \
    if (YYTHD->is_error() || (x)->itemize(&pc, (y)))   \
      MYSQL_YYABORT;                                   \
  } while(0)

/**
  PT_statement::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                     \
  do                                                    \
  {                                                     \
    if (YYTHD->is_error())                              \
      MYSQL_YYABORT;                                    \
    Lex->m_sql_cmd= (x)->make_cmd(YYTHD);               \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use my_syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(YYLTYPE *, THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_syntax_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select()->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_UPGRADABLE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= Alter_info::ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated,
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}

/**
  Compare a LEX_USER against the current user as defined by the exact user and
  host used during authentication.

  @param user A pointer to a user which needs to be matched against the
              current.

  @see SET PASSWORD rules

  @retval true The specified user is the authorized user
  @retval false The user doesn't match
*/

bool match_authorized_user(Security_context *ctx, LEX_USER *user)
{
  if(user->user.str && my_strcasecmp(system_charset_info,
                                     ctx->priv_user().str,
                                     user->user.str) == 0)
  {
    /*
      users match; let's compare hosts.
      1. first compare with the host we actually authorized,
      2. then see if we match the host mask of the priv_host
    */
    if (user->host.str && my_strcasecmp(system_charset_info,
                                        user->host.str,
                                        ctx->priv_host().str) == 0)
    {
      /* specified user exactly match the authorized user */
      return true;
    }
  }
  return false;
}

static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "parse_tree_nodes.h"
#include "parse_tree_items.h"


/* Line 371 of yacc.c  */
#line 503 "/export/home/pb2/build/sb_3-27500156-1520170992.64/dist_GPL/sql/sql_yacc.cc"

# ifndef YY_NULL
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULL nullptr
#  else
#   define YY_NULL 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_3_27500156_1520170992_64_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_3_27500156_1520170992_64_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACCOUNT_SYM = 260,
     ACTION = 261,
     ADD = 262,
     ADDDATE_SYM = 263,
     AFTER_SYM = 264,
     AGAINST = 265,
     AGGREGATE_SYM = 266,
     ALGORITHM_SYM = 267,
     ALL = 268,
     ALTER = 269,
     ALWAYS_SYM = 270,
     ANALYSE_SYM = 271,
     ANALYZE_SYM = 272,
     AND_AND_SYM = 273,
     AND_SYM = 274,
     ANY_SYM = 275,
     AS = 276,
     ASC = 277,
     ASCII_SYM = 278,
     ASENSITIVE_SYM = 279,
     AT_SYM = 280,
     AUTOEXTEND_SIZE_SYM = 281,
     AUTO_INC = 282,
     AVG_ROW_LENGTH = 283,
     AVG_SYM = 284,
     BACKUP_SYM = 285,
     BEFORE_SYM = 286,
     BEGIN_SYM = 287,
     BETWEEN_SYM = 288,
     BIGINT = 289,
     BINARY = 290,
     BINLOG_SYM = 291,
     BIN_NUM = 292,
     BIT_AND = 293,
     BIT_OR = 294,
     BIT_SYM = 295,
     BIT_XOR = 296,
     BLOB_SYM = 297,
     BLOCK_SYM = 298,
     BOOLEAN_SYM = 299,
     BOOL_SYM = 300,
     BOTH = 301,
     BTREE_SYM = 302,
     BY = 303,
     BYTE_SYM = 304,
     CACHE_SYM = 305,
     CALL_SYM = 306,
     CASCADE = 307,
     CASCADED = 308,
     CASE_SYM = 309,
     CAST_SYM = 310,
     CATALOG_NAME_SYM = 311,
     CHAIN_SYM = 312,
     CHANGE = 313,
     CHANGED = 314,
     CHANNEL_SYM = 315,
     CHARSET = 316,
     CHAR_SYM = 317,
     CHECKSUM_SYM = 318,
     CHECK_SYM = 319,
     CIPHER_SYM = 320,
     CLASS_ORIGIN_SYM = 321,
     CLIENT_SYM = 322,
     CLOSE_SYM = 323,
     COALESCE = 324,
     CODE_SYM = 325,
     COLLATE_SYM = 326,
     COLLATION_SYM = 327,
     COLUMNS = 328,
     COLUMN_SYM = 329,
     COLUMN_FORMAT_SYM = 330,
     COLUMN_NAME_SYM = 331,
     COMMENT_SYM = 332,
     COMMITTED_SYM = 333,
     COMMIT_SYM = 334,
     COMPACT_SYM = 335,
     COMPLETION_SYM = 336,
     COMPRESSED_SYM = 337,
     COMPRESSION_SYM = 338,
     ENCRYPTION_SYM = 339,
     CONCURRENT = 340,
     CONDITION_SYM = 341,
     CONNECTION_SYM = 342,
     CONSISTENT_SYM = 343,
     CONSTRAINT = 344,
     CONSTRAINT_CATALOG_SYM = 345,
     CONSTRAINT_NAME_SYM = 346,
     CONSTRAINT_SCHEMA_SYM = 347,
     CONTAINS_SYM = 348,
     CONTEXT_SYM = 349,
     CONTINUE_SYM = 350,
     CONVERT_SYM = 351,
     COUNT_SYM = 352,
     CPU_SYM = 353,
     CREATE = 354,
     CROSS = 355,
     CUBE_SYM = 356,
     CURDATE = 357,
     CURRENT_SYM = 358,
     CURRENT_USER = 359,
     CURSOR_SYM = 360,
     CURSOR_NAME_SYM = 361,
     CURTIME = 362,
     DATABASE = 363,
     DATABASES = 364,
     DATAFILE_SYM = 365,
     DATA_SYM = 366,
     DATETIME = 367,
     DATE_ADD_INTERVAL = 368,
     DATE_SUB_INTERVAL = 369,
     DATE_SYM = 370,
     DAY_HOUR_SYM = 371,
     DAY_MICROSECOND_SYM = 372,
     DAY_MINUTE_SYM = 373,
     DAY_SECOND_SYM = 374,
     DAY_SYM = 375,
     DEALLOCATE_SYM = 376,
     DECIMAL_NUM = 377,
     DECIMAL_SYM = 378,
     DECLARE_SYM = 379,
     DEFAULT = 380,
     DEFAULT_AUTH_SYM = 381,
     DEFINER_SYM = 382,
     DELAYED_SYM = 383,
     DELAY_KEY_WRITE_SYM = 384,
     DELETE_SYM = 385,
     DESC = 386,
     DESCRIBE = 387,
     DES_KEY_FILE = 388,
     DETERMINISTIC_SYM = 389,
     DIAGNOSTICS_SYM = 390,
     DIRECTORY_SYM = 391,
     DISABLE_SYM = 392,
     DISCARD = 393,
     DISK_SYM = 394,
     DISTINCT = 395,
     DIV_SYM = 396,
     DOUBLE_SYM = 397,
     DO_SYM = 398,
     DROP = 399,
     DUAL_SYM = 400,
     DUMPFILE = 401,
     DUPLICATE_SYM = 402,
     DYNAMIC_SYM = 403,
     EACH_SYM = 404,
     ELSE = 405,
     ELSEIF_SYM = 406,
     ENABLE_SYM = 407,
     ENCLOSED = 408,
     END = 409,
     ENDS_SYM = 410,
     END_OF_INPUT = 411,
     ENGINES_SYM = 412,
     ENGINE_SYM = 413,
     ENUM = 414,
     EQ = 415,
     EQUAL_SYM = 416,
     ERROR_SYM = 417,
     ERRORS = 418,
     ESCAPED = 419,
     ESCAPE_SYM = 420,
     EVENTS_SYM = 421,
     EVENT_SYM = 422,
     EVERY_SYM = 423,
     EXCHANGE_SYM = 424,
     EXECUTE_SYM = 425,
     EXISTS = 426,
     EXIT_SYM = 427,
     EXPANSION_SYM = 428,
     EXPIRE_SYM = 429,
     EXPORT_SYM = 430,
     EXTENDED_SYM = 431,
     EXTENT_SIZE_SYM = 432,
     EXTRACT_SYM = 433,
     FALSE_SYM = 434,
     FAST_SYM = 435,
     FAULTS_SYM = 436,
     FETCH_SYM = 437,
     FILE_SYM = 438,
     FILE_BLOCK_SIZE_SYM = 439,
     FILTER_SYM = 440,
     FIRST_SYM = 441,
     FIXED_SYM = 442,
     FLOAT_NUM = 443,
     FLOAT_SYM = 444,
     FLUSH_SYM = 445,
     FOLLOWS_SYM = 446,
     FORCE_SYM = 447,
     FOREIGN = 448,
     FOR_SYM = 449,
     FORMAT_SYM = 450,
     FOUND_SYM = 451,
     FROM = 452,
     FULL = 453,
     FULLTEXT_SYM = 454,
     FUNCTION_SYM = 455,
     GE = 456,
     GENERAL = 457,
     GENERATED = 458,
     GROUP_REPLICATION = 459,
     GEOMETRYCOLLECTION = 460,
     GEOMETRY_SYM = 461,
     GET_FORMAT = 462,
     GET_SYM = 463,
     GLOBAL_SYM = 464,
     GRANT = 465,
     GRANTS = 466,
     GROUP_SYM = 467,
     GROUP_CONCAT_SYM = 468,
     GT_SYM = 469,
     HANDLER_SYM = 470,
     HASH_SYM = 471,
     HAVING = 472,
     HELP_SYM = 473,
     HEX_NUM = 474,
     HIGH_PRIORITY = 475,
     HOST_SYM = 476,
     HOSTS_SYM = 477,
     HOUR_MICROSECOND_SYM = 478,
     HOUR_MINUTE_SYM = 479,
     HOUR_SECOND_SYM = 480,
     HOUR_SYM = 481,
     IDENT = 482,
     IDENTIFIED_SYM = 483,
     IDENT_QUOTED = 484,
     IF = 485,
     IGNORE_SYM = 486,
     IGNORE_SERVER_IDS_SYM = 487,
     IMPORT = 488,
     INDEXES = 489,
     INDEX_SYM = 490,
     INFILE = 491,
     INITIAL_SIZE_SYM = 492,
     INNER_SYM = 493,
     INOUT_SYM = 494,
     INSENSITIVE_SYM = 495,
     INSERT = 496,
     INSERT_METHOD = 497,
     INSTANCE_SYM = 498,
     INSTALL_SYM = 499,
     INTERVAL_SYM = 500,
     INTO = 501,
     INT_SYM = 502,
     INVOKER_SYM = 503,
     IN_SYM = 504,
     IO_AFTER_GTIDS = 505,
     IO_BEFORE_GTIDS = 506,
     IO_SYM = 507,
     IPC_SYM = 508,
     IS = 509,
     ISOLATION = 510,
     ISSUER_SYM = 511,
     ITERATE_SYM = 512,
     JOIN_SYM = 513,
     JSON_SEPARATOR_SYM = 514,
     JSON_UNQUOTED_SEPARATOR_SYM = 515,
     JSON_SYM = 516,
     KEYS = 517,
     KEY_BLOCK_SIZE = 518,
     KEY_SYM = 519,
     KILL_SYM = 520,
     LANGUAGE_SYM = 521,
     LAST_SYM = 522,
     LE = 523,
     LEADING = 524,
     LEAVES = 525,
     LEAVE_SYM = 526,
     LEFT = 527,
     LESS_SYM = 528,
     LEVEL_SYM = 529,
     LEX_HOSTNAME = 530,
     LIKE = 531,
     LIMIT = 532,
     LINEAR_SYM = 533,
     LINES = 534,
     LINESTRING = 535,
     LIST_SYM = 536,
     LOAD = 537,
     LOCAL_SYM = 538,
     LOCATOR_SYM = 539,
     LOCKS_SYM = 540,
     LOCK_SYM = 541,
     LOGFILE_SYM = 542,
     LOGS_SYM = 543,
     LONGBLOB = 544,
     LONGTEXT = 545,
     LONG_NUM = 546,
     LONG_SYM = 547,
     LOOP_SYM = 548,
     LOW_PRIORITY = 549,
     LT = 550,
     MASTER_AUTO_POSITION_SYM = 551,
     MASTER_BIND_SYM = 552,
     MASTER_CONNECT_RETRY_SYM = 553,
     MASTER_DELAY_SYM = 554,
     MASTER_HOST_SYM = 555,
     MASTER_LOG_FILE_SYM = 556,
     MASTER_LOG_POS_SYM = 557,
     MASTER_PASSWORD_SYM = 558,
     MASTER_PORT_SYM = 559,
     MASTER_RETRY_COUNT_SYM = 560,
     MASTER_SERVER_ID_SYM = 561,
     MASTER_SSL_CAPATH_SYM = 562,
     MASTER_TLS_VERSION_SYM = 563,
     MASTER_SSL_CA_SYM = 564,
     MASTER_SSL_CERT_SYM = 565,
     MASTER_SSL_CIPHER_SYM = 566,
     MASTER_SSL_CRL_SYM = 567,
     MASTER_SSL_CRLPATH_SYM = 568,
     MASTER_SSL_KEY_SYM = 569,
     MASTER_SSL_SYM = 570,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 571,
     MASTER_SYM = 572,
     MASTER_USER_SYM = 573,
     MASTER_HEARTBEAT_PERIOD_SYM = 574,
     MATCH = 575,
     MAX_CONNECTIONS_PER_HOUR = 576,
     MAX_QUERIES_PER_HOUR = 577,
     MAX_ROWS = 578,
     MAX_SIZE_SYM = 579,
     MAX_SYM = 580,
     MAX_UPDATES_PER_HOUR = 581,
     MAX_USER_CONNECTIONS_SYM = 582,
     MAX_VALUE_SYM = 583,
     MEDIUMBLOB = 584,
     MEDIUMINT = 585,
     MEDIUMTEXT = 586,
     MEDIUM_SYM = 587,
     MEMORY_SYM = 588,
     MERGE_SYM = 589,
     MESSAGE_TEXT_SYM = 590,
     MICROSECOND_SYM = 591,
     MIGRATE_SYM = 592,
     MINUTE_MICROSECOND_SYM = 593,
     MINUTE_SECOND_SYM = 594,
     MINUTE_SYM = 595,
     MIN_ROWS = 596,
     MIN_SYM = 597,
     MODE_SYM = 598,
     MODIFIES_SYM = 599,
     MODIFY_SYM = 600,
     MOD_SYM = 601,
     MONTH_SYM = 602,
     MULTILINESTRING = 603,
     MULTIPOINT = 604,
     MULTIPOLYGON = 605,
     MUTEX_SYM = 606,
     MYSQL_ERRNO_SYM = 607,
     NAMES_SYM = 608,
     NAME_SYM = 609,
     NATIONAL_SYM = 610,
     NATURAL = 611,
     NCHAR_STRING = 612,
     NCHAR_SYM = 613,
     NDBCLUSTER_SYM = 614,
     NE = 615,
     NEG = 616,
     NEVER_SYM = 617,
     NEW_SYM = 618,
     NEXT_SYM = 619,
     NODEGROUP_SYM = 620,
     NONE_SYM = 621,
     NOT2_SYM = 622,
     NOT_SYM = 623,
     NOW_SYM = 624,
     NO_SYM = 625,
     NO_WAIT_SYM = 626,
     NO_WRITE_TO_BINLOG = 627,
     NULL_SYM = 628,
     NUM = 629,
     NUMBER_SYM = 630,
     NUMERIC_SYM = 631,
     NVARCHAR_SYM = 632,
     OFFSET_SYM = 633,
     ON = 634,
     ONE_SYM = 635,
     ONLY_SYM = 636,
     OPEN_SYM = 637,
     OPTIMIZE = 638,
     OPTIMIZER_COSTS_SYM = 639,
     OPTIONS_SYM = 640,
     OPTION = 641,
     OPTIONALLY = 642,
     OR2_SYM = 643,
     ORDER_SYM = 644,
     OR_OR_SYM = 645,
     OR_SYM = 646,
     OUTER = 647,
     OUTFILE = 648,
     OUT_SYM = 649,
     OWNER_SYM = 650,
     PACK_KEYS_SYM = 651,
     PAGE_SYM = 652,
     PARAM_MARKER = 653,
     PARSER_SYM = 654,
     PARSE_GCOL_EXPR_SYM = 655,
     PARTIAL = 656,
     PARTITION_SYM = 657,
     PARTITIONS_SYM = 658,
     PARTITIONING_SYM = 659,
     PASSWORD = 660,
     PHASE_SYM = 661,
     PLUGIN_DIR_SYM = 662,
     PLUGIN_SYM = 663,
     PLUGINS_SYM = 664,
     POINT_SYM = 665,
     POLYGON = 666,
     PORT_SYM = 667,
     POSITION_SYM = 668,
     PRECEDES_SYM = 669,
     PRECISION = 670,
     PREPARE_SYM = 671,
     PRESERVE_SYM = 672,
     PREV_SYM = 673,
     PRIMARY_SYM = 674,
     PRIVILEGES = 675,
     PROCEDURE_SYM = 676,
     PROCESS = 677,
     PROCESSLIST_SYM = 678,
     PROFILE_SYM = 679,
     PROFILES_SYM = 680,
     PROXY_SYM = 681,
     PURGE = 682,
     QUARTER_SYM = 683,
     QUERY_SYM = 684,
     QUICK = 685,
     RANGE_SYM = 686,
     READS_SYM = 687,
     READ_ONLY_SYM = 688,
     READ_SYM = 689,
     READ_WRITE_SYM = 690,
     REAL = 691,
     REBUILD_SYM = 692,
     RECOVER_SYM = 693,
     REDOFILE_SYM = 694,
     REDO_BUFFER_SIZE_SYM = 695,
     REDUNDANT_SYM = 696,
     REFERENCES = 697,
     REGEXP = 698,
     RELAY = 699,
     RELAYLOG_SYM = 700,
     RELAY_LOG_FILE_SYM = 701,
     RELAY_LOG_POS_SYM = 702,
     RELAY_THREAD = 703,
     RELEASE_SYM = 704,
     RELOAD = 705,
     REMOVE_SYM = 706,
     RENAME = 707,
     REORGANIZE_SYM = 708,
     REPAIR = 709,
     REPEATABLE_SYM = 710,
     REPEAT_SYM = 711,
     REPLACE = 712,
     REPLICATION = 713,
     REPLICATE_DO_DB = 714,
     REPLICATE_IGNORE_DB = 715,
     REPLICATE_DO_TABLE = 716,
     REPLICATE_IGNORE_TABLE = 717,
     REPLICATE_WILD_DO_TABLE = 718,
     REPLICATE_WILD_IGNORE_TABLE = 719,
     REPLICATE_REWRITE_DB = 720,
     REQUIRE_SYM = 721,
     RESET_SYM = 722,
     RESIGNAL_SYM = 723,
     RESOURCES = 724,
     RESTORE_SYM = 725,
     RESTRICT = 726,
     RESUME_SYM = 727,
     RETURNED_SQLSTATE_SYM = 728,
     RETURNS_SYM = 729,
     RETURN_SYM = 730,
     REVERSE_SYM = 731,
     REVOKE = 732,
     RIGHT = 733,
     ROLLBACK_SYM = 734,
     ROLLUP_SYM = 735,
     ROTATE_SYM = 736,
     ROUTINE_SYM = 737,
     ROWS_SYM = 738,
     ROW_FORMAT_SYM = 739,
     ROW_SYM = 740,
     ROW_COUNT_SYM = 741,
     RTREE_SYM = 742,
     SAVEPOINT_SYM = 743,
     SCHEDULE_SYM = 744,
     SCHEMA_NAME_SYM = 745,
     SECOND_MICROSECOND_SYM = 746,
     SECOND_SYM = 747,
     SECURITY_SYM = 748,
     SELECT_SYM = 749,
     SENSITIVE_SYM = 750,
     SEPARATOR_SYM = 751,
     SERIALIZABLE_SYM = 752,
     SERIAL_SYM = 753,
     SESSION_SYM = 754,
     SERVER_SYM = 755,
     SERVER_OPTIONS = 756,
     SET = 757,
     SET_VAR = 758,
     SHARE_SYM = 759,
     SHIFT_LEFT = 760,
     SHIFT_RIGHT = 761,
     SHOW = 762,
     SHUTDOWN = 763,
     SIGNAL_SYM = 764,
     SIGNED_SYM = 765,
     SIMPLE_SYM = 766,
     SLAVE = 767,
     SLOW = 768,
     SMALLINT = 769,
     SNAPSHOT_SYM = 770,
     SOCKET_SYM = 771,
     SONAME_SYM = 772,
     SOUNDS_SYM = 773,
     SOURCE_SYM = 774,
     SPATIAL_SYM = 775,
     SPECIFIC_SYM = 776,
     SQLEXCEPTION_SYM = 777,
     SQLSTATE_SYM = 778,
     SQLWARNING_SYM = 779,
     SQL_AFTER_GTIDS = 780,
     SQL_AFTER_MTS_GAPS = 781,
     SQL_BEFORE_GTIDS = 782,
     SQL_BIG_RESULT = 783,
     SQL_BUFFER_RESULT = 784,
     SQL_CACHE_SYM = 785,
     SQL_CALC_FOUND_ROWS = 786,
     SQL_NO_CACHE_SYM = 787,
     SQL_SMALL_RESULT = 788,
     SQL_SYM = 789,
     SQL_THREAD = 790,
     SSL_SYM = 791,
     STACKED_SYM = 792,
     STARTING = 793,
     STARTS_SYM = 794,
     START_SYM = 795,
     STATS_AUTO_RECALC_SYM = 796,
     STATS_PERSISTENT_SYM = 797,
     STATS_SAMPLE_PAGES_SYM = 798,
     STATUS_SYM = 799,
     STDDEV_SAMP_SYM = 800,
     STD_SYM = 801,
     STOP_SYM = 802,
     STORAGE_SYM = 803,
     STORED_SYM = 804,
     STRAIGHT_JOIN = 805,
     STRING_SYM = 806,
     SUBCLASS_ORIGIN_SYM = 807,
     SUBDATE_SYM = 808,
     SUBJECT_SYM = 809,
     SUBPARTITIONS_SYM = 810,
     SUBPARTITION_SYM = 811,
     SUBSTRING = 812,
     SUM_SYM = 813,
     SUPER_SYM = 814,
     SUSPEND_SYM = 815,
     SWAPS_SYM = 816,
     SWITCHES_SYM = 817,
     SYSDATE = 818,
     TABLES = 819,
     TABLESPACE_SYM = 820,
     TABLE_REF_PRIORITY = 821,
     TABLE_SYM = 822,
     TABLE_CHECKSUM_SYM = 823,
     TABLE_NAME_SYM = 824,
     TEMPORARY = 825,
     TEMPTABLE_SYM = 826,
     TERMINATED = 827,
     TEXT_STRING = 828,
     TEXT_SYM = 829,
     THAN_SYM = 830,
     THEN_SYM = 831,
     TIMESTAMP = 832,
     TIMESTAMP_ADD = 833,
     TIMESTAMP_DIFF = 834,
     TIME_SYM = 835,
     TINYBLOB = 836,
     TINYINT = 837,
     TINYTEXT = 838,
     TO_SYM = 839,
     TRAILING = 840,
     TRANSACTION_SYM = 841,
     TRIGGERS_SYM = 842,
     TRIGGER_SYM = 843,
     TRIM = 844,
     TRUE_SYM = 845,
     TRUNCATE_SYM = 846,
     TYPES_SYM = 847,
     TYPE_SYM = 848,
     UDF_RETURNS_SYM = 849,
     ULONGLONG_NUM = 850,
     UNCOMMITTED_SYM = 851,
     UNDEFINED_SYM = 852,
     UNDERSCORE_CHARSET = 853,
     UNDOFILE_SYM = 854,
     UNDO_BUFFER_SIZE_SYM = 855,
     UNDO_SYM = 856,
     UNICODE_SYM = 857,
     UNINSTALL_SYM = 858,
     UNION_SYM = 859,
     UNIQUE_SYM = 860,
     UNKNOWN_SYM = 861,
     UNLOCK_SYM = 862,
     UNSIGNED = 863,
     UNTIL_SYM = 864,
     UPDATE_SYM = 865,
     UPGRADE_SYM = 866,
     USAGE = 867,
     USER = 868,
     USE_FRM = 869,
     USE_SYM = 870,
     USING = 871,
     UTC_DATE_SYM = 872,
     UTC_TIMESTAMP_SYM = 873,
     UTC_TIME_SYM = 874,
     VALIDATION_SYM = 875,
     VALUES = 876,
     VALUE_SYM = 877,
     VARBINARY = 878,
     VARCHAR = 879,
     VARIABLES = 880,
     VARIANCE_SYM = 881,
     VARYING = 882,
     VAR_SAMP_SYM = 883,
     VIEW_SYM = 884,
     VIRTUAL_SYM = 885,
     WAIT_SYM = 886,
     WARNINGS = 887,
     WEEK_SYM = 888,
     WEIGHT_STRING_SYM = 889,
     WHEN_SYM = 890,
     WHERE = 891,
     WHILE_SYM = 892,
     WITH = 893,
     WITH_CUBE_SYM = 894,
     WITH_ROLLUP_SYM = 895,
     WITHOUT_SYM = 896,
     WORK_SYM = 897,
     WRAPPER_SYM = 898,
     WRITE_SYM = 899,
     X509_SYM = 900,
     XA_SYM = 901,
     XID_SYM = 902,
     XML_SYM = 903,
     XOR = 904,
     YEAR_MONTH_SYM = 905,
     YEAR_SYM = 906,
     ZEROFILL = 907,
     JSON_OBJECTAGG = 908,
     JSON_ARRAYAGG = 909
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define ANALYSE_SYM 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT 289
#define BINARY 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND 293
#define BIT_OR 294
#define BIT_SYM 295
#define BIT_XOR 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define DES_KEY_FILE 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_UNQUOTED_SEPARATOR_SYM 515
#define JSON_SYM 516
#define KEYS 517
#define KEY_BLOCK_SIZE 518
#define KEY_SYM 519
#define KILL_SYM 520
#define LANGUAGE_SYM 521
#define LAST_SYM 522
#define LE 523
#define LEADING 524
#define LEAVES 525
#define LEAVE_SYM 526
#define LEFT 527
#define LESS_SYM 528
#define LEVEL_SYM 529
#define LEX_HOSTNAME 530
#define LIKE 531
#define LIMIT 532
#define LINEAR_SYM 533
#define LINES 534
#define LINESTRING 535
#define LIST_SYM 536
#define LOAD 537
#define LOCAL_SYM 538
#define LOCATOR_SYM 539
#define LOCKS_SYM 540
#define LOCK_SYM 541
#define LOGFILE_SYM 542
#define LOGS_SYM 543
#define LONGBLOB 544
#define LONGTEXT 545
#define LONG_NUM 546
#define LONG_SYM 547
#define LOOP_SYM 548
#define LOW_PRIORITY 549
#define LT 550
#define MASTER_AUTO_POSITION_SYM 551
#define MASTER_BIND_SYM 552
#define MASTER_CONNECT_RETRY_SYM 553
#define MASTER_DELAY_SYM 554
#define MASTER_HOST_SYM 555
#define MASTER_LOG_FILE_SYM 556
#define MASTER_LOG_POS_SYM 557
#define MASTER_PASSWORD_SYM 558
#define MASTER_PORT_SYM 559
#define MASTER_RETRY_COUNT_SYM 560
#define MASTER_SERVER_ID_SYM 561
#define MASTER_SSL_CAPATH_SYM 562
#define MASTER_TLS_VERSION_SYM 563
#define MASTER_SSL_CA_SYM 564
#define MASTER_SSL_CERT_SYM 565
#define MASTER_SSL_CIPHER_SYM 566
#define MASTER_SSL_CRL_SYM 567
#define MASTER_SSL_CRLPATH_SYM 568
#define MASTER_SSL_KEY_SYM 569
#define MASTER_SSL_SYM 570
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 571
#define MASTER_SYM 572
#define MASTER_USER_SYM 573
#define MASTER_HEARTBEAT_PERIOD_SYM 574
#define MATCH 575
#define MAX_CONNECTIONS_PER_HOUR 576
#define MAX_QUERIES_PER_HOUR 577
#define MAX_ROWS 578
#define MAX_SIZE_SYM 579
#define MAX_SYM 580
#define MAX_UPDATES_PER_HOUR 581
#define MAX_USER_CONNECTIONS_SYM 582
#define MAX_VALUE_SYM 583
#define MEDIUMBLOB 584
#define MEDIUMINT 585
#define MEDIUMTEXT 586
#define MEDIUM_SYM 587
#define MEMORY_SYM 588
#define MERGE_SYM 589
#define MESSAGE_TEXT_SYM 590
#define MICROSECOND_SYM 591
#define MIGRATE_SYM 592
#define MINUTE_MICROSECOND_SYM 593
#define MINUTE_SECOND_SYM 594
#define MINUTE_SYM 595
#define MIN_ROWS 596
#define MIN_SYM 597
#define MODE_SYM 598
#define MODIFIES_SYM 599
#define MODIFY_SYM 600
#define MOD_SYM 601
#define MONTH_SYM 602
#define MULTILINESTRING 603
#define MULTIPOINT 604
#define MULTIPOLYGON 605
#define MUTEX_SYM 606
#define MYSQL_ERRNO_SYM 607
#define NAMES_SYM 608
#define NAME_SYM 609
#define NATIONAL_SYM 610
#define NATURAL 611
#define NCHAR_STRING 612
#define NCHAR_SYM 613
#define NDBCLUSTER_SYM 614
#define NE 615
#define NEG 616
#define NEVER_SYM 617
#define NEW_SYM 618
#define NEXT_SYM 619
#define NODEGROUP_SYM 620
#define NONE_SYM 621
#define NOT2_SYM 622
#define NOT_SYM 623
#define NOW_SYM 624
#define NO_SYM 625
#define NO_WAIT_SYM 626
#define NO_WRITE_TO_BINLOG 627
#define NULL_SYM 628
#define NUM 629
#define NUMBER_SYM 630
#define NUMERIC_SYM 631
#define NVARCHAR_SYM 632
#define OFFSET_SYM 633
#define ON 634
#define ONE_SYM 635
#define ONLY_SYM 636
#define OPEN_SYM 637
#define OPTIMIZE 638
#define OPTIMIZER_COSTS_SYM 639
#define OPTIONS_SYM 640
#define OPTION 641
#define OPTIONALLY 642
#define OR2_SYM 643
#define ORDER_SYM 644
#define OR_OR_SYM 645
#define OR_SYM 646
#define OUTER 647
#define OUTFILE 648
#define OUT_SYM 649
#define OWNER_SYM 650
#define PACK_KEYS_SYM 651
#define PAGE_SYM 652
#define PARAM_MARKER 653
#define PARSER_SYM 654
#define PARSE_GCOL_EXPR_SYM 655
#define PARTIAL 656
#define PARTITION_SYM 657
#define PARTITIONS_SYM 658
#define PARTITIONING_SYM 659
#define PASSWORD 660
#define PHASE_SYM 661
#define PLUGIN_DIR_SYM 662
#define PLUGIN_SYM 663
#define PLUGINS_SYM 664
#define POINT_SYM 665
#define POLYGON 666
#define PORT_SYM 667
#define POSITION_SYM 668
#define PRECEDES_SYM 669
#define PRECISION 670
#define PREPARE_SYM 671
#define PRESERVE_SYM 672
#define PREV_SYM 673
#define PRIMARY_SYM 674
#define PRIVILEGES 675
#define PROCEDURE_SYM 676
#define PROCESS 677
#define PROCESSLIST_SYM 678
#define PROFILE_SYM 679
#define PROFILES_SYM 680
#define PROXY_SYM 681
#define PURGE 682
#define QUARTER_SYM 683
#define QUERY_SYM 684
#define QUICK 685
#define RANGE_SYM 686
#define READS_SYM 687
#define READ_ONLY_SYM 688
#define READ_SYM 689
#define READ_WRITE_SYM 690
#define REAL 691
#define REBUILD_SYM 692
#define RECOVER_SYM 693
#define REDOFILE_SYM 694
#define REDO_BUFFER_SIZE_SYM 695
#define REDUNDANT_SYM 696
#define REFERENCES 697
#define REGEXP 698
#define RELAY 699
#define RELAYLOG_SYM 700
#define RELAY_LOG_FILE_SYM 701
#define RELAY_LOG_POS_SYM 702
#define RELAY_THREAD 703
#define RELEASE_SYM 704
#define RELOAD 705
#define REMOVE_SYM 706
#define RENAME 707
#define REORGANIZE_SYM 708
#define REPAIR 709
#define REPEATABLE_SYM 710
#define REPEAT_SYM 711
#define REPLACE 712
#define REPLICATION 713
#define REPLICATE_DO_DB 714
#define REPLICATE_IGNORE_DB 715
#define REPLICATE_DO_TABLE 716
#define REPLICATE_IGNORE_TABLE 717
#define REPLICATE_WILD_DO_TABLE 718
#define REPLICATE_WILD_IGNORE_TABLE 719
#define REPLICATE_REWRITE_DB 720
#define REQUIRE_SYM 721
#define RESET_SYM 722
#define RESIGNAL_SYM 723
#define RESOURCES 724
#define RESTORE_SYM 725
#define RESTRICT 726
#define RESUME_SYM 727
#define RETURNED_SQLSTATE_SYM 728
#define RETURNS_SYM 729
#define RETURN_SYM 730
#define REVERSE_SYM 731
#define REVOKE 732
#define RIGHT 733
#define ROLLBACK_SYM 734
#define ROLLUP_SYM 735
#define ROTATE_SYM 736
#define ROUTINE_SYM 737
#define ROWS_SYM 738
#define ROW_FORMAT_SYM 739
#define ROW_SYM 740
#define ROW_COUNT_SYM 741
#define RTREE_SYM 742
#define SAVEPOINT_SYM 743
#define SCHEDULE_SYM 744
#define SCHEMA_NAME_SYM 745
#define SECOND_MICROSECOND_SYM 746
#define SECOND_SYM 747
#define SECURITY_SYM 748
#define SELECT_SYM 749
#define SENSITIVE_SYM 750
#define SEPARATOR_SYM 751
#define SERIALIZABLE_SYM 752
#define SERIAL_SYM 753
#define SESSION_SYM 754
#define SERVER_SYM 755
#define SERVER_OPTIONS 756
#define SET 757
#define SET_VAR 758
#define SHARE_SYM 759
#define SHIFT_LEFT 760
#define SHIFT_RIGHT 761
#define SHOW 762
#define SHUTDOWN 763
#define SIGNAL_SYM 764
#define SIGNED_SYM 765
#define SIMPLE_SYM 766
#define SLAVE 767
#define SLOW 768
#define SMALLINT 769
#define SNAPSHOT_SYM 770
#define SOCKET_SYM 771
#define SONAME_SYM 772
#define SOUNDS_SYM 773
#define SOURCE_SYM 774
#define SPATIAL_SYM 775
#define SPECIFIC_SYM 776
#define SQLEXCEPTION_SYM 777
#define SQLSTATE_SYM 778
#define SQLWARNING_SYM 779
#define SQL_AFTER_GTIDS 780
#define SQL_AFTER_MTS_GAPS 781
#define SQL_BEFORE_GTIDS 782
#define SQL_BIG_RESULT 783
#define SQL_BUFFER_RESULT 784
#define SQL_CACHE_SYM 785
#define SQL_CALC_FOUND_ROWS 786
#define SQL_NO_CACHE_SYM 787
#define SQL_SMALL_RESULT 788
#define SQL_SYM 789
#define SQL_THREAD 790
#define SSL_SYM 791
#define STACKED_SYM 792
#define STARTING 793
#define STARTS_SYM 794
#define START_SYM 795
#define STATS_AUTO_RECALC_SYM 796
#define STATS_PERSISTENT_SYM 797
#define STATS_SAMPLE_PAGES_SYM 798
#define STATUS_SYM 799
#define STDDEV_SAMP_SYM 800
#define STD_SYM 801
#define STOP_SYM 802
#define STORAGE_SYM 803
#define STORED_SYM 804
#define STRAIGHT_JOIN 805
#define STRING_SYM 806
#define SUBCLASS_ORIGIN_SYM 807
#define SUBDATE_SYM 808
#define SUBJECT_SYM 809
#define SUBPARTITIONS_SYM 810
#define SUBPARTITION_SYM 811
#define SUBSTRING 812
#define SUM_SYM 813
#define SUPER_SYM 814
#define SUSPEND_SYM 815
#define SWAPS_SYM 816
#define SWITCHES_SYM 817
#define SYSDATE 818
#define TABLES 819
#define TABLESPACE_SYM 820
#define TABLE_REF_PRIORITY 821
#define TABLE_SYM 822
#define TABLE_CHECKSUM_SYM 823
#define TABLE_NAME_SYM 824
#define TEMPORARY 825
#define TEMPTABLE_SYM 826
#define TERMINATED 827
#define TEXT_STRING 828
#define TEXT_SYM 829
#define THAN_SYM 830
#define THEN_SYM 831
#define TIMESTAMP 832
#define TIMESTAMP_ADD 833
#define TIMESTAMP_DIFF 834
#define TIME_SYM 835
#define TINYBLOB 836
#define TINYINT 837
#define TINYTEXT 838
#define TO_SYM 839
#define TRAILING 840
#define TRANSACTION_SYM 841
#define TRIGGERS_SYM 842
#define TRIGGER_SYM 843
#define TRIM 844
#define TRUE_SYM 845
#define TRUNCATE_SYM 846
#define TYPES_SYM 847
#define TYPE_SYM 848
#define UDF_RETURNS_SYM 849
#define ULONGLONG_NUM 850
#define UNCOMMITTED_SYM 851
#define UNDEFINED_SYM 852
#define UNDERSCORE_CHARSET 853
#define UNDOFILE_SYM 854
#define UNDO_BUFFER_SIZE_SYM 855
#define UNDO_SYM 856
#define UNICODE_SYM 857
#define UNINSTALL_SYM 858
#define UNION_SYM 859
#define UNIQUE_SYM 860
#define UNKNOWN_SYM 861
#define UNLOCK_SYM 862
#define UNSIGNED 863
#define UNTIL_SYM 864
#define UPDATE_SYM 865
#define UPGRADE_SYM 866
#define USAGE 867
#define USER 868
#define USE_FRM 869
#define USE_SYM 870
#define USING 871
#define UTC_DATE_SYM 872
#define UTC_TIMESTAMP_SYM 873
#define UTC_TIME_SYM 874
#define VALIDATION_SYM 875
#define VALUES 876
#define VALUE_SYM 877
#define VARBINARY 878
#define VARCHAR 879
#define VARIABLES 880
#define VARIANCE_SYM 881
#define VARYING 882
#define VAR_SAMP_SYM 883
#define VIEW_SYM 884
#define VIRTUAL_SYM 885
#define WAIT_SYM 886
#define WARNINGS 887
#define WEEK_SYM 888
#define WEIGHT_STRING_SYM 889
#define WHEN_SYM 890
#define WHERE 891
#define WHILE_SYM 892
#define WITH 893
#define WITH_CUBE_SYM 894
#define WITH_ROLLUP_SYM 895
#define WITHOUT_SYM 896
#define WORK_SYM 897
#define WRAPPER_SYM 898
#define WRITE_SYM 899
#define X509_SYM 900
#define XA_SYM 901
#define XID_SYM 902
#define XML_SYM 903
#define XOR 904
#define YEAR_MONTH_SYM 905
#define YEAR_SYM 906
#define ZEROFILL 907
#define JSON_OBJECTAGG 908
#define JSON_ARRAYAGG 909



#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED

# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (void *YYPARSE_PARAM);
#else
int MYSQLparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (class THD *YYTHD);
#else
int MYSQLparse ();
#endif
#endif /* ! YYPARSE_PARAM */

#endif /* !YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_3_27500156_1520170992_64_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

/* Line 390 of yacc.c  */
#line 1888 "/export/home/pb2/build/sb_3-27500156-1520170992.64/dist_GPL/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(N) (N)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (YYID (0))
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  661
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   63734

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  674
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  921
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2738
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4679

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   909

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   667,     2,     2,     2,   661,   656,     2,
     664,   665,   659,   658,   666,   657,   672,   660,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   673,   670,
       2,     2,     2,     2,   671,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   662,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   668,   655,   669,   663,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   125,   127,   129,   131,   135,   137,   139,   144,
     146,   149,   150,   155,   156,   159,   163,   165,   168,   169,
     173,   174,   181,   182,   188,   190,   194,   198,   202,   206,
     210,   214,   218,   222,   225,   229,   231,   235,   237,   240,
     244,   250,   258,   261,   265,   267,   271,   275,   278,   282,
     284,   288,   290,   292,   296,   300,   304,   308,   312,   316,
     320,   324,   328,   332,   336,   340,   344,   348,   352,   356,
     360,   364,   368,   372,   378,   382,   384,   385,   387,   391,
     393,   397,   401,   405,   409,   410,   414,   415,   423,   424,
     425,   440,   441,   442,   457,   458,   459,   474,   475,   482,
     483,   487,   496,   501,   505,   517,   519,   523,   526,   529,
     532,   535,   538,   541,   544,   545,   558,   559,   566,   569,
     570,   572,   576,   578,   579,   582,   583,   586,   587,   589,
     593,   598,   599,   602,   603,   606,   608,   610,   612,   614,
     616,   618,   620,   622,   624,   626,   628,   630,   632,   634,
     635,   639,   641,   642,   645,   646,   649,   652,   655,   658,
     661,   665,   669,   671,   673,   675,   678,   682,   686,   687,
     692,   693,   697,   698,   700,   704,   706,   707,   709,   713,
     715,   716,   720,   721,   723,   727,   729,   734,   735,   737,
     739,   741,   742,   746,   749,   753,   754,   758,   759,   765,
     771,   772,   780,   781,   788,   790,   792,   794,   798,   800,
     802,   804,   808,   809,   811,   813,   815,   817,   820,   822,
     826,   828,   830,   831,   833,   834,   837,   841,   847,   849,
     851,   853,   855,   857,   859,   861,   863,   865,   867,   869,
     871,   873,   875,   877,   881,   886,   887,   889,   891,   893,
     897,   899,   903,   907,   909,   912,   914,   916,   918,   920,
     924,   928,   930,   932,   934,   936,   938,   940,   942,   944,
     946,   948,   950,   952,   954,   956,   960,   961,   962,   966,
     968,   970,   972,   974,   976,   978,   980,   982,   984,   986,
     988,   990,   992,   993,   999,  1000,  1003,  1004,  1008,  1009,
    1012,  1015,  1018,  1021,  1022,  1029,  1032,  1033,  1036,  1038,
    1040,  1044,  1045,  1046,  1047,  1055,  1056,  1059,  1062,  1064,
    1066,  1067,  1068,  1077,  1078,  1085,  1087,  1090,  1092,  1095,
    1096,  1097,  1104,  1105,  1106,  1113,  1114,  1117,  1118,  1124,
    1125,  1127,  1128,  1134,  1135,  1138,  1139,  1145,  1150,  1151,
    1152,  1161,  1162,  1163,  1172,  1174,  1176,  1178,  1180,  1182,
    1185,  1190,  1196,  1197,  1202,  1207,  1212,  1216,  1220,  1223,
    1226,  1227,  1230,  1232,  1235,  1239,  1241,  1243,  1245,  1246,
    1248,  1250,  1253,  1257,  1259,  1261,  1263,  1265,  1267,  1269,
    1271,  1273,  1275,  1276,  1278,  1280,  1283,  1287,  1289,  1291,
    1293,  1295,  1297,  1298,  1300,  1302,  1305,  1309,  1311,  1313,
    1315,  1317,  1319,  1321,  1323,  1324,  1326,  1328,  1331,  1335,
    1337,  1339,  1341,  1344,  1347,  1350,  1352,  1354,  1356,  1358,
    1361,  1365,  1369,  1373,  1377,  1381,  1385,  1389,  1393,  1398,
    1402,  1404,  1406,  1408,  1410,  1413,  1417,  1420,  1425,  1431,
    1432,  1438,  1439,  1440,  1446,  1447,  1455,  1457,  1458,  1460,
    1461,  1465,  1466,  1470,  1476,  1483,  1484,  1489,  1492,  1495,
    1498,  1501,  1502,  1504,  1505,  1509,  1510,  1512,  1514,  1518,
    1520,  1525,  1529,  1533,  1534,  1537,  1538,  1539,  1547,  1548,
    1559,  1561,  1565,  1567,  1569,  1570,  1573,  1574,  1578,  1580,
    1584,  1585,  1592,  1594,  1595,  1596,  1602,  1603,  1608,  1610,
    1612,  1614,  1618,  1620,  1624,  1625,  1626,  1632,  1634,  1638,
    1640,  1642,  1643,  1647,  1649,  1653,  1654,  1659,  1661,  1662,
    1664,  1667,  1669,  1673,  1678,  1682,  1686,  1690,  1695,  1700,
    1704,  1709,  1710,  1712,  1713,  1715,  1717,  1720,  1722,  1724,
    1725,  1727,  1729,  1732,  1734,  1735,  1739,  1740,  1742,  1744,
    1747,  1749,  1752,  1756,  1760,  1764,  1768,  1772,  1776,  1780,
    1784,  1788,  1792,  1796,  1800,  1804,  1808,  1812,  1816,  1820,
    1824,  1828,  1832,  1836,  1840,  1841,  1848,  1850,  1852,  1856,
    1861,  1866,  1870,  1873,  1876,  1880,  1884,  1889,  1894,  1896,
    1898,  1900,  1902,  1904,  1906,  1908,  1910,  1912,  1914,  1916,
    1918,  1920,  1922,  1924,  1926,  1928,  1932,  1934,  1936,  1939,
    1942,  1950,  1959,  1968,  1977,  1986,  1989,  1990,  1992,  1997,
    1998,  2000,  2003,  2004,  2008,  2011,  2021,  2022,  2025,  2026,
    2028,  2031,  2033,  2035,  2038,  2041,  2044,  2046,  2049,  2050,
    2052,  2054,  2059,  2061,  2065,  2069,  2073,  2075,  2078,  2080,
    2082,  2086,  2089,  2093,  2096,  2099,  2101,  2105,  2109,  2112,
    2116,  2118,  2121,  2124,  2127,  2129,  2132,  2134,  2136,  2138,
    2141,  2145,  2148,  2152,  2155,  2158,  2162,  2166,  2170,  2171,
    2178,  2179,  2186,  2189,  2191,  2193,  2195,  2197,  2199,  2201,
    2203,  2205,  2207,  2209,  2211,  2213,  2216,  2219,  2221,  2224,
    2226,  2229,  2233,  2236,  2238,  2240,  2242,  2244,  2246,  2248,
    2250,  2253,  2254,  2256,  2258,  2264,  2265,  2269,  2270,  2273,
    2277,  2278,  2280,  2283,  2285,  2287,  2289,  2291,  2295,  2299,
    2303,  2307,  2308,  2310,  2311,  2313,  2314,  2316,  2319,  2321,
    2323,  2326,  2329,  2333,  2335,  2339,  2342,  2344,  2347,  2350,
    2353,  2356,  2359,  2362,  2365,  2368,  2371,  2374,  2377,  2379,
    2381,  2384,  2386,  2388,  2390,  2392,  2394,  2395,  2398,  2400,
    2402,  2404,  2406,  2408,  2409,  2412,  2413,  2416,  2418,  2420,
    2421,  2423,  2425,  2428,  2431,  2433,  2436,  2439,  2440,  2442,
    2444,  2446,  2450,  2452,  2456,  2457,  2459,  2460,  2465,  2467,
    2469,  2471,  2472,  2474,  2477,  2479,  2481,  2484,  2486,  2490,
    2494,  2496,  2498,  2499,  2502,  2503,  2505,  2511,  2512,  2516,
    2520,  2522,  2523,  2526,  2529,  2532,  2533,  2537,  2541,  2548,
    2555,  2557,  2559,  2562,  2565,  2568,  2570,  2573,  2576,  2578,
    2580,  2581,  2583,  2585,  2587,  2589,  2590,  2592,  2594,  2596,
    2597,  2599,  2602,  2603,  2605,  2606,  2608,  2609,  2611,  2613,
    2616,  2618,  2621,  2623,  2626,  2629,  2632,  2636,  2639,  2641,
    2643,  2645,  2647,  2651,  2653,  2655,  2657,  2662,  2665,  2667,
    2672,  2673,  2675,  2676,  2679,  2681,  2685,  2686,  2692,  2693,
    2699,  2707,  2708,  2714,  2715,  2721,  2722,  2728,  2729,  2734,
    2735,  2746,  2750,  2755,  2759,  2763,  2771,  2777,  2783,  2785,
    2790,  2791,  2793,  2795,  2798,  2801,  2804,  2806,  2811,  2814,
    2817,  2821,  2822,  2825,  2828,  2830,  2833,  2836,  2839,  2842,
    2846,  2847,  2851,  2853,  2858,  2859,  2863,  2864,  2867,  2868,
    2870,  2872,  2875,  2878,  2880,  2884,  2885,  2887,  2889,  2893,
    2896,  2899,  2901,  2905,  2910,  2911,  2918,  2923,  2924,  2930,
    2931,  2938,  2943,  2947,  2949,  2957,  2962,  2967,  2968,  2970,
    2973,  2976,  2979,  2981,  2983,  2984,  2990,  2991,  2995,  2998,
    2999,  3005,  3006,  3007,  3014,  3016,  3020,  3022,  3024,  3028,
    3032,  3034,  3038,  3041,  3045,  3048,  3053,  3054,  3061,  3062,
    3063,  3071,  3076,  3081,  3085,  3089,  3092,  3095,  3102,  3108,
    3112,  3118,  3124,  3126,  3128,  3130,  3133,  3135,  3137,  3139,
    3140,  3142,  3144,  3147,  3150,  3154,  3158,  3162,  3166,  3167,
    3169,  3170,  3172,  3173,  3175,  3177,  3178,  3181,  3183,  3184,
    3186,  3188,  3190,  3193,  3196,  3199,  3204,  3208,  3209,  3214,
    3218,  3219,  3221,  3223,  3227,  3231,  3234,  3237,  3242,  3243,
    3247,  3248,  3252,  3253,  3257,  3258,  3262,  3263,  3265,  3267,
    3271,  3273,  3275,  3276,  3279,  3281,  3285,  3289,  3293,  3295,
    3296,  3302,  3303,  3305,  3307,  3308,  3315,  3316,  3318,  3320,
    3323,  3325,  3327,  3329,  3330,  3336,  3339,  3340,  3346,  3347,
    3349,  3351,  3354,  3356,  3358,  3360,  3362,  3364,  3367,  3368,
    3374,  3375,  3377,  3379,  3380,  3385,  3390,  3394,  3400,  3402,
    3406,  3410,  3411,  3418,  3420,  3422,  3424,  3428,  3431,  3435,
    3437,  3439,  3440,  3447,  3449,  3451,  3453,  3457,  3461,  3466,
    3467,  3473,  3475,  3476,  3481,  3482,  3485,  3487,  3491,  3496,
    3499,  3503,  3507,  3511,  3516,  3520,  3532,  3533,  3537,  3546,
    3549,  3550,  3552,  3554,  3556,  3557,  3559,  3562,  3564,  3566,
    3568,  3570,  3571,  3574,  3579,  3583,  3585,  3587,  3589,  3592,
    3593,  3596,  3599,  3601,  3603,  3604,  3607,  3611,  3615,  3619,
    3622,  3626,  3631,  3635,  3640,  3644,  3649,  3651,  3655,  3660,
    3664,  3671,  3673,  3679,  3686,  3692,  3700,  3707,  3716,  3722,
    3729,  3734,  3739,  3745,  3749,  3754,  3756,  3760,  3764,  3768,
    3772,  3776,  3780,  3786,  3792,  3796,  3800,  3804,  3808,  3812,
    3816,  3818,  3820,  3822,  3824,  3826,  3828,  3830,  3832,  3834,
    3836,  3838,  3840,  3842,  3844,  3846,  3848,  3850,  3852,  3854,
    3856,  3858,  3860,  3862,  3866,  3868,  3870,  3872,  3874,  3878,
    3881,  3884,  3887,  3890,  3894,  3898,  3904,  3911,  3916,  3921,
    3929,  3932,  3939,  3945,  3952,  3959,  3964,  3969,  3975,  3979,
    3983,  3988,  3995,  3998,  4003,  4008,  4013,  4024,  4031,  4040,
    4047,  4052,  4057,  4064,  4069,  4074,  4079,  4086,  4091,  4099,
    4107,  4115,  4122,  4129,  4136,  4143,  4147,  4152,  4159,  4168,
    4171,  4174,  4183,  4192,  4199,  4206,  4208,  4215,  4222,  4231,
    4240,  4247,  4256,  4263,  4266,  4275,  4284,  4287,  4290,  4293,
    4298,  4303,  4308,  4313,  4317,  4326,  4333,  4342,  4347,  4354,
    4359,  4364,  4371,  4380,  4385,  4389,  4396,  4401,  4408,  4414,
    4423,  4431,  4442,  4444,  4451,  4456,  4461,  4466,  4471,  4476,
    4483,  4488,  4493,  4500,  4503,  4507,  4508,  4513,  4514,  4518,
    4519,  4521,  4523,  4527,  4530,  4535,  4541,  4546,  4551,  4556,
    4563,  4568,  4574,  4579,  4585,  4590,  4596,  4601,  4607,  4612,
    4617,  4622,  4627,  4632,  4638,  4646,  4649,  4653,  4655,  4660,
    4661,  4663,  4664,  4667,  4668,  4672,  4676,  4678,  4681,  4684,
    4688,  4691,  4693,  4696,  4698,  4701,  4703,  4706,  4709,  4712,
    4714,  4715,  4717,  4719,  4723,  4725,  4729,  4731,  4735,  4736,
    4738,  4739,  4742,  4747,  4753,  4755,  4757,  4759,  4761,  4766,
    4768,  4772,  4776,  4780,  4786,  4792,  4800,  4805,  4813,  4823,
    4830,  4838,  4848,  4855,  4857,  4860,  4863,  4864,  4866,  4871,
    4876,  4881,  4886,  4889,  4894,  4895,  4899,  4901,  4902,  4904,
    4905,  4908,  4912,  4916,  4918,  4920,  4927,  4934,  4936,  4939,
    4940,  4942,  4944,  4945,  4947,  4949,  4951,  4953,  4957,  4959,
    4963,  4965,  4967,  4969,  4971,  4973,  4975,  4977,  4979,  4981,
    4983,  4985,  4987,  4989,  4991,  4993,  4995,  4997,  4999,  5001,
    5003,  5005,  5007,  5009,  5011,  5013,  5014,  5016,  5018,  5019,
    5022,  5023,  5025,  5026,  5029,  5030,  5033,  5036,  5037,  5038,
    5043,  5047,  5049,  5050,  5052,  5054,  5058,  5062,  5064,  5067,
    5068,  5070,  5074,  5078,  5080,  5081,  5083,  5085,  5086,  5088,
    5091,  5093,  5097,  5101,  5103,  5105,  5107,  5109,  5111,  5112,
    5115,  5117,  5119,  5121,  5123,  5125,  5127,  5129,  5131,  5133,
    5135,  5137,  5139,  5141,  5143,  5145,  5147,  5149,  5151,  5153,
    5155,  5157,  5159,  5161,  5162,  5168,  5169,  5171,  5175,  5177,
    5181,  5183,  5186,  5188,  5189,  5191,  5194,  5200,  5203,  5205,
    5209,  5210,  5211,  5219,  5220,  5221,  5230,  5235,  5242,  5247,
    5252,  5258,  5259,  5266,  5271,  5276,  5281,  5287,  5292,  5294,
    5298,  5300,  5302,  5306,  5307,  5310,  5311,  5313,  5314,  5316,
    5318,  5321,  5325,  5327,  5329,  5338,  5348,  5357,  5364,  5372,
    5379,  5380,  5382,  5384,  5386,  5388,  5390,  5391,  5393,  5395,
    5399,  5404,  5406,  5410,  5415,  5419,  5421,  5424,  5427,  5432,
    5434,  5436,  5440,  5442,  5444,  5446,  5447,  5449,  5453,  5454,
    5456,  5460,  5462,  5464,  5466,  5467,  5473,  5483,  5487,  5489,
    5493,  5494,  5496,  5505,  5512,  5520,  5521,  5524,  5525,  5528,
    5530,  5532,  5534,  5535,  5540,  5541,  5543,  5544,  5546,  5548,
    5552,  5554,  5556,  5559,  5562,  5565,  5567,  5569,  5571,  5573,
    5574,  5578,  5579,  5583,  5586,  5591,  5596,  5600,  5605,  5610,
    5612,  5616,  5620,  5627,  5630,  5633,  5634,  5641,  5642,  5650,
    5656,  5659,  5661,  5667,  5673,  5676,  5679,  5681,  5686,  5690,
    5693,  5697,  5700,  5703,  5705,  5709,  5714,  5718,  5722,  5725,
    5729,  5733,  5737,  5741,  5745,  5749,  5753,  5757,  5761,  5766,
    5768,  5770,  5772,  5774,  5776,  5777,  5779,  5780,  5783,  5784,
    5786,  5788,  5790,  5791,  5794,  5795,  5798,  5799,  5802,  5805,
    5806,  5809,  5812,  5813,  5818,  5819,  5824,  5826,  5828,  5830,
    5832,  5834,  5838,  5840,  5842,  5843,  5845,  5847,  5851,  5852,
    5854,  5856,  5857,  5862,  5863,  5864,  5870,  5872,  5873,  5877,
    5878,  5882,  5886,  5888,  5891,  5894,  5897,  5900,  5903,  5907,
    5910,  5912,  5914,  5916,  5918,  5920,  5922,  5924,  5925,  5927,
    5928,  5932,  5936,  5938,  5939,  5944,  5946,  5949,  5950,  5952,
    5953,  5957,  5961,  5964,  5967,  5971,  5972,  5974,  5976,  5979,
    5980,  5981,  5982,  5983,  6006,  6008,  6010,  6011,  6013,  6014,
    6016,  6018,  6019,  6021,  6023,  6024,  6027,  6030,  6032,  6036,
    6041,  6045,  6049,  6050,  6053,  6056,  6058,  6062,  6066,  6067,
    6072,  6073,  6077,  6079,  6081,  6082,  6086,  6089,  6093,  6095,
    6097,  6100,  6101,  6104,  6108,  6110,  6114,  6116,  6118,  6121,
    6124,  6126,  6128,  6130,  6132,  6134,  6137,  6140,  6142,  6144,
    6146,  6148,  6150,  6152,  6154,  6156,  6159,  6162,  6164,  6166,
    6168,  6170,  6172,  6175,  6178,  6181,  6183,  6185,  6189,  6195,
    6198,  6200,  6202,  6204,  6206,  6210,  6215,  6221,  6223,  6229,
    6233,  6236,  6238,  6242,  6245,  6248,  6253,  6255,  6257,  6259,
    6261,  6263,  6265,  6267,  6269,  6271,  6273,  6275,  6277,  6279,
    6281,  6283,  6285,  6289,  6292,  6294,  6296,  6298,  6300,  6302,
    6304,  6306,  6308,  6310,  6312,  6314,  6316,  6318,  6320,  6322,
    6324,  6326,  6328,  6330,  6332,  6334,  6336,  6338,  6340,  6342,
    6344,  6346,  6348,  6350,  6352,  6354,  6356,  6358,  6360,  6362,
    6364,  6366,  6368,  6370,  6372,  6374,  6376,  6378,  6380,  6382,
    6384,  6386,  6388,  6390,  6392,  6394,  6396,  6398,  6400,  6402,
    6404,  6406,  6408,  6410,  6412,  6414,  6416,  6418,  6420,  6422,
    6424,  6426,  6428,  6430,  6432,  6434,  6436,  6438,  6440,  6442,
    6444,  6446,  6448,  6450,  6452,  6454,  6456,  6458,  6460,  6462,
    6464,  6466,  6468,  6470,  6472,  6474,  6476,  6478,  6480,  6482,
    6484,  6486,  6488,  6490,  6492,  6494,  6496,  6498,  6500,  6502,
    6504,  6506,  6508,  6510,  6512,  6514,  6516,  6518,  6520,  6522,
    6524,  6526,  6528,  6530,  6532,  6534,  6536,  6538,  6540,  6542,
    6544,  6546,  6548,  6550,  6552,  6554,  6556,  6558,  6560,  6562,
    6564,  6566,  6568,  6570,  6572,  6574,  6576,  6578,  6580,  6582,
    6584,  6586,  6588,  6590,  6592,  6594,  6596,  6598,  6600,  6602,
    6604,  6606,  6608,  6610,  6612,  6614,  6616,  6618,  6620,  6622,
    6624,  6626,  6628,  6630,  6632,  6634,  6636,  6638,  6640,  6642,
    6644,  6646,  6648,  6650,  6652,  6654,  6656,  6658,  6660,  6662,
    6664,  6666,  6668,  6670,  6672,  6674,  6676,  6678,  6680,  6682,
    6684,  6686,  6688,  6690,  6692,  6694,  6696,  6698,  6700,  6702,
    6704,  6706,  6708,  6710,  6712,  6714,  6716,  6718,  6720,  6722,
    6724,  6726,  6728,  6730,  6732,  6734,  6736,  6738,  6740,  6742,
    6744,  6746,  6748,  6750,  6752,  6754,  6756,  6758,  6760,  6762,
    6764,  6766,  6768,  6770,  6772,  6774,  6776,  6778,  6780,  6782,
    6784,  6786,  6788,  6790,  6792,  6794,  6796,  6798,  6800,  6802,
    6804,  6806,  6808,  6810,  6812,  6814,  6816,  6818,  6820,  6822,
    6824,  6826,  6828,  6830,  6832,  6834,  6836,  6838,  6840,  6842,
    6844,  6846,  6848,  6850,  6852,  6854,  6856,  6858,  6860,  6862,
    6864,  6866,  6868,  6870,  6872,  6874,  6876,  6878,  6880,  6882,
    6884,  6886,  6888,  6890,  6892,  6894,  6896,  6898,  6900,  6902,
    6904,  6906,  6908,  6910,  6912,  6914,  6916,  6918,  6920,  6922,
    6924,  6926,  6928,  6930,  6932,  6934,  6936,  6938,  6940,  6942,
    6944,  6946,  6948,  6950,  6952,  6954,  6956,  6958,  6960,  6962,
    6964,  6966,  6968,  6970,  6972,  6974,  6976,  6978,  6980,  6982,
    6984,  6986,  6988,  6990,  6992,  6994,  6996,  6998,  7000,  7002,
    7004,  7006,  7008,  7010,  7012,  7014,  7016,  7018,  7020,  7022,
    7024,  7026,  7028,  7030,  7032,  7034,  7036,  7038,  7040,  7042,
    7044,  7046,  7049,  7052,  7055,  7058,  7062,  7069,  7075,  7084,
    7087,  7090,  7091,  7094,  7096,  7100,  7103,  7105,  7107,  7109,
    7111,  7112,  7114,  7116,  7118,  7119,  7122,  7125,  7128,  7132,
    7136,  7141,  7148,  7151,  7155,  7159,  7161,  7165,  7169,  7172,
    7175,  7177,  7178,  7181,  7185,  7186,  7189,  7192,  7195,  7198,
    7201,  7204,  7206,  7208,  7210,  7212,  7214,  7216,  7218,  7219,
    7224,  7226,  7228,  7230,  7234,  7238,  7240,  7242,  7245,  7248,
    7249,  7253,  7255,  7259,  7264,  7269,  7273,  7274,  7282,  7284,
    7287,  7289,  7291,  7293,  7295,  7297,  7299,  7300,  7306,  7308,
    7310,  7312,  7314,  7316,  7317,  7322,  7329,  7336,  7343,  7351,
    7357,  7358,  7363,  7372,  7381,  7390,  7397,  7398,  7400,  7402,
    7405,  7406,  7408,  7410,  7414,  7415,  7419,  7420,  7424,  7425,
    7429,  7430,  7434,  7436,  7438,  7440,  7442,  7444,  7446,  7448,
    7450,  7452,  7454,  7456,  7459,  7462,  7464,  7468,  7471,  7474,
    7477,  7480,  7483,  7486,  7489,  7492,  7494,  7496,  7499,  7500,
    7502,  7506,  7508,  7511,  7514,  7517,  7519,  7523,  7527,  7529,
    7531,  7535,  7537,  7541,  7546,  7552,  7557,  7564,  7571,  7573,
    7574,  7578,  7582,  7584,  7586,  7587,  7590,  7593,  7596,  7599,
    7600,  7603,  7604,  7608,  7611,  7613,  7616,  7619,  7622,  7625,
    7628,  7629,  7633,  7634,  7636,  7637,  7641,  7644,  7645,  7647,
    7650,  7651,  7653,  7658,  7663,  7669,  7672,  7676,  7677,  7679,
    7683,  7684,  7686,  7688,  7689,  7691,  7693,  7696,  7698,  7699,
    7701,  7703,  7707,  7712,  7714,  7719,  7720,  7723,  7724,  7726,
    7729,  7731,  7733,  7735,  7737,  7739,  7741,  7743,  7745,  7747,
    7750,  7753,  7757,  7759,  7761,  7763,  7765,  7767,  7769,  7771,
    7773,  7775,  7777,  7779,  7781,  7783,  7784,  7788,  7790,  7793,
    7795,  7798,  7802,  7806,  7810,  7811,  7815,  7819,  7820,  7828,
    7829,  7833,  7835,  7839,  7840,  7844,  7845,  7849,  7854,  7855,
    7858,  7862,  7863,  7867,  7868,  7872,  7877,  7882,  7884,  7886,
    7887,  7890,  7891,  7904,  7912,  7919,  7920,  7921,  7922,  7923,
    7924,  7939,  7940,  7941,  7942,  7943,  7955,  7960,  7965,  7969,
    7974,  7978,  7982,  7983,  7986,  7988,  7992,  7998,  8000,  8002,
    8003,  8005,  8007,  8008,  8011,  8012,  8014,  8018,  8024
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     675,     0,    -1,   156,    -1,    -1,   678,   676,   670,   677,
      -1,   678,   156,    -1,    -1,   156,    -1,   679,    -1,  1523,
      -1,  1071,    -1,  1154,    -1,  1156,    -1,   746,    -1,   691,
      -1,  1157,    -1,  1146,    -1,  1529,    -1,   713,    -1,   680,
      -1,  1345,    -1,  1371,    -1,  1307,    -1,  1309,    -1,   684,
      -1,  1378,    -1,   781,    -1,  1127,    -1,  1496,    -1,  1486,
      -1,   689,    -1,  1322,    -1,  1593,    -1,  1398,    -1,  1401,
      -1,  1475,    -1,  1162,    -1,  1170,    -1,   983,    -1,   900,
      -1,  1177,    -1,   682,    -1,  1394,    -1,  1532,    -1,  1165,
      -1,  1149,    -1,  1323,    -1,  1388,    -1,   780,    -1,  1493,
      -1,  1530,    -1,  1531,    -1,  1188,    -1,  1454,    -1,   773,
      -1,  1356,    -1,  1483,    -1,  1128,    -1,  1132,    -1,  1349,
      -1,  1594,    -1,  1481,    -1,  1341,    -1,  1400,    -1,  1586,
      -1,   681,   416,  1448,    -1,   121,    -1,   144,    -1,   416,
    1448,   197,   683,    -1,  1445,    -1,   671,  1450,    -1,    -1,
     170,  1448,   685,   686,    -1,    -1,   616,   687,    -1,   687,
     666,   688,    -1,   688,    -1,   671,  1450,    -1,    -1,   218,
     690,  1450,    -1,    -1,    58,   317,   584,   692,   707,   712,
      -1,    -1,    58,   458,   185,   693,   694,    -1,   695,    -1,
     694,   666,   695,    -1,   459,   160,   696,    -1,   460,   160,
     696,    -1,   461,   160,   701,    -1,   462,   160,   701,    -1,
     463,   160,   704,    -1,   464,   160,   704,    -1,   465,   160,
     699,    -1,   664,   665,    -1,   664,   697,   665,    -1,   698,
      -1,   697,   666,   698,    -1,  1448,    -1,   664,   665,    -1,
     664,   700,   665,    -1,   664,   698,   666,   698,   665,    -1,
     700,   666,   664,   698,   666,   698,   665,    -1,   664,   665,
      -1,   664,   702,   665,    -1,   703,    -1,   702,   666,   703,
      -1,  1448,   672,  1448,    -1,   664,   665,    -1,   664,   705,
     665,    -1,   706,    -1,   705,   666,   706,    -1,  1444,    -1,
     708,    -1,   707,   666,   708,    -1,   300,   160,  1443,    -1,
     297,   160,  1443,    -1,   318,   160,  1443,    -1,   303,   160,
    1443,    -1,   304,   160,  1293,    -1,   298,   160,  1293,    -1,
     305,   160,  1293,    -1,   299,   160,  1293,    -1,   315,   160,
    1293,    -1,   309,   160,  1443,    -1,   307,   160,  1443,    -1,
     308,   160,  1443,    -1,   310,   160,  1443,    -1,   311,   160,
    1443,    -1,   314,   160,  1443,    -1,   316,   160,  1293,    -1,
     312,   160,  1443,    -1,   313,   160,  1443,    -1,   319,   160,
    1430,    -1,   232,   160,   664,   709,   665,    -1,   296,   160,
    1293,    -1,   711,    -1,    -1,   710,    -1,   709,   666,   710,
      -1,  1293,    -1,   301,   160,  1443,    -1,   302,   160,  1295,
      -1,   446,   160,  1443,    -1,   447,   160,  1293,    -1,    -1,
     194,    60,  1443,    -1,    -1,    99,   950,   567,   953,  1439,
     714,   890,    -1,    -1,    -1,    99,  1049,   235,  1448,  1053,
     379,  1439,   715,   664,  1066,   665,  1054,   716,  1119,    -1,
      -1,    -1,    99,  1050,   235,  1448,  1052,   379,  1439,   717,
     664,  1066,   665,  1055,   718,  1119,    -1,    -1,    -1,    99,
    1051,   235,  1448,  1052,   379,  1439,   719,   664,  1066,   665,
    1056,   720,  1119,    -1,    -1,    99,   108,   953,  1448,   721,
     947,    -1,    -1,    99,   722,  1547,    -1,    99,   613,   953,
     738,  1513,  1518,  1084,  1080,    -1,    99,   287,   212,   853,
      -1,    99,   565,   850,    -1,    99,   500,  1450,   193,   111,
     643,  1450,   385,   664,   723,   665,    -1,   724,    -1,   723,
     666,   724,    -1,   613,  1445,    -1,   221,  1445,    -1,   108,
    1445,    -1,   395,  1445,    -1,   405,  1445,    -1,   516,  1445,
      -1,   412,  1293,    -1,    -1,   167,   953,   740,   726,   379,
     489,   727,   732,   729,   734,   143,   735,    -1,    -1,   168,
    1207,  1269,   728,   730,   731,    -1,    25,  1207,    -1,    -1,
     152,    -1,   137,   379,   512,    -1,   137,    -1,    -1,   539,
    1207,    -1,    -1,   155,  1207,    -1,    -1,   733,    -1,   379,
      81,   417,    -1,   379,    81,   368,   417,    -1,    -1,    77,
    1445,    -1,    -1,   736,   737,    -1,   798,    -1,   800,    -1,
     796,    -1,   817,    -1,   835,    -1,   837,    -1,   832,    -1,
     802,    -1,   804,    -1,   805,    -1,   806,    -1,   807,    -1,
     809,    -1,   739,    -1,    -1,  1448,   672,  1448,    -1,  1448,
      -1,    -1,   741,   743,    -1,    -1,   742,   744,    -1,    77,
    1445,    -1,   266,   534,    -1,   370,   534,    -1,    93,   534,
      -1,   432,   534,   111,    -1,   344,   534,   111,    -1,   745,
      -1,   743,    -1,   134,    -1,  1213,   134,    -1,   534,   493,
     127,    -1,   534,   493,   248,    -1,    -1,    51,   740,   747,
     748,    -1,    -1,   664,   749,   665,    -1,    -1,   750,    -1,
     750,   666,  1207,    -1,  1207,    -1,    -1,   752,    -1,   752,
     666,   754,    -1,   754,    -1,    -1,  1448,   753,  1008,    -1,
      -1,   756,    -1,   756,   666,   757,    -1,   757,    -1,   758,
     753,  1448,  1008,    -1,    -1,   249,    -1,   394,    -1,   239,
      -1,    -1,   759,   795,   670,    -1,   795,   670,    -1,   760,
     795,   670,    -1,    -1,   761,   762,   670,    -1,    -1,   124,
     792,   763,  1008,   793,    -1,   124,  1448,    86,   194,   769,
      -1,    -1,   124,   766,   215,   194,   764,   767,   795,    -1,
      -1,   124,  1448,   105,   194,   765,  1188,    -1,   172,    -1,
      95,    -1,   768,    -1,   767,   666,   768,    -1,   772,    -1,
    1293,    -1,   770,    -1,   523,   771,  1446,    -1,    -1,   622,
      -1,   769,    -1,  1448,    -1,   524,    -1,  1213,   196,    -1,
     522,    -1,   509,   774,   776,    -1,  1448,    -1,   770,    -1,
      -1,   774,    -1,    -1,   502,   777,    -1,   779,   160,   778,
      -1,   777,   666,   779,   160,   778,    -1,  1429,    -1,  1230,
      -1,  1435,    -1,    66,    -1,   552,    -1,    90,    -1,    92,
      -1,    91,    -1,    56,    -1,   490,    -1,   569,    -1,    76,
      -1,   106,    -1,   335,    -1,   352,    -1,   468,   775,   776,
      -1,   208,   782,   135,   783,    -1,    -1,   103,    -1,   537,
      -1,   784,    -1,    86,   788,   789,    -1,   785,    -1,   784,
     666,   785,    -1,   786,   160,   787,    -1,  1448,    -1,   671,
    1450,    -1,   375,    -1,   486,    -1,   778,    -1,   790,    -1,
     789,   666,   790,    -1,   786,   160,   791,    -1,    66,    -1,
     552,    -1,    90,    -1,    92,    -1,    91,    -1,    56,    -1,
     490,    -1,   569,    -1,    76,    -1,   106,    -1,   335,    -1,
     352,    -1,   473,    -1,  1448,    -1,   792,   666,  1448,    -1,
      -1,    -1,   125,   794,  1207,    -1,   798,    -1,   800,    -1,
     796,    -1,   817,    -1,   835,    -1,   837,    -1,   832,    -1,
     802,    -1,   804,    -1,   805,    -1,   806,    -1,   807,    -1,
     809,    -1,    -1,   230,   797,   812,   154,   230,    -1,    -1,
     799,   679,    -1,    -1,   475,   801,  1207,    -1,    -1,   803,
     841,    -1,   271,  1449,    -1,   257,  1449,    -1,   382,  1448,
      -1,    -1,   182,   810,  1448,   246,   808,   811,    -1,    68,
    1448,    -1,    -1,   364,   197,    -1,   197,    -1,  1448,    -1,
     811,   666,  1448,    -1,    -1,    -1,    -1,   813,  1207,   814,
     576,   760,   815,   816,    -1,    -1,   151,   812,    -1,   150,
     760,    -1,   818,    -1,   821,    -1,    -1,    -1,    54,   819,
    1207,   820,   823,   831,   154,    54,    -1,    -1,    54,   822,
     824,   831,   154,    54,    -1,   825,    -1,   823,   825,    -1,
     828,    -1,   824,   828,    -1,    -1,    -1,   635,   826,  1207,
     827,   576,   760,    -1,    -1,    -1,   635,   829,  1207,   830,
     576,   760,    -1,    -1,   150,   760,    -1,    -1,  1449,   673,
     833,   841,   834,    -1,    -1,  1449,    -1,    -1,  1449,   673,
     836,   839,   834,    -1,    -1,   838,   839,    -1,    -1,    32,
     840,   761,   759,   154,    -1,   293,   760,   154,   293,    -1,
      -1,    -1,   637,   842,  1207,   843,   143,   760,   154,   637,
      -1,    -1,    -1,   456,   760,   609,   844,  1207,   845,   154,
     456,    -1,    31,    -1,     9,    -1,   241,    -1,   610,    -1,
     130,    -1,   875,   877,    -1,   875,    58,   872,   856,    -1,
     875,     7,   872,   851,   860,    -1,    -1,   615,   287,   212,
    1448,    -1,   875,     7,   872,   863,    -1,   875,   144,   872,
     863,    -1,   876,   855,   866,    -1,   876,   855,   869,    -1,
       7,   873,    -1,     7,   874,    -1,    -1,   857,   858,    -1,
     859,    -1,   858,   859,    -1,   858,   666,   859,    -1,   878,
      -1,   879,    -1,   880,    -1,    -1,   861,    -1,   862,    -1,
     861,   862,    -1,   861,   666,   862,    -1,   878,    -1,   879,
      -1,   880,    -1,   881,    -1,   884,    -1,   886,    -1,   888,
      -1,   885,    -1,   887,    -1,    -1,   864,    -1,   865,    -1,
     864,   865,    -1,   864,   666,   865,    -1,   878,    -1,   879,
      -1,   880,    -1,   886,    -1,   888,    -1,    -1,   867,    -1,
     868,    -1,   867,   868,    -1,   867,   666,   868,    -1,   878,
      -1,   882,    -1,   883,    -1,   884,    -1,   886,    -1,   888,
      -1,   885,    -1,    -1,   870,    -1,   871,    -1,   870,   871,
      -1,   870,   666,   871,    -1,   878,    -1,   886,    -1,   888,
      -1,   110,  1445,    -1,   599,  1445,    -1,   439,  1445,    -1,
    1448,    -1,  1448,    -1,   433,    -1,   435,    -1,   368,     4,
      -1,   237,  1335,   889,    -1,    26,  1335,   889,    -1,   324,
    1335,   889,    -1,   177,  1335,   889,    -1,   600,  1335,   889,
      -1,   440,  1335,   889,    -1,   365,  1335,  1294,    -1,    77,
    1335,  1445,    -1,  1363,   158,  1335,   961,    -1,   184,  1335,
     889,    -1,   631,    -1,   371,    -1,  1296,    -1,  1442,    -1,
     664,   891,    -1,   954,   896,   893,    -1,   276,  1439,    -1,
     664,   276,  1439,   665,    -1,   966,   665,   954,   896,   893,
      -1,    -1,   896,   945,   665,   892,  1535,    -1,    -1,    -1,
    1409,   946,   945,   894,  1533,    -1,    -1,  1409,   946,   664,
     945,   665,   895,  1535,    -1,   897,    -1,    -1,   898,    -1,
      -1,   402,   899,   902,    -1,    -1,   402,   901,   902,    -1,
      48,   903,   913,   914,   921,    -1,   905,   264,   906,   664,
     907,   665,    -1,    -1,   905,   216,   904,   911,    -1,   431,
     911,    -1,   431,   910,    -1,   281,   911,    -1,   281,   910,
      -1,    -1,   278,    -1,    -1,    12,   160,  1294,    -1,    -1,
     908,    -1,   909,    -1,   908,   666,   909,    -1,  1448,    -1,
      73,   664,   907,   665,    -1,   664,   919,   665,    -1,   664,
     919,   665,    -1,    -1,   403,  1294,    -1,    -1,    -1,   556,
      48,   905,   216,   912,   915,   920,    -1,    -1,   556,    48,
     905,   264,   906,   664,   917,   665,   916,   920,    -1,   918,
      -1,   917,   666,   918,    -1,  1448,    -1,  1210,    -1,    -1,
     555,  1294,    -1,    -1,   664,   922,   665,    -1,   923,    -1,
     922,   666,   923,    -1,    -1,   402,   924,   925,   926,   942,
     937,    -1,  1448,    -1,    -1,    -1,   621,   273,   575,   927,
     929,    -1,    -1,   621,   249,   928,   930,    -1,   328,    -1,
     932,    -1,   932,    -1,   664,   931,   665,    -1,   932,    -1,
     931,   666,   932,    -1,    -1,    -1,   664,   933,   935,   934,
     665,    -1,   936,    -1,   935,   666,   936,    -1,   328,    -1,
    1210,    -1,    -1,   664,   938,   665,    -1,   939,    -1,   938,
     666,   939,    -1,    -1,   556,   940,   941,   942,    -1,  1450,
      -1,    -1,   943,    -1,   943,   944,    -1,   944,    -1,   565,
    1335,  1448,    -1,  1363,   158,  1335,   961,    -1,   365,  1335,
    1294,    -1,   323,  1335,  1296,    -1,   341,  1335,  1296,    -1,
     111,   136,  1335,  1445,    -1,   235,   136,  1335,  1445,    -1,
      77,  1335,  1445,    -1,   494,  1199,  1203,  1195,    -1,    -1,
      21,    -1,    -1,   948,    -1,   949,    -1,   948,   949,    -1,
     960,    -1,   959,    -1,    -1,   951,    -1,   952,    -1,   952,
     951,    -1,   570,    -1,    -1,   230,  1213,   171,    -1,    -1,
     956,    -1,   957,    -1,   957,   955,    -1,   957,    -1,   957,
     956,    -1,   957,   666,   956,    -1,   158,  1335,   961,    -1,
     323,  1335,  1295,    -1,   341,  1335,  1295,    -1,    28,  1335,
    1293,    -1,   405,  1335,  1445,    -1,    77,  1335,  1445,    -1,
      83,  1335,  1445,    -1,    84,  1335,  1445,    -1,    27,  1335,
    1295,    -1,   396,  1335,  1293,    -1,   396,  1335,   125,    -1,
     541,  1335,  1293,    -1,   541,  1335,   125,    -1,   542,  1335,
    1293,    -1,   542,  1335,   125,    -1,   543,  1335,  1293,    -1,
     543,  1335,   125,    -1,    63,  1335,  1293,    -1,   568,  1335,
    1293,    -1,   129,  1335,  1293,    -1,   484,  1335,   963,    -1,
      -1,   604,  1335,   958,   664,  1387,   665,    -1,   959,    -1,
     960,    -1,   242,  1335,   964,    -1,   111,   136,  1335,  1445,
      -1,   235,   136,  1335,  1445,    -1,   565,  1335,  1448,    -1,
     548,   139,    -1,   548,   333,    -1,    87,  1335,  1445,    -1,
     263,  1335,  1293,    -1,  1021,  1011,  1335,  1013,    -1,  1021,
      71,  1335,  1020,    -1,  1450,    -1,  1450,    -1,   125,    -1,
     187,    -1,   148,    -1,    82,    -1,   441,    -1,    80,    -1,
     370,    -1,   186,    -1,   267,    -1,   551,    -1,   436,    -1,
     123,    -1,   247,    -1,   967,    -1,   968,    -1,   967,   666,
     968,    -1,   969,    -1,   970,    -1,   975,   971,    -1,   975,
    1038,    -1,  1044,  1068,  1053,   664,  1066,   665,  1054,    -1,
    1050,  1047,  1068,  1052,   664,  1066,   665,  1055,    -1,  1051,
    1047,  1068,  1052,   664,  1066,   665,  1056,    -1,   973,  1045,
    1068,  1053,   664,  1066,   665,  1054,    -1,   973,   193,   264,
    1068,   664,  1066,   665,  1038,    -1,   973,   972,    -1,    -1,
     972,    -1,    64,   664,  1207,   665,    -1,    -1,   974,    -1,
      89,  1068,    -1,    -1,  1438,   976,   977,    -1,   985,  1005,
      -1,   985,  1019,   978,    21,   664,   984,   665,   982,   979,
      -1,    -1,   203,    15,    -1,    -1,   980,    -1,   980,   981,
      -1,   981,    -1,   605,    -1,   605,   264,    -1,    77,  1445,
      -1,  1213,   373,    -1,   373,    -1,  1037,   264,    -1,    -1,
     630,    -1,   549,    -1,   400,   664,   984,   665,    -1,  1207,
      -1,   993,  1003,   999,    -1,   994,  1004,   999,    -1,   189,
     995,   999,    -1,    40,    -1,    40,  1002,    -1,    45,    -1,
      44,    -1,   989,  1002,  1024,    -1,   989,  1024,    -1,   990,
    1002,  1025,    -1,   990,  1025,    -1,    35,  1002,    -1,    35,
      -1,   991,  1002,  1024,    -1,   992,  1002,  1025,    -1,   623,
    1002,    -1,   651,  1003,   999,    -1,   115,    -1,   580,   997,
      -1,   577,   997,    -1,   112,   997,    -1,   581,    -1,    42,
    1003,    -1,   988,    -1,   329,    -1,   289,    -1,   292,   623,
      -1,   292,   991,  1024,    -1,   583,  1024,    -1,   574,  1003,
    1024,    -1,   331,  1024,    -1,   290,  1024,    -1,   123,   995,
     999,    -1,   376,   995,   999,    -1,   187,   995,   999,    -1,
      -1,   159,   986,   664,  1070,   665,  1024,    -1,    -1,   502,
     987,   664,  1070,   665,  1024,    -1,   292,  1024,    -1,   498,
      -1,   261,    -1,   206,    -1,   205,    -1,   410,    -1,   349,
      -1,   280,    -1,   348,    -1,   411,    -1,   350,    -1,    62,
      -1,   358,    -1,   355,    62,    -1,   989,   627,    -1,   624,
      -1,   355,   624,    -1,   377,    -1,   358,   624,    -1,   355,
      62,   627,    -1,   358,   627,    -1,   247,    -1,   582,    -1,
     514,    -1,   330,    -1,    34,    -1,   436,    -1,   142,    -1,
     142,   415,    -1,    -1,  1002,    -1,   996,    -1,   664,   374,
     666,   374,   665,    -1,    -1,   664,   374,   665,    -1,    -1,
     664,   665,    -1,   664,   374,   665,    -1,    -1,  1000,    -1,
    1000,  1001,    -1,  1001,    -1,   510,    -1,   608,    -1,   652,
      -1,   664,   291,   665,    -1,   664,   595,   665,    -1,   664,
     122,   665,    -1,   664,   374,   665,    -1,    -1,  1002,    -1,
      -1,   996,    -1,    -1,  1006,    -1,  1006,  1007,    -1,  1007,
      -1,   373,    -1,  1213,   373,    -1,   125,  1010,    -1,   379,
     610,  1009,    -1,    27,    -1,   498,   125,   622,    -1,  1037,
     264,    -1,   605,    -1,   605,   264,    -1,    77,  1445,    -1,
      71,  1017,    -1,    75,   125,    -1,    75,   187,    -1,    75,
     148,    -1,   548,   125,    -1,   548,   139,    -1,   548,   333,
      -1,   985,  1018,    -1,   369,   998,    -1,  1009,    -1,  1428,
      -1,    62,   502,    -1,    61,    -1,  1450,    -1,    35,    -1,
    1012,    -1,   125,    -1,    -1,  1011,  1013,    -1,  1450,    -1,
      35,    -1,  1015,    -1,   125,    -1,  1450,    -1,    -1,    71,
    1020,    -1,    -1,    71,  1017,    -1,  1017,    -1,   125,    -1,
      -1,   125,    -1,    23,    -1,    35,    23,    -1,    23,    35,
      -1,   602,    -1,   602,    35,    -1,    35,   602,    -1,    -1,
    1022,    -1,  1023,    -1,    49,    -1,  1011,  1012,  1025,    -1,
      35,    -1,    35,  1011,  1012,    -1,    -1,    35,    -1,    -1,
     664,  1294,  1027,   665,    -1,    22,    -1,   131,    -1,   476,
      -1,    -1,  1028,    -1,  1028,  1029,    -1,  1029,    -1,  1294,
      -1,  1031,  1030,    -1,  1032,    -1,  1033,   666,  1032,    -1,
    1031,   657,  1031,    -1,  1033,    -1,  1034,    -1,    -1,   274,
    1035,    -1,    -1,   419,    -1,   442,  1439,  1039,  1041,  1042,
      -1,    -1,   664,  1040,   665,    -1,  1040,   666,  1448,    -1,
    1448,    -1,    -1,   320,   198,    -1,   320,   401,    -1,   320,
     511,    -1,    -1,   379,   610,  1043,    -1,   379,   130,  1043,
      -1,   379,   610,  1043,   379,   130,  1043,    -1,   379,   130,
    1043,   379,   610,  1043,    -1,   471,    -1,    52,    -1,   502,
     373,    -1,   370,     6,    -1,   502,   125,    -1,  1046,    -1,
     419,   264,    -1,   605,  1047,    -1,   264,    -1,   235,    -1,
      -1,  1046,    -1,   262,    -1,   235,    -1,   234,    -1,    -1,
     605,    -1,   199,    -1,   520,    -1,    -1,  1052,    -1,  1052,
    1060,    -1,    -1,  1057,    -1,    -1,  1059,    -1,    -1,  1058,
      -1,  1062,    -1,  1057,  1062,    -1,  1063,    -1,  1058,  1063,
      -1,  1064,    -1,  1059,  1064,    -1,   616,  1065,    -1,   593,
    1065,    -1,   263,  1335,  1293,    -1,    77,  1445,    -1,  1061,
      -1,  1060,    -1,  1061,    -1,  1061,    -1,   638,   399,  1442,
      -1,    47,    -1,   487,    -1,   216,    -1,  1066,   666,  1067,
    1287,    -1,  1067,  1287,    -1,  1448,    -1,  1448,   664,   374,
     665,    -1,    -1,  1438,    -1,    -1,   672,  1448,    -1,  1426,
      -1,  1070,   666,  1426,    -1,    -1,    14,   567,  1439,  1072,
    1092,    -1,    -1,    14,   108,  1091,  1073,   948,    -1,    14,
     108,  1448,   611,   111,   136,   354,    -1,    -1,    14,   421,
     740,  1074,   741,    -1,    -1,    14,   200,   740,  1075,   741,
      -1,    -1,    14,  1555,  1550,  1076,  1557,    -1,    -1,    14,
    1550,  1077,  1557,    -1,    -1,    14,  1550,   167,   740,  1078,
    1088,  1089,   729,   734,  1090,    -1,    14,   565,   852,    -1,
      14,   287,   212,   854,    -1,    14,   565,   849,    -1,    14,
     565,   848,    -1,    14,   500,  1450,   385,   664,   723,   665,
      -1,  1079,  1513,  1518,  1084,  1080,    -1,  1079,  1087,   228,
      48,   573,    -1,  1484,    -1,    14,   613,  1317,   738,    -1,
      -1,  1081,    -1,  1082,    -1,  1081,  1082,    -1,     5,   607,
      -1,     5,   286,    -1,  1083,    -1,  1083,   245,  1294,   120,
      -1,  1083,   362,    -1,  1083,   125,    -1,   405,   174,   739,
      -1,    -1,   638,  1085,    -1,  1085,  1086,    -1,  1086,    -1,
     322,  1293,    -1,   326,  1293,    -1,   321,  1293,    -1,   327,
    1293,    -1,   613,   664,   665,    -1,    -1,   379,   489,   727,
      -1,   733,    -1,   379,   489,   727,   733,    -1,    -1,   452,
     584,   740,    -1,    -1,   143,   735,    -1,    -1,  1448,    -1,
    1093,    -1,  1093,   898,    -1,  1093,  1100,    -1,  1094,    -1,
    1112,   666,  1094,    -1,    -1,  1112,    -1,  1111,    -1,  1112,
     666,  1111,    -1,   138,   565,    -1,   233,   565,    -1,  1102,
      -1,   144,   402,  1109,    -1,   437,   402,  1164,  1101,    -1,
      -1,   383,   402,  1164,  1101,  1095,  1164,    -1,    17,   402,
    1164,  1101,    -1,    -1,    64,   402,  1101,  1096,  1159,    -1,
      -1,   454,   402,  1164,  1101,  1097,  1151,    -1,    69,   402,
    1164,  1294,    -1,   591,   402,  1101,    -1,  1105,    -1,   169,
     402,  1110,   638,   567,  1439,  1098,    -1,   138,   402,  1101,
     565,    -1,   233,   402,  1101,   565,    -1,    -1,  1099,    -1,
     638,   620,    -1,   641,   620,    -1,   451,   404,    -1,    13,
      -1,  1109,    -1,    -1,     7,   402,  1164,  1103,  1104,    -1,
      -1,   664,   922,   665,    -1,   403,  1294,    -1,    -1,   453,
     402,  1164,  1106,  1107,    -1,    -1,    -1,  1109,  1108,   246,
     664,   922,   665,    -1,  1110,    -1,  1109,   666,  1110,    -1,
    1448,    -1,  1114,    -1,  1111,   666,  1114,    -1,  1111,   666,
    1118,    -1,  1118,    -1,  1112,   666,  1118,    -1,     7,  1122,
      -1,  1113,   969,  1125,    -1,     7,   970,    -1,  1113,   664,
     966,   665,    -1,    -1,    58,  1122,  1438,  1115,   975,  1125,
      -1,    -1,    -1,   345,  1122,  1438,  1116,   977,  1117,  1125,
      -1,   144,  1122,  1438,  1124,    -1,   144,   193,   264,  1438,
      -1,   144,   419,   264,    -1,   144,  1046,  1438,    -1,   137,
     262,    -1,   152,   262,    -1,    14,  1122,  1438,   502,   125,
    1428,    -1,    14,  1122,  1438,   144,   125,    -1,   452,  1126,
    1439,    -1,   452,  1046,  1438,   584,  1438,    -1,    96,   584,
    1011,  1013,  1018,    -1,   955,    -1,   192,    -1,  1281,    -1,
     611,   404,    -1,  1120,    -1,  1121,    -1,  1099,    -1,    -1,
    1121,    -1,  1120,    -1,  1121,  1120,    -1,  1120,  1121,    -1,
      12,  1335,   125,    -1,    12,  1335,  1448,    -1,   286,  1335,
     125,    -1,   286,  1335,  1448,    -1,    -1,    74,    -1,    -1,
     231,    -1,    -1,   471,    -1,    52,    -1,    -1,     9,  1448,
      -1,   186,    -1,    -1,   584,    -1,   160,    -1,    21,    -1,
     540,   204,    -1,   547,   204,    -1,  1129,  1130,    -1,   547,
     512,  1141,   712,    -1,   540,   512,  1141,    -1,    -1,  1144,
    1136,  1131,   712,    -1,   540,   586,  1133,    -1,    -1,  1134,
      -1,  1135,    -1,  1134,   666,  1135,    -1,   638,    88,   515,
      -1,   434,   381,    -1,   434,   644,    -1,  1137,  1138,  1139,
    1140,    -1,    -1,   613,   160,  1445,    -1,    -1,   405,   160,
    1445,    -1,    -1,   126,   160,  1445,    -1,    -1,   407,   160,
    1445,    -1,    -1,  1142,    -1,  1143,    -1,  1142,   666,  1143,
      -1,   535,    -1,   448,    -1,    -1,   609,  1145,    -1,   711,
      -1,  1145,   666,   711,    -1,   527,   160,  1445,    -1,   525,
     160,  1445,    -1,   526,    -1,    -1,    63,  1477,  1147,  1314,
    1148,    -1,    -1,   430,    -1,   176,    -1,    -1,   454,  1164,
    1477,  1150,  1314,  1151,    -1,    -1,  1152,    -1,  1153,    -1,
    1153,  1152,    -1,   430,    -1,   176,    -1,   614,    -1,    -1,
      17,  1164,  1477,  1155,  1314,    -1,    36,  1445,    -1,    -1,
      64,  1477,  1158,  1314,  1159,    -1,    -1,  1160,    -1,  1161,
      -1,  1161,  1160,    -1,   430,    -1,   180,    -1,   332,    -1,
     176,    -1,    59,    -1,   194,   611,    -1,    -1,   383,  1164,
    1477,  1163,  1314,    -1,    -1,   372,    -1,   283,    -1,    -1,
     452,  1477,  1166,  1168,    -1,   452,   613,   738,  1167,    -1,
    1451,   584,  1451,    -1,  1167,   666,  1451,   584,  1451,    -1,
    1169,    -1,  1168,   666,  1169,    -1,  1439,   584,  1439,    -1,
      -1,    50,   235,  1171,  1172,   249,  1176,    -1,  1173,    -1,
    1175,    -1,  1174,    -1,  1173,   666,  1174,    -1,  1439,  1185,
      -1,  1439,  1183,  1185,    -1,  1448,    -1,   125,    -1,    -1,
     282,   235,   246,    50,  1178,  1179,    -1,  1182,    -1,  1180,
      -1,  1181,    -1,  1180,   666,  1181,    -1,  1439,  1185,  1187,
      -1,  1439,  1183,  1185,  1187,    -1,    -1,   402,  1184,   664,
    1101,   665,    -1,  1186,    -1,    -1,  1046,   664,  1265,   665,
      -1,    -1,   231,   270,    -1,  1189,    -1,   494,  1192,  1533,
      -1,   664,  1190,   665,  1535,    -1,   494,  1192,    -1,   664,
    1190,   665,    -1,   494,  1255,  1195,    -1,   664,  1191,   665,
      -1,  1193,  1284,  1288,  1202,    -1,  1193,  1305,  1202,    -1,
    1193,  1304,  1196,  1275,  1278,  1276,  1284,  1288,  1299,  1304,
    1202,    -1,    -1,  1194,  1199,  1203,    -1,  1197,  1275,  1278,
    1276,  1284,  1288,  1299,  1202,    -1,   197,  1198,    -1,    -1,
    1196,    -1,  1246,    -1,   145,    -1,    -1,  1200,    -1,  1200,
    1201,    -1,  1201,    -1,  1546,    -1,   532,    -1,   530,    -1,
      -1,   194,   610,    -1,   286,   249,   504,   343,    -1,  1203,
     666,  1204,    -1,  1204,    -1,   659,    -1,  1433,    -1,  1207,
    1205,    -1,    -1,    21,  1448,    -1,    21,  1445,    -1,  1448,
      -1,  1445,    -1,    -1,   664,   665,    -1,  1207,  1211,  1207,
      -1,  1207,   649,  1207,    -1,  1207,  1212,  1207,    -1,   368,
    1207,    -1,  1208,   254,   590,    -1,  1208,   254,  1213,   590,
      -1,  1208,   254,   179,    -1,  1208,   254,  1213,   179,    -1,
    1208,   254,   606,    -1,  1208,   254,  1213,   606,    -1,  1208,
      -1,  1208,   254,   373,    -1,  1208,   254,  1213,   373,    -1,
    1208,  1215,  1209,    -1,  1208,  1215,  1216,   664,  1542,   665,
      -1,  1209,    -1,  1210,   249,   664,  1542,   665,    -1,  1210,
    1213,   249,   664,  1542,   665,    -1,  1210,   249,   664,  1207,
     665,    -1,  1210,   249,   664,  1207,   666,  1239,   665,    -1,
    1210,  1213,   249,   664,  1207,   665,    -1,  1210,  1213,   249,
     664,  1207,   666,  1239,   665,    -1,  1210,    33,  1210,    19,
    1209,    -1,  1210,  1213,    33,  1210,    19,  1209,    -1,  1210,
     518,   276,  1210,    -1,  1210,   276,  1217,  1277,    -1,  1210,
    1213,   276,  1217,  1277,    -1,  1210,   443,  1210,    -1,  1210,
    1213,   443,  1210,    -1,  1210,    -1,  1210,   655,  1210,    -1,
    1210,   656,  1210,    -1,  1210,   505,  1210,    -1,  1210,   506,
    1210,    -1,  1210,   658,  1210,    -1,  1210,   657,  1210,    -1,
    1210,   658,   245,  1207,  1269,    -1,  1210,   657,   245,  1207,
    1269,    -1,  1210,   659,  1210,    -1,  1210,   660,  1210,    -1,
    1210,   661,  1210,    -1,  1210,   141,  1210,    -1,  1210,   346,
    1210,    -1,  1210,   662,  1210,    -1,  1217,    -1,   391,    -1,
     388,    -1,    19,    -1,    18,    -1,   368,    -1,   367,    -1,
     667,    -1,   367,    -1,   160,    -1,   161,    -1,   201,    -1,
     214,    -1,   268,    -1,   295,    -1,   360,    -1,    13,    -1,
      20,    -1,  1435,    -1,  1218,    -1,  1219,    -1,  1222,    -1,
    1220,    -1,  1217,    71,  1450,    -1,  1429,    -1,  1427,    -1,
    1230,    -1,  1229,    -1,  1217,   390,  1217,    -1,   658,  1217,
      -1,   657,  1217,    -1,   663,  1217,    -1,  1214,  1217,    -1,
     664,  1542,   665,    -1,   664,  1207,   665,    -1,   664,  1207,
     666,  1239,   665,    -1,   485,   664,  1207,   666,  1239,   665,
      -1,   171,   664,  1542,   665,    -1,   668,  1448,  1207,   669,
      -1,   320,  1240,    10,   664,  1210,  1223,   665,    -1,    35,
    1217,    -1,    55,   664,  1207,    21,  1237,   665,    -1,    54,
    1242,  1244,  1243,   154,    -1,    96,   664,  1207,   666,  1237,
     665,    -1,    96,   664,  1207,   616,  1012,   665,    -1,   125,
     664,  1435,   665,    -1,   621,   664,  1436,   665,    -1,   245,
    1207,  1269,   658,  1207,    -1,  1435,   259,  1446,    -1,  1435,
     260,  1446,    -1,    62,   664,  1239,   665,    -1,    62,   664,
    1239,   616,  1012,   665,    -1,   104,  1206,    -1,   115,   664,
    1207,   665,    -1,   120,   664,  1207,   665,    -1,   226,   664,
    1207,   665,    -1,   241,   664,  1207,   666,  1207,   666,  1207,
     666,  1207,   665,    -1,   245,   664,  1207,   666,  1207,   665,
      -1,   245,   664,  1207,   666,  1207,   666,  1239,   665,    -1,
     272,   664,  1207,   666,  1207,   665,    -1,   340,   664,  1207,
     665,    -1,   347,   664,  1207,   665,    -1,   478,   664,  1207,
     666,  1207,   665,    -1,   492,   664,  1207,   665,    -1,   580,
     664,  1207,   665,    -1,   577,   664,  1207,   665,    -1,   577,
     664,  1207,   666,  1207,   665,    -1,   589,   664,  1207,   665,
      -1,   589,   664,   269,  1207,   197,  1207,   665,    -1,   589,
     664,   585,  1207,   197,  1207,   665,    -1,   589,   664,    46,
    1207,   197,  1207,   665,    -1,   589,   664,   269,   197,  1207,
     665,    -1,   589,   664,   585,   197,  1207,   665,    -1,   589,
     664,    46,   197,  1207,   665,    -1,   589,   664,  1207,   197,
    1207,   665,    -1,   613,   664,   665,    -1,   651,   664,  1207,
     665,    -1,     8,   664,  1207,   666,  1207,   665,    -1,     8,
     664,  1207,   666,   245,  1207,  1269,   665,    -1,   102,  1206,
      -1,   107,   998,    -1,   113,   664,  1207,   666,   245,  1207,
    1269,   665,    -1,   114,   664,  1207,   666,   245,  1207,  1269,
     665,    -1,   178,   664,  1269,   197,  1207,   665,    -1,   207,
     664,  1271,   666,  1207,   665,    -1,  1009,    -1,   413,   664,
    1210,   249,  1207,   665,    -1,   553,   664,  1207,   666,  1207,
     665,    -1,   553,   664,  1207,   666,   245,  1207,  1269,   665,
      -1,   557,   664,  1207,   666,  1207,   666,  1207,   665,    -1,
     557,   664,  1207,   666,  1207,   665,    -1,   557,   664,  1207,
     197,  1207,   194,  1207,   665,    -1,   557,   664,  1207,   197,
    1207,   665,    -1,   563,   998,    -1,   578,   664,  1270,   666,
    1207,   666,  1207,   665,    -1,   579,   664,  1270,   666,  1207,
     666,  1207,   665,    -1,   617,  1206,    -1,   619,   998,    -1,
     618,   998,    -1,    23,   664,  1207,   665,    -1,    61,   664,
    1207,   665,    -1,    69,   664,  1239,   665,    -1,    72,   664,
    1207,   665,    -1,   108,   664,   665,    -1,   230,   664,  1207,
     666,  1207,   666,  1207,   665,    -1,   195,   664,  1207,   666,
    1207,   665,    -1,   195,   664,  1207,   666,  1207,   666,  1207,
     665,    -1,   336,   664,  1207,   665,    -1,   346,   664,  1207,
     666,  1207,   665,    -1,   405,   664,  1207,   665,    -1,   428,
     664,  1207,   665,    -1,   456,   664,  1207,   666,  1207,   665,
      -1,   457,   664,  1207,   666,  1207,   666,  1207,   665,    -1,
     476,   664,  1207,   665,    -1,   486,   664,   665,    -1,   591,
     664,  1207,   666,  1207,   665,    -1,   633,   664,  1207,   665,
      -1,   633,   664,  1207,   666,  1207,   665,    -1,   634,   664,
    1207,  1036,   665,    -1,   634,   664,  1207,    21,    62,  1026,
    1036,   665,    -1,   634,   664,  1207,    21,    35,  1026,   665,
      -1,   634,   664,  1207,   666,  1293,   666,  1293,   666,  1293,
     665,    -1,  1221,    -1,    93,   664,  1207,   666,  1207,   665,
      -1,   205,   664,  1238,   665,    -1,   280,   664,  1239,   665,
      -1,   348,   664,  1239,   665,    -1,   349,   664,  1239,   665,
      -1,   350,   664,  1239,   665,    -1,   410,   664,  1207,   666,
    1207,   665,    -1,   411,   664,  1239,   665,    -1,  1442,   664,
    1226,   665,    -1,  1448,   672,  1448,   664,  1238,   665,    -1,
    1224,  1225,    -1,   249,    44,   343,    -1,    -1,   249,   356,
     266,   343,    -1,    -1,   638,   429,   173,    -1,    -1,  1227,
      -1,  1228,    -1,  1227,   666,  1228,    -1,  1207,  1205,    -1,
      29,   664,  1236,   665,    -1,    29,   664,   140,  1236,   665,
      -1,    38,   664,  1236,   665,    -1,    39,   664,  1236,   665,
      -1,   654,   664,  1236,   665,    -1,   653,   664,  1236,   666,
    1236,   665,    -1,    41,   664,  1236,   665,    -1,    97,   664,
    1274,   659,   665,    -1,    97,   664,  1236,   665,    -1,    97,
     664,   140,  1239,   665,    -1,   342,   664,  1236,   665,    -1,
     342,   664,   140,  1236,   665,    -1,   325,   664,  1236,   665,
      -1,   325,   664,   140,  1236,   665,    -1,   546,   664,  1236,
     665,    -1,   626,   664,  1236,   665,    -1,   545,   664,  1236,
     665,    -1,   628,   664,  1236,   665,    -1,   558,   664,  1236,
     665,    -1,   558,   664,   140,  1236,   665,    -1,   213,   664,
    1232,  1239,  1234,  1233,   665,    -1,   671,  1231,    -1,  1450,
     503,  1207,    -1,  1450,    -1,   671,  1462,  1450,  1069,    -1,
      -1,   140,    -1,    -1,   496,  1426,    -1,    -1,   389,    48,
    1235,    -1,  1235,   666,  1434,    -1,  1434,    -1,  1274,  1207,
      -1,    35,  1003,    -1,    62,  1003,  1024,    -1,   358,  1003,
      -1,   510,    -1,   510,   247,    -1,   608,    -1,   608,   247,
      -1,   115,    -1,   580,   997,    -1,   112,   997,    -1,   123,
     995,    -1,   261,    -1,    -1,  1239,    -1,  1207,    -1,  1239,
     666,  1207,    -1,  1241,    -1,   664,  1241,   665,    -1,  1435,
      -1,  1241,   666,  1435,    -1,    -1,  1207,    -1,    -1,   150,
    1207,    -1,   635,  1207,   576,  1207,    -1,  1244,   635,  1207,
     576,  1207,    -1,  1253,    -1,  1249,    -1,  1248,    -1,  1245,
      -1,   668,  1448,  1245,   669,    -1,  1247,    -1,  1248,   666,
    1247,    -1,  1245,  1250,  1245,    -1,  1245,   550,  1253,    -1,
    1245,  1250,  1245,   379,  1207,    -1,  1245,   550,  1253,   379,
    1207,    -1,  1245,  1250,  1245,   616,   664,  1268,   665,    -1,
    1245,   356,   258,  1253,    -1,  1245,   272,  1258,   258,  1245,
     379,  1207,    -1,  1245,   272,  1258,   258,  1253,   616,   664,
    1268,   665,    -1,  1245,   356,   272,  1258,   258,  1253,    -1,
    1245,   478,  1258,   258,  1245,   379,  1207,    -1,  1245,   478,
    1258,   258,  1253,   616,   664,  1268,   665,    -1,  1245,   356,
     478,  1258,   258,  1253,    -1,   258,    -1,   238,   258,    -1,
     100,   258,    -1,    -1,  1252,    -1,   402,   664,  1268,   665,
      -1,  1439,  1251,  1273,  1264,    -1,   494,  1199,  1203,  1195,
      -1,   664,  1254,   665,  1273,    -1,  1257,  1536,    -1,  1254,
     604,  1539,  1540,    -1,    -1,  1256,  1544,  1203,    -1,  1248,
      -1,    -1,   392,    -1,    -1,   194,   258,    -1,   194,   389,
      48,    -1,   194,   212,    48,    -1,   192,    -1,   231,    -1,
    1260,  1046,  1259,   664,  1267,   665,    -1,   615,  1046,  1259,
     664,  1265,   665,    -1,  1261,    -1,  1262,  1261,    -1,    -1,
    1262,    -1,  1263,    -1,    -1,  1267,    -1,  1448,    -1,   419,
      -1,  1266,    -1,  1267,   666,  1266,    -1,  1448,    -1,  1268,
     666,  1448,    -1,  1270,    -1,   116,    -1,   117,    -1,   118,
      -1,   119,    -1,   223,    -1,   224,    -1,   225,    -1,   338,
      -1,   339,    -1,   491,    -1,   650,    -1,   120,    -1,   633,
      -1,   226,    -1,   340,    -1,   347,    -1,   428,    -1,   492,
      -1,   336,    -1,   651,    -1,   115,    -1,   580,    -1,   577,
      -1,   112,    -1,    -1,    21,    -1,   160,    -1,    -1,  1272,
    1448,    -1,    -1,    13,    -1,    -1,   636,  1207,    -1,    -1,
     217,  1207,    -1,   165,  1217,    -1,    -1,    -1,   212,    48,
    1279,  1280,    -1,  1279,   666,  1434,    -1,  1434,    -1,    -1,
     639,    -1,   640,    -1,   389,    48,  1282,    -1,  1282,   666,
    1283,    -1,  1283,    -1,  1436,  1287,    -1,    -1,  1285,    -1,
     389,    48,  1286,    -1,  1286,   666,  1434,    -1,  1434,    -1,
      -1,    22,    -1,   131,    -1,    -1,  1289,    -1,   277,  1290,
      -1,  1291,    -1,  1291,   666,  1291,    -1,  1291,   378,  1291,
      -1,  1448,    -1,  1427,    -1,   595,    -1,   291,    -1,   374,
      -1,    -1,   277,  1291,    -1,   374,    -1,   219,    -1,   291,
      -1,   595,    -1,   122,    -1,   188,    -1,   374,    -1,   219,
      -1,   291,    -1,   595,    -1,  1297,    -1,   374,    -1,   595,
      -1,   291,    -1,   122,    -1,   188,    -1,   374,    -1,   595,
      -1,   291,    -1,  1297,    -1,  1298,    -1,   122,    -1,   188,
      -1,    -1,   421,    16,   664,  1300,   665,    -1,    -1,  1301,
      -1,  1301,   666,  1301,    -1,   374,    -1,  1302,   666,  1303,
      -1,  1303,    -1,   671,  1450,    -1,  1450,    -1,    -1,  1305,
      -1,   246,  1306,    -1,   393,  1447,  1014,  1410,  1413,    -1,
     146,  1447,    -1,  1302,    -1,   143,  1308,  1203,    -1,    -1,
      -1,   144,  1318,  1477,  1317,  1310,  1314,  1124,    -1,    -1,
      -1,   144,   235,  1448,   379,  1439,  1311,  1312,  1119,    -1,
     144,   108,  1317,  1448,    -1,   144,   200,  1317,  1448,   672,
    1448,    -1,   144,   200,  1317,  1448,    -1,   144,   421,  1317,
     740,    -1,   144,   613,  1317,   738,  1512,    -1,    -1,   144,
     629,  1317,  1313,  1314,  1124,    -1,   144,   167,  1317,   740,
      -1,   144,   588,  1317,   740,    -1,   144,   565,   875,  1319,
      -1,   144,   287,   212,   876,  1319,    -1,   144,   500,  1317,
    1450,    -1,  1315,    -1,  1314,   666,  1315,    -1,  1439,    -1,
    1440,    -1,  1316,   666,  1440,    -1,    -1,   230,   171,    -1,
      -1,   570,    -1,    -1,  1320,    -1,  1321,    -1,  1320,  1321,
      -1,  1319,   666,  1321,    -1,   886,    -1,   888,    -1,   241,
    1324,  1123,  1326,  1439,  1251,  1327,  1340,    -1,   241,  1324,
    1123,  1326,  1439,  1251,   502,  1342,  1340,    -1,   241,  1324,
    1123,  1326,  1439,  1251,  1328,  1340,    -1,   457,  1325,  1326,
    1439,  1251,  1327,    -1,   457,  1325,  1326,  1439,  1251,   502,
    1342,    -1,   457,  1325,  1326,  1439,  1251,  1328,    -1,    -1,
     294,    -1,   128,    -1,   220,    -1,  1344,    -1,   128,    -1,
      -1,   246,    -1,  1330,    -1,   664,   665,  1330,    -1,   664,
    1329,   665,  1330,    -1,  1331,    -1,   664,   665,  1331,    -1,
     664,  1329,   665,  1331,    -1,  1329,   666,  1432,    -1,  1432,
      -1,  1332,  1333,    -1,   945,  1533,    -1,   664,   945,   665,
    1535,    -1,   622,    -1,   621,    -1,  1333,   666,  1336,    -1,
    1336,    -1,   160,    -1,   503,    -1,    -1,  1334,    -1,   664,
    1337,   665,    -1,    -1,  1338,    -1,  1338,   666,  1339,    -1,
    1339,    -1,  1207,    -1,   125,    -1,    -1,   379,   147,   264,
     610,  1342,    -1,   610,  1344,  1123,  1246,   502,  1342,  1275,
    1284,  1292,    -1,  1342,   666,  1343,    -1,  1343,    -1,  1436,
    1334,  1339,    -1,    -1,   294,    -1,   130,  1347,   197,  1439,
    1251,  1275,  1284,  1292,    -1,   130,  1347,  1316,   197,  1246,
    1275,    -1,   130,  1347,   197,  1316,   616,  1246,  1275,    -1,
      -1,   672,   659,    -1,    -1,  1348,  1347,    -1,   430,    -1,
     294,    -1,   231,    -1,    -1,   591,  1351,  1350,  1315,    -1,
      -1,   567,    -1,    -1,  1353,    -1,  1354,    -1,  1353,   666,
    1354,    -1,    98,    -1,   333,    -1,    43,   252,    -1,    94,
     562,    -1,   397,   181,    -1,   253,    -1,   561,    -1,   519,
      -1,    13,    -1,    -1,   194,   429,   374,    -1,    -1,   507,
    1357,  1358,    -1,   109,  1369,    -1,  1365,   564,  1364,  1369,
      -1,  1365,   587,  1364,  1369,    -1,   166,  1364,  1369,    -1,
     567,   544,  1364,  1369,    -1,   382,   564,  1364,  1369,    -1,
     409,    -1,   158,   962,  1361,    -1,   158,    13,  1361,    -1,
    1365,    73,  1366,  1439,  1364,  1369,    -1,  1362,   288,    -1,
     512,   222,    -1,    -1,    36,   166,  1367,  1368,  1359,  1288,
      -1,    -1,   445,   166,  1367,  1368,  1360,  1288,   712,    -1,
    1048,  1366,  1439,  1364,  1275,    -1,  1363,   157,    -1,   420,
      -1,    97,   664,   659,   665,   632,    -1,    97,   664,   659,
     665,   163,    -1,   632,  1288,    -1,   163,  1288,    -1,   425,
      -1,   424,  1352,  1355,  1288,    -1,  1461,   544,  1370,    -1,
    1365,   423,    -1,  1461,   625,  1370,    -1,  1011,  1369,    -1,
      72,  1369,    -1,   211,    -1,   211,   194,  1451,    -1,    99,
     108,   953,  1448,    -1,    99,   567,  1439,    -1,    99,   629,
    1439,    -1,   317,   544,    -1,   512,   544,   712,    -1,    99,
     421,   740,    -1,    99,   200,   740,    -1,    99,   588,   740,
      -1,   421,   544,  1369,    -1,   200,   544,  1369,    -1,   421,
      70,   740,    -1,   200,    70,   740,    -1,    99,   167,   740,
      -1,    99,   613,   738,  1451,    -1,   544,    -1,   351,    -1,
     288,    -1,   317,    -1,    35,    -1,    -1,   548,    -1,    -1,
    1366,  1448,    -1,    -1,   198,    -1,   197,    -1,   249,    -1,
      -1,   249,  1445,    -1,    -1,   197,  1295,    -1,    -1,   276,
    1445,    -1,   636,  1207,    -1,    -1,   276,  1445,    -1,   636,
    1207,    -1,    -1,  1375,  1439,  1372,  1377,    -1,    -1,  1375,
    1376,  1373,  1374,    -1,  1188,    -1,  1322,    -1,  1323,    -1,
    1341,    -1,  1345,    -1,   194,    87,  1294,    -1,   131,    -1,
     132,    -1,    -1,   176,    -1,   403,    -1,   195,   160,  1450,
      -1,    -1,  1426,    -1,  1448,    -1,    -1,   190,  1164,  1379,
    1380,    -1,    -1,    -1,  1477,  1381,  1387,  1382,  1383,    -1,
    1385,    -1,    -1,   638,   434,   286,    -1,    -1,   194,  1384,
     175,    -1,  1385,   666,  1386,    -1,  1386,    -1,   162,   288,
      -1,   158,   288,    -1,   202,   288,    -1,   513,   288,    -1,
      35,   288,    -1,   444,   288,   712,    -1,   429,    50,    -1,
     222,    -1,   420,    -1,   288,    -1,   544,    -1,   133,    -1,
     469,    -1,   384,    -1,    -1,  1314,    -1,    -1,   467,  1389,
    1390,    -1,  1390,   666,  1391,    -1,  1391,    -1,    -1,   512,
    1392,  1393,   712,    -1,   317,    -1,   429,    50,    -1,    -1,
      13,    -1,    -1,   427,  1395,  1396,    -1,  1362,   288,  1397,
      -1,   584,  1445,    -1,    31,  1207,    -1,   265,  1399,  1207,
      -1,    -1,    87,    -1,   429,    -1,   615,  1448,    -1,    -1,
      -1,    -1,    -1,   282,  1406,  1402,  1408,  1407,   236,  1447,
    1403,  1409,   246,   567,  1439,  1251,  1404,  1014,  1405,  1416,
    1410,  1413,  1417,  1419,  1422,    -1,   111,    -1,   648,    -1,
      -1,   283,    -1,    -1,    85,    -1,   294,    -1,    -1,   457,
      -1,   231,    -1,    -1,    73,  1411,    -1,  1411,  1412,    -1,
    1412,    -1,   572,    48,  1426,    -1,   387,   153,    48,  1426,
      -1,   153,    48,  1426,    -1,   164,    48,  1426,    -1,    -1,
     279,  1414,    -1,  1414,  1415,    -1,  1415,    -1,   572,    48,
    1426,    -1,   538,    48,  1426,    -1,    -1,   483,   228,    48,
    1426,    -1,    -1,   231,   374,  1418,    -1,   279,    -1,   483,
      -1,    -1,   664,  1420,   665,    -1,   664,   665,    -1,  1420,
     666,  1421,    -1,  1421,    -1,  1436,    -1,   671,  1450,    -1,
      -1,   502,  1423,    -1,  1423,   666,  1424,    -1,  1424,    -1,
    1436,  1334,  1339,    -1,   573,    -1,   357,    -1,   598,   573,
      -1,  1425,  1446,    -1,  1446,    -1,   219,    -1,    37,    -1,
     398,    -1,  1429,    -1,   658,  1430,    -1,   657,  1430,    -1,
    1425,    -1,  1430,    -1,  1431,    -1,   373,    -1,   179,    -1,
     590,    -1,   219,    -1,    37,    -1,   598,   219,    -1,   598,
      37,    -1,   374,    -1,   291,    -1,   595,    -1,   122,    -1,
     188,    -1,   115,   573,    -1,   580,   573,    -1,   577,   573,
      -1,  1436,    -1,  1433,    -1,  1448,   672,   659,    -1,  1448,
     672,  1448,   672,   659,    -1,  1207,  1287,    -1,  1448,    -1,
    1437,    -1,  1448,    -1,  1437,    -1,  1448,   672,  1448,    -1,
     672,  1448,   672,  1448,    -1,  1448,   672,  1448,   672,  1448,
      -1,  1448,    -1,  1448,   672,  1448,   672,  1448,    -1,  1448,
     672,  1448,    -1,   672,  1448,    -1,  1448,    -1,  1448,   672,
    1448,    -1,   672,  1448,    -1,  1448,  1346,    -1,  1448,   672,
    1448,  1346,    -1,  1448,    -1,   227,    -1,   229,    -1,  1445,
      -1,  1443,    -1,   573,    -1,   573,    -1,   573,    -1,  1442,
      -1,  1452,    -1,  1442,    -1,  1453,    -1,  1448,    -1,  1445,
      -1,   275,    -1,  1450,    -1,  1450,   671,  1450,    -1,   104,
    1206,    -1,  1453,    -1,     5,    -1,    23,    -1,    15,    -1,
      30,    -1,    32,    -1,    49,    -1,    50,    -1,    61,    -1,
      63,    -1,    68,    -1,    77,    -1,    79,    -1,    93,    -1,
     121,    -1,   143,    -1,   154,    -1,   170,    -1,   190,    -1,
     191,    -1,   195,    -1,   204,    -1,   215,    -1,   218,    -1,
     221,    -1,   244,    -1,   266,    -1,   370,    -1,   382,    -1,
     385,    -1,   395,    -1,   399,    -1,   400,    -1,   412,    -1,
     414,    -1,   416,    -1,   451,    -1,   454,    -1,   467,    -1,
     470,    -1,   479,    -1,   488,    -1,   493,    -1,   500,    -1,
     508,    -1,   510,    -1,   516,    -1,   512,    -1,   517,    -1,
     540,    -1,   547,    -1,   591,    -1,   602,    -1,   603,    -1,
     643,    -1,   646,    -1,   611,    -1,     6,    -1,     8,    -1,
       9,    -1,    10,    -1,    11,    -1,    12,    -1,    16,    -1,
      20,    -1,    25,    -1,    27,    -1,    26,    -1,    28,    -1,
      29,    -1,    36,    -1,    40,    -1,    43,    -1,    45,    -1,
      44,    -1,    47,    -1,    53,    -1,    56,    -1,    57,    -1,
      59,    -1,    60,    -1,    65,    -1,    67,    -1,    66,    -1,
      69,    -1,    70,    -1,    72,    -1,    76,    -1,    75,    -1,
      73,    -1,    78,    -1,    80,    -1,    81,    -1,    82,    -1,
      83,    -1,    84,    -1,    85,    -1,    87,    -1,    88,    -1,
      90,    -1,    92,    -1,    91,    -1,    94,    -1,    98,    -1,
     101,    -1,   103,    -1,   106,    -1,   111,    -1,   110,    -1,
     112,    -1,   115,    -1,   120,    -1,   126,    -1,   127,    -1,
     129,    -1,   133,    -1,   135,    -1,   136,    -1,   137,    -1,
     138,    -1,   139,    -1,   146,    -1,   147,    -1,   148,    -1,
     155,    -1,   159,    -1,   158,    -1,   157,    -1,   162,    -1,
     163,    -1,   165,    -1,   167,    -1,   166,    -1,   168,    -1,
     169,    -1,   173,    -1,   174,    -1,   175,    -1,   176,    -1,
     177,    -1,   181,    -1,   180,    -1,   196,    -1,   152,    -1,
     198,    -1,   183,    -1,   184,    -1,   185,    -1,   186,    -1,
     187,    -1,   202,    -1,   206,    -1,   205,    -1,   207,    -1,
     211,    -1,   209,    -1,   216,    -1,   222,    -1,   226,    -1,
     228,    -1,   232,    -1,   248,    -1,   233,    -1,   234,    -1,
     237,    -1,   243,    -1,   252,    -1,   253,    -1,   255,    -1,
     256,    -1,   242,    -1,   261,    -1,   263,    -1,   267,    -1,
     270,    -1,   273,    -1,   274,    -1,   280,    -1,   281,    -1,
     283,    -1,   285,    -1,   287,    -1,   288,    -1,   323,    -1,
     317,    -1,   319,    -1,   300,    -1,   304,    -1,   301,    -1,
     302,    -1,   318,    -1,   303,    -1,   306,    -1,   298,    -1,
     305,    -1,   299,    -1,   315,    -1,   309,    -1,   307,    -1,
     308,    -1,   310,    -1,   311,    -1,   312,    -1,   313,    -1,
     314,    -1,   296,    -1,   321,    -1,   322,    -1,   324,    -1,
     326,    -1,   327,    -1,   332,    -1,   333,    -1,   334,    -1,
     335,    -1,   336,    -1,   337,    -1,   340,    -1,   341,    -1,
     345,    -1,   343,    -1,   347,    -1,   348,    -1,   349,    -1,
     350,    -1,   351,    -1,   352,    -1,   354,    -1,   353,    -1,
     355,    -1,   358,    -1,   359,    -1,   362,    -1,   364,    -1,
     363,    -1,   371,    -1,   365,    -1,   366,    -1,   375,    -1,
     377,    -1,   378,    -1,   380,    -1,   381,    -1,   396,    -1,
     397,    -1,   401,    -1,   404,    -1,   403,    -1,   405,    -1,
     406,    -1,   407,    -1,   408,    -1,   409,    -1,   410,    -1,
     411,    -1,   417,    -1,   418,    -1,   420,    -1,   422,    -1,
     423,    -1,   424,    -1,   425,    -1,   426,    -1,   428,    -1,
     429,    -1,   430,    -1,   433,    -1,   437,    -1,   438,    -1,
     440,    -1,   439,    -1,   441,    -1,   444,    -1,   445,    -1,
     446,    -1,   447,    -1,   448,    -1,   450,    -1,   453,    -1,
     455,    -1,   458,    -1,   459,    -1,   460,    -1,   461,    -1,
     462,    -1,   463,    -1,   464,    -1,   465,    -1,   469,    -1,
     472,    -1,   473,    -1,   474,    -1,   476,    -1,   480,    -1,
     481,    -1,   482,    -1,   483,    -1,   486,    -1,   484,    -1,
     485,    -1,   487,    -1,   489,    -1,   490,    -1,   492,    -1,
     498,    -1,   497,    -1,   499,    -1,   511,    -1,   504,    -1,
     513,    -1,   515,    -1,   518,    -1,   519,    -1,   525,    -1,
     526,    -1,   527,    -1,   530,    -1,   529,    -1,   532,    -1,
     535,    -1,   537,    -1,   539,    -1,   541,    -1,   542,    -1,
     543,    -1,   544,    -1,   548,    -1,   551,    -1,   552,    -1,
     553,    -1,   554,    -1,   556,    -1,   555,    -1,   559,    -1,
     560,    -1,   561,    -1,   562,    -1,   569,    -1,   564,    -1,
     568,    -1,   565,    -1,   570,    -1,   571,    -1,   574,    -1,
     575,    -1,   586,    -1,   587,    -1,   577,    -1,   578,    -1,
     579,    -1,   580,    -1,   592,    -1,   593,    -1,   594,    -1,
     200,    -1,   596,    -1,   597,    -1,   600,    -1,   599,    -1,
     606,    -1,   609,    -1,   613,    -1,   614,    -1,   620,    -1,
     625,    -1,   629,    -1,   622,    -1,   632,    -1,   631,    -1,
     633,    -1,   641,    -1,   642,    -1,   634,    -1,   645,    -1,
     647,    -1,   648,    -1,   651,    -1,   502,  1455,    -1,  1464,
    1457,    -1,   586,  1466,    -1,  1460,  1456,    -1,   405,  1334,
    1473,    -1,   405,  1334,   405,   664,  1473,   665,    -1,   405,
     194,  1451,  1334,  1473,    -1,   405,   194,  1451,  1334,   405,
     664,  1473,   665,    -1,  1463,  1457,    -1,   586,  1466,    -1,
      -1,   666,  1458,    -1,  1459,    -1,  1458,   666,  1459,    -1,
    1460,  1463,    -1,  1464,    -1,   209,    -1,   283,    -1,   499,
      -1,    -1,   209,    -1,   283,    -1,   499,    -1,    -1,   209,
     672,    -1,   283,   672,    -1,   499,   672,    -1,  1465,  1334,
    1474,    -1,  1465,  1334,  1474,    -1,   671,  1450,  1334,  1207,
      -1,   671,   671,  1462,  1465,  1334,  1474,    -1,  1011,  1016,
      -1,   353,  1334,  1207,    -1,   353,  1013,  1018,    -1,  1448,
      -1,  1448,   672,  1448,    -1,   125,   672,  1448,    -1,  1467,
    1470,    -1,  1469,  1468,    -1,  1471,    -1,    -1,   666,  1467,
      -1,   255,   274,  1472,    -1,    -1,   666,  1469,    -1,   434,
     381,    -1,   434,   644,    -1,   434,   596,    -1,   434,    78,
      -1,   455,   434,    -1,   497,    -1,   573,    -1,  1207,    -1,
     125,    -1,   379,    -1,    13,    -1,    35,    -1,    -1,   286,
    1477,  1476,  1478,    -1,   567,    -1,   564,    -1,  1479,    -1,
    1478,   666,  1479,    -1,  1439,  1273,  1480,    -1,   434,    -1,
     644,    -1,   294,   644,    -1,   434,   283,    -1,    -1,   607,
    1482,  1477,    -1,   508,    -1,    14,   243,  1485,    -1,   481,
    1450,   317,   264,    -1,   215,  1439,   382,  1273,    -1,   215,
    1441,    68,    -1,    -1,   215,  1441,   434,  1487,  1488,  1275,
    1288,    -1,  1489,    -1,  1448,  1490,    -1,   186,    -1,   364,
      -1,   186,    -1,   364,    -1,   418,    -1,   267,    -1,    -1,
    1492,  1491,   664,  1338,   665,    -1,   160,    -1,   201,    -1,
     268,    -1,   214,    -1,   295,    -1,    -1,   477,   738,  1494,
    1495,    -1,  1500,   379,  1499,  1511,   197,  1512,    -1,  1500,
     379,   200,  1511,   197,  1512,    -1,  1500,   379,   421,  1511,
     197,  1512,    -1,    13,  1501,   666,   210,   386,   197,  1512,
      -1,   426,   379,  1451,   197,  1512,    -1,    -1,   210,   738,
    1497,  1498,    -1,  1500,   379,  1499,  1511,   584,  1513,  1518,
    1519,    -1,  1500,   379,   200,  1511,   584,  1513,  1518,  1519,
      -1,  1500,   379,   421,  1511,   584,  1513,  1518,  1519,    -1,
     426,   379,  1451,   584,  1513,  1520,    -1,    -1,   567,    -1,
    1502,    -1,    13,  1501,    -1,    -1,   420,    -1,  1503,    -1,
    1502,   666,  1503,    -1,    -1,   494,  1504,  1515,    -1,    -1,
     241,  1505,  1515,    -1,    -1,   610,  1506,  1515,    -1,    -1,
     442,  1507,  1515,    -1,   130,    -1,   612,    -1,   235,    -1,
      14,    -1,    99,    -1,   144,    -1,   170,    -1,   450,    -1,
     508,    -1,   422,    -1,   183,    -1,   210,   386,    -1,   507,
     109,    -1,   559,    -1,    99,   570,   564,    -1,   286,   564,
      -1,   458,   512,    -1,   458,    67,    -1,    99,   629,    -1,
     507,   629,    -1,    99,   482,    -1,    14,   482,    -1,    99,
     613,    -1,   167,    -1,   588,    -1,    99,   565,    -1,    -1,
      19,    -1,  1510,  1508,  1509,    -1,  1510,    -1,   554,   573,
      -1,   256,   573,    -1,    65,   573,    -1,   659,    -1,  1448,
     672,   659,    -1,   659,   672,   659,    -1,  1439,    -1,  1451,
      -1,  1512,   666,  1451,    -1,  1514,    -1,  1513,   666,  1514,
      -1,  1451,   228,    48,   573,    -1,  1451,   228,    48,   405,
     573,    -1,  1451,   228,   638,  1450,    -1,  1451,   228,   638,
    1450,    21,  1445,    -1,  1451,   228,   638,  1450,    48,  1445,
      -1,  1451,    -1,    -1,   664,  1516,   665,    -1,  1516,   666,
    1517,    -1,  1517,    -1,  1448,    -1,    -1,   466,  1509,    -1,
     466,   536,    -1,   466,   645,    -1,   466,   366,    -1,    -1,
     638,  1521,    -1,    -1,   638,   210,   386,    -1,  1521,  1522,
      -1,  1522,    -1,   210,   386,    -1,   322,  1293,    -1,   326,
    1293,    -1,   321,  1293,    -1,   327,  1293,    -1,    -1,    32,
    1524,  1525,    -1,    -1,   642,    -1,    -1,    19,   370,    57,
      -1,    19,    57,    -1,    -1,   449,    -1,   370,   449,    -1,
      -1,   488,    -1,    79,  1525,  1526,  1527,    -1,   479,  1525,
    1526,  1527,    -1,   479,  1525,   584,  1528,  1448,    -1,   488,
    1448,    -1,   449,   488,  1448,    -1,    -1,  1534,    -1,   604,
    1539,  1189,    -1,    -1,  1534,    -1,  1537,    -1,    -1,  1537,
      -1,  1538,    -1,  1285,  1288,    -1,  1289,    -1,    -1,   140,
      -1,    13,    -1,   494,  1255,  1195,    -1,   664,  1191,   665,
    1536,    -1,  1540,    -1,  1541,   604,  1539,  1540,    -1,    -1,
    1543,  1541,    -1,    -1,  1545,    -1,  1545,  1546,    -1,  1546,
      -1,   550,    -1,   220,    -1,   140,    -1,   533,    -1,   528,
      -1,   529,    -1,   531,    -1,    13,    -1,  1552,  1548,    -1,
    1551,  1549,    -1,  1553,  1550,  1557,    -1,  1557,    -1,  1572,
      -1,  1581,    -1,  1575,    -1,   725,    -1,  1557,    -1,  1572,
      -1,  1581,    -1,  1575,    -1,  1574,    -1,   725,    -1,  1551,
      -1,  1552,    -1,    -1,   127,   160,  1451,    -1,  1554,    -1,
    1554,  1555,    -1,  1555,    -1,   391,   457,    -1,    12,   160,
     597,    -1,    12,   160,   334,    -1,    12,   160,   571,    -1,
      -1,   534,   493,   127,    -1,   534,   493,   248,    -1,    -1,
    1556,   629,  1439,  1558,  1559,    21,  1561,    -1,    -1,   664,
    1560,   665,    -1,  1448,    -1,  1560,   666,  1448,    -1,    -1,
    1562,  1563,  1569,    -1,    -1,  1567,  1564,  1533,    -1,   664,
    1565,   665,  1535,    -1,    -1,  1566,  1567,    -1,   664,  1565,
     665,    -1,    -1,   494,  1568,  1192,    -1,    -1,   638,    64,
     386,    -1,   638,    53,    64,   386,    -1,   638,   283,    64,
     386,    -1,   191,    -1,   414,    -1,    -1,  1570,  1450,    -1,
      -1,   588,   740,   846,   847,   379,  1439,   194,   149,   485,
    1571,  1573,   795,    -1,    11,   200,  1448,   474,   965,   517,
    1445,    -1,   200,  1448,   474,   965,   517,  1445,    -1,    -1,
      -1,    -1,    -1,    -1,   200,   740,   664,  1576,   751,   665,
    1577,   474,  1578,  1008,  1579,   742,  1580,   795,    -1,    -1,
      -1,    -1,    -1,   421,   740,  1582,   664,  1583,   755,   665,
    1584,   742,  1585,   795,    -1,   646,  1589,  1588,  1590,    -1,
     646,   154,  1588,  1592,    -1,   646,   416,  1588,    -1,   646,
      79,  1588,  1591,    -1,   646,   479,  1588,    -1,   646,   438,
    1587,    -1,    -1,    96,   647,    -1,  1426,    -1,  1426,   666,
    1426,    -1,  1426,   666,  1426,   666,  1293,    -1,    32,    -1,
     540,    -1,    -1,   258,    -1,   472,    -1,    -1,   380,   406,
      -1,    -1,   560,    -1,   560,   194,   337,    -1,   244,   408,
    1448,   517,  1445,    -1,   603,   408,  1448,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1598,  1598,  1611,  1610,  1635,  1642,  1644,  1648,  1649,
    1654,  1655,  1656,  1657,  1658,  1659,  1660,  1661,  1662,  1663,
    1664,  1665,  1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,
    1674,  1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,
    1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,
    1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,
    1704,  1705,  1706,  1707,  1708,  1712,  1722,  1723,  1727,  1747,
    1754,  1765,  1764,  1775,  1777,  1781,  1782,  1786,  1799,  1798,
    1818,  1817,  1831,  1830,  1845,  1846,  1849,  1856,  1863,  1870,
    1877,  1884,  1892,  1901,  1907,  1914,  1921,  1929,  1939,  1945,
    1951,  1959,  1967,  1973,  1980,  1987,  1995,  2008,  2014,  2021,
    2028,  2036,  2047,  2048,  2052,  2056,  2060,  2064,  2074,  2078,
    2082,  2087,  2098,  2103,  2107,  2111,  2115,  2119,  2123,  2127,
    2132,  2136,  2141,  2174,  2179,  2186,  2189,  2191,  2192,  2196,
    2202,  2206,  2222,  2226,  2237,  2241,  2259,  2258,  2304,  2309,
    2303,  2316,  2321,  2314,  2328,  2333,  2326,  2339,  2338,  2351,
    2350,  2358,  2365,  2369,  2373,  2390,  2391,  2395,  2399,  2403,
    2407,  2411,  2416,  2420,  2428,  2427,  2459,  2458,  2467,  2476,
    2477,  2483,  2489,  2499,  2505,  2513,  2515,  2524,  2525,  2529,
    2535,  2544,  2545,  2553,  2553,  2611,  2612,  2613,  2614,  2615,
    2616,  2617,  2618,  2619,  2620,  2621,  2622,  2623,  2627,  2645,
    2655,  2669,  2688,  2689,  2693,  2694,  2699,  2701,  2703,  2705,
    2707,  2709,  2711,  2717,  2718,  2719,  2723,  2727,  2735,  2734,
    2747,  2749,  2752,  2754,  2758,  2764,  2773,  2775,  2779,  2780,
    2785,  2804,  2834,  2836,  2840,  2841,  2845,  2874,  2875,  2876,
    2877,  2881,  2882,  2886,  2887,  2892,  2895,  2923,  2921,  3006,
    3024,  3023,  3103,  3099,  3177,  3178,  3183,  3185,  3190,  3213,
    3224,  3228,  3250,  3251,  3255,  3259,  3272,  3278,  3284,  3293,
    3306,  3332,  3338,  3339,  3345,  3346,  3351,  3357,  3370,  3372,
    3392,  3398,  3400,  3402,  3404,  3406,  3408,  3410,  3412,  3414,
    3416,  3418,  3420,  3425,  3439,  3456,  3457,  3459,  3464,  3470,
    3479,  3485,  3494,  3502,  3530,  3538,  3540,  3549,  3554,  3560,
    3569,  3577,  3579,  3581,  3583,  3585,  3587,  3589,  3591,  3593,
    3595,  3597,  3599,  3601,  3606,  3626,  3650,  3652,  3651,  3662,
    3663,  3664,  3665,  3666,  3667,  3668,  3669,  3670,  3671,  3672,
    3673,  3674,  3679,  3678,  3689,  3689,  3745,  3744,  3803,  3803,
    3825,  3884,  3934,  3959,  3958,  3984,  4007,  4009,  4010,  4014,
    4032,  4053,  4062,  4101,  4053,  4130,  4132,  4133,  4137,  4138,
    4143,  4154,  4142,  4207,  4206,  4220,  4221,  4225,  4226,  4231,
    4240,  4230,  4291,  4300,  4290,  4346,  4359,  4364,  4363,  4401,
    4402,  4407,  4406,  4440,  4440,  4459,  4458,  4508,  4525,  4534,
    4524,  4593,  4602,  4590,  4645,  4647,  4652,  4654,  4656,  4673,
    4678,  4684,  4691,  4692,  4700,  4706,  4715,  4721,  4727,  4728,
    4732,  4732,  4737,  4738,  4739,  4743,  4744,  4745,  4748,  4750,
    4754,  4755,  4756,  4760,  4761,  4762,  4763,  4764,  4765,  4766,
    4767,  4768,  4771,  4773,  4777,  4778,  4779,  4783,  4784,  4785,
    4786,  4787,  4790,  4792,  4796,  4797,  4798,  4802,  4803,  4804,
    4805,  4806,  4807,  4808,  4811,  4813,  4817,  4818,  4819,  4823,
    4824,  4825,  4830,  4838,  4846,  4854,  4866,  4878,  4883,  4888,
    4896,  4904,  4912,  4920,  4928,  4936,  4944,  4957,  4970,  4984,
    4998,  5003,  5016,  5017,  5070,  5071,  5074,  5089,  5107,  5112,
    5110,  5124,  5126,  5125,  5136,  5135,  5148,  5185,  5186,  5191,
    5190,  5209,  5208,  5225,  5229,  5237,  5236,  5239,  5241,  5243,
    5245,  5250,  5251,  5257,  5258,  5275,  5276,  5280,  5281,  5285,
    5304,  5314,  5330,  5344,  5345,  5361,  5363,  5362,  5367,  5365,
    5376,  5377,  5381,  5399,  5417,  5418,  5434,  5449,  5471,  5472,
    5477,  5476,  5500,  5516,  5538,  5537,  5555,  5554,  5574,  5596,
    5600,  5629,  5641,  5642,  5647,  5658,  5646,  5683,  5684,  5688,
    5701,  5724,  5737,  5763,  5764,  5769,  5768,  5805,  5818,  5819,
    5823,  5824,  5828,  5830,  5836,  5838,  5840,  5842,  5844,  5846,
    5855,  5862,  5863,  5867,  5868,  5872,  5873,  5877,  5878,  5882,
    5883,  5887,  5888,  5892,  5896,  5897,  5900,  5902,  5906,  5907,
    5911,  5912,  5913,  5917,  5922,  5927,  5932,  5937,  5942,  5947,
    5952,  5957,  5962,  5977,  5983,  5998,  6003,  6018,  6024,  6042,
    6047,  6052,  6057,  6062,  6068,  6067,  6093,  6094,  6095,  6100,
    6105,  6110,  6115,  6117,  6119,  6125,  6133,  6151,  6168,  6194,
    6212,  6213,  6214,  6215,  6216,  6217,  6221,  6222,  6223,  6227,
    6228,  6229,  6230,  6235,  6242,  6243,  6247,  6248,  6252,  6253,
    6260,  6265,  6271,  6277,  6283,  6302,  6308,  6310,  6314,  6322,
    6323,  6327,  6332,  6331,  6356,  6357,  6374,  6376,  6379,  6381,
    6385,  6386,  6390,  6396,  6402,  6403,  6404,  6405,  6413,  6415,
    6416,  6423,  6439,  6468,  6473,  6479,  6485,  6490,  6495,  6500,
    6505,  6512,  6519,  6526,  6533,  6539,  6545,  6552,  6559,  6565,
    6581,  6583,  6588,  6617,  6622,  6627,  6633,  6639,  6644,  6649,
    6654,  6660,  6666,  6673,  6679,  6685,  6691,  6697,  6704,  6703,
    6712,  6711,  6719,  6725,  6731,  6739,  6740,  6741,  6747,  6748,
    6749,  6750,  6751,  6755,  6759,  6760,  6764,  6765,  6769,  6770,
    6771,  6772,  6773,  6777,  6778,  6779,  6780,  6781,  6785,  6790,
    6792,  6798,  6802,  6807,  6811,  6820,  6821,  6825,  6826,  6827,
    6835,  6836,  6840,  6841,  6845,  6846,  6847,  6851,  6852,  6853,
    6854,  6857,  6858,  6863,  6867,  6871,  6872,  6876,  6877,  6881,
    6886,  6887,  6888,  6896,  6897,  6903,  6909,  6915,  6921,  6922,
    6935,  6941,  6947,  6953,  6958,  6963,  6972,  6993,  6999,  7006,
    7011,  7012,  7016,  7024,  7028,  7029,  7033,  7034,  7038,  7047,
    7051,  7052,  7056,  7064,  7065,  7069,  7070,  7074,  7075,  7079,
    7080,  7085,  7086,  7087,  7091,  7099,  7104,  7113,  7117,  7122,
    7127,  7132,  7137,  7142,  7150,  7151,  7156,  7155,  7168,  7169,
    7173,  7176,  7177,  7178,  7179,  7183,  7191,  7198,  7199,  7203,
    7213,  7214,  7218,  7219,  7222,  7224,  7228,  7240,  7241,  7245,
    7252,  7265,  7266,  7268,  7270,  7276,  7281,  7287,  7293,  7300,
    7310,  7311,  7312,  7313,  7314,  7318,  7322,  7323,  7327,  7328,
    7332,  7333,  7337,  7338,  7339,  7343,  7344,  7348,  7352,  7359,
    7371,  7372,  7376,  7377,  7381,  7382,  7386,  7387,  7391,  7392,
    7396,  7397,  7401,  7402,  7406,  7407,  7411,  7413,  7417,  7418,
    7422,  7426,  7427,  7441,  7442,  7443,  7447,  7448,  7452,  7458,
    7472,  7473,  7477,  7478,  7482,  7483,  7491,  7490,  7530,  7529,
    7543,  7557,  7556,  7575,  7574,  7593,  7592,  7611,  7605,  7625,
    7624,  7657,  7662,  7667,  7672,  7677,  7685,  7687,  7694,  7698,
    7707,  7708,  7712,  7713,  7717,  7723,  7729,  7735,  7749,  7755,
    7762,  7766,  7767,  7771,  7772,  7776,  7782,  7788,  7794,  7803,
    7817,  7818,  7819,  7820,  7824,  7825,  7837,  7838,  7842,  7843,
    7847,  7848,  7849,  7850,  7851,  7854,  7856,  7857,  7858,  7862,
    7870,  7885,  7886,  7890,  7899,  7897,  7911,  7925,  7924,  7938,
    7936,  7950,  7957,  7968,  7969,  7995,  8004,  8015,  8017,  8021,
    8025,  8033,  8040,  8044,  8049,  8048,  8064,  8066,  8071,  8079,
    8078,  8094,  8098,  8097,  8109,  8110,  8114,  8134,  8135,  8136,
    8140,  8141,  8145,  8154,  8158,  8163,  8165,  8164,  8175,  8185,
    8174,  8201,  8210,  8219,  8228,  8237,  8243,  8249,  8258,  8267,
    8297,  8307,  8328,  8338,  8342,  8347,  8354,  8355,  8356,  8359,
    8361,  8362,  8363,  8364,  8367,  8372,  8383,  8388,  8399,  8400,
    8404,  8405,  8409,  8410,  8411,  8415,  8416,  8421,  8429,  8430,
    8431,  8432,  8436,  8441,  8449,  8450,  8460,  8476,  8474,  8496,
    8513,  8516,  8523,  8527,  8534,  8538,  8542,  8549,  8554,  8557,
    8564,  8567,  8574,  8577,  8584,  8587,  8595,  8598,  8605,  8609,
    8616,  8620,  8628,  8632,  8658,  8659,  8660,  8665,  8670,  8678,
    8677,  8689,  8690,  8691,  8696,  8695,  8717,  8718,  8722,  8723,
    8727,  8728,  8729,  8734,  8733,  8755,  8764,  8763,  8790,  8791,
    8795,  8796,  8800,  8801,  8802,  8803,  8804,  8805,  8810,  8809,
    8831,  8832,  8833,  8838,  8837,  8843,  8850,  8855,  8863,  8864,
    8868,  8882,  8881,  8894,  8895,  8899,  8900,  8904,  8914,  8924,
    8925,  8930,  8929,  8940,  8941,  8945,  8946,  8950,  8960,  8971,
    8970,  8978,  8982,  8983,  8994,  8995,  9004,  9012,  9016,  9023,
    9027,  9032,  9036,  9045,  9053,  9058,  9088,  9088,  9102,  9116,
    9120,  9121,  9125,  9129,  9138,  9142,  9146,  9151,  9155,  9160,
    9170,  9183,  9184,  9190,  9199,  9205,  9211,  9221,  9222,  9230,
    9231,  9232,  9233,  9234,  9238,  9239,  9244,  9250,  9255,  9261,
    9265,  9269,  9273,  9277,  9281,  9285,  9289,  9293,  9297,  9301,
    9305,  9318,  9322,  9326,  9331,  9335,  9342,  9346,  9353,  9357,
    9361,  9369,  9373,  9380,  9384,  9389,  9393,  9397,  9401,  9405,
    9409,  9413,  9417,  9421,  9425,  9429,  9433,  9437,  9441,  9445,
    9449,  9453,  9454,  9458,  9459,  9463,  9464,  9468,  9469,  9473,
    9474,  9475,  9476,  9477,  9478,  9479,  9483,  9484,  9488,  9489,
    9490,  9491,  9492,  9493,  9497,  9498,  9499,  9500,  9501,  9505,
    9509,  9513,  9517,  9521,  9525,  9527,  9531,  9535,  9539,  9543,
    9547,  9551,  9555,  9559,  9563,  9567,  9571,  9575,  9580,  9587,
    9604,  9608,  9612,  9616,  9620,  9624,  9628,  9632,  9636,  9640,
    9644,  9648,  9652,  9656,  9660,  9664,  9668,  9672,  9677,  9682,
    9687,  9691,  9695,  9699,  9703,  9708,  9712,  9731,  9735,  9739,
    9743,  9747,  9752,  9757,  9761,  9765,  9770,  9774,  9778,  9782,
    9786,  9790,  9794,  9798,  9803,  9807,  9811,  9815,  9819,  9831,
    9835,  9839,  9843,  9847,  9851,  9855,  9859,  9863,  9867,  9871,
    9875,  9879,  9883,  9887,  9891,  9895,  9899,  9903,  9907,  9911,
    9916,  9921,  9925,  9929,  9935,  9941,  9947,  9953,  9959,  9965,
    9969,  9987,  9991,  9998, 10000, 10013, 10014, 10018, 10019, 10023,
   10024, 10028, 10034, 10043, 10050, 10054, 10058, 10062, 10066, 10070,
   10074, 10078, 10082, 10086, 10090, 10099, 10103, 10107, 10111, 10115,
   10119, 10123, 10127, 10131, 10135, 10145, 10149, 10153, 10157, 10164,
   10165, 10170, 10175, 10179, 10180, 10184, 10189, 10199, 10206, 10214,
   10222, 10230, 10238, 10246, 10254, 10262, 10270, 10278, 10286, 10294,
   10305, 10306, 10310, 10316, 10325, 10326, 10330, 10336, 10345, 10346,
   10350, 10351, 10355, 10363, 10374, 10375, 10382, 10396, 10397, 10403,
   10404, 10424, 10428, 10432, 10438, 10444, 10450, 10456, 10462, 10467,
   10473, 10479, 10484, 10491, 10492, 10493, 10501, 10502, 10506, 10521,
   10525, 10547, 10574, 10578, 10586, 10586, 10600, 10607, 10608, 10613,
   10616, 10617, 10618, 10622, 10623, 10627, 10633, 10642, 10643, 10651,
   10652, 10656, 10661, 10667, 10671, 10677, 10686, 10692, 10700, 10711,
   10724, 10725, 10726, 10727, 10728, 10729, 10730, 10731, 10732, 10733,
   10734, 10735, 10739, 10740, 10741, 10742, 10743, 10744, 10745, 10746,
   10747, 10751, 10752, 10753, 10754, 10757, 10759, 10760, 10764, 10765,
   10773, 10775, 10779, 10780, 10787, 10788, 10795, 10796, 10804, 10805,
   10812, 10817, 10827, 10828, 10836, 10851, 10855, 10856, 10860, 10880,
   10881, 10885, 10892, 10897, 10907, 10908, 10909, 10913, 10914, 10918,
   10925, 10931, 10937, 10946, 10950, 10954, 10958, 10962, 10969, 10970,
   10974, 10975, 10976, 10977, 10978, 10979, 10983, 10984, 10985, 10986,
   10987, 10991, 10992, 10993, 10994, 10995, 10999, 11000, 11001, 11002,
   11006, 11011, 11012, 11016, 11017, 11027, 11031, 11036, 11044, 11057,
   11063, 11072, 11076, 11083, 11084, 11088, 11095, 11101, 11105, 11113,
   11125, 11137, 11136, 11147, 11148, 11147, 11164, 11171, 11194, 11226,
   11238, 11245, 11244, 11254, 11260, 11267, 11272, 11277, 11286, 11287,
   11291, 11302, 11308, 11317, 11318, 11322, 11323, 11326, 11328, 11331,
   11332, 11333, 11337, 11338, 11345, 11359, 11377, 11394, 11406, 11422,
   11437, 11438, 11439, 11448, 11452, 11453, 11464, 11466, 11470, 11475,
   11480, 11488, 11493, 11498, 11506, 11512, 11521, 11528, 11532, 11539,
   11540, 11544, 11549, 11559, 11560, 11564, 11565, 11569, 11574, 11579,
   11583, 11589, 11598, 11599, 11607, 11611, 11620, 11636, 11643, 11655,
   11663, 11664, 11670, 11681, 11690, 11702, 11704, 11708, 11709, 11713,
   11714, 11715, 11720, 11719, 11738, 11740, 11743, 11745, 11748, 11749,
   11752, 11756, 11760, 11764, 11768, 11772, 11776, 11780, 11784, 11792,
   11795, 11808, 11807, 11816, 11823, 11831, 11839, 11847, 11855, 11863,
   11870, 11872, 11874, 11883, 11887, 11892, 11891, 11902, 11901, 11911,
   11928, 11935, 11940, 11946, 11952, 11960, 11968, 11976, 11986, 12017,
   12019, 12050, 12057, 12064, 12074, 12081, 12087, 12096, 12104, 12108,
   12112, 12119, 12126, 12132, 12139, 12146, 12151, 12156, 12161, 12170,
   12172, 12174, 12179, 12180, 12183, 12185, 12189, 12190, 12194, 12195,
   12199, 12200, 12204, 12205, 12209, 12210, 12213, 12215, 12222, 12232,
   12234, 12241, 12269, 12268, 12285, 12284, 12292, 12293, 12294, 12295,
   12296, 12297, 12311, 12312, 12317, 12321, 12327, 12333, 12354, 12355,
   12356, 12371, 12370, 12383, 12392, 12382, 12394, 12398, 12399, 12411,
   12410, 12432, 12433, 12438, 12440, 12442, 12444, 12446, 12448, 12450,
   12455, 12457, 12459, 12461, 12463, 12465, 12467, 12472, 12473, 12478,
   12477, 12487, 12488, 12492, 12492, 12494, 12495, 12503, 12504, 12509,
   12508, 12519, 12523, 12527, 12541, 12553, 12554, 12555, 12561, 12573,
   12585, 12595, 12613, 12572, 12624, 12625, 12629, 12630, 12634, 12635,
   12636, 12640, 12641, 12642, 12646, 12647, 12651, 12656, 12660, 12665,
   12671, 12676, 12684, 12685, 12689, 12694, 12698, 12703, 12711, 12712,
   12715, 12717, 12725, 12727, 12731, 12732, 12733, 12737, 12739, 12744,
   12745, 12754, 12755, 12759, 12760, 12764, 12787, 12792, 12797, 12802,
   12810, 12818, 12825, 12835, 12843, 12844, 12845, 12856, 12857, 12858,
   12859, 12872, 12876, 12880, 12884, 12888, 12892, 12899, 12903, 12907,
   12911, 12915, 12923, 12927, 12931, 12945, 12946, 12950, 12954, 12961,
   12968, 12972, 12976, 12980, 12984, 12988, 12994, 13001, 13002, 13018,
   13028, 13036, 13042, 13052, 13063, 13069, 13079, 13089, 13090, 13120,
   13133, 13146, 13162, 13178, 13195, 13196, 13207, 13208, 13219, 13220,
   13221, 13225, 13253, 13290, 13305, 13306, 13307, 13308, 13309, 13310,
   13311, 13312, 13313, 13314, 13315, 13316, 13317, 13318, 13319, 13320,
   13321, 13322, 13323, 13324, 13325, 13326, 13327, 13328, 13329, 13330,
   13331, 13332, 13333, 13334, 13335, 13336, 13337, 13338, 13339, 13340,
   13341, 13342, 13343, 13344, 13345, 13346, 13347, 13348, 13349, 13350,
   13351, 13352, 13353, 13354, 13355, 13356, 13357, 13358, 13359, 13360,
   13361, 13371, 13372, 13373, 13374, 13375, 13376, 13377, 13378, 13379,
   13380, 13381, 13382, 13383, 13384, 13385, 13386, 13387, 13388, 13389,
   13390, 13391, 13392, 13393, 13394, 13395, 13396, 13397, 13398, 13399,
   13400, 13401, 13402, 13403, 13404, 13405, 13406, 13407, 13408, 13409,
   13410, 13411, 13412, 13413, 13414, 13415, 13416, 13417, 13418, 13423,
   13424, 13425, 13426, 13427, 13428, 13429, 13430, 13431, 13432, 13433,
   13434, 13435, 13436, 13437, 13438, 13439, 13440, 13441, 13442, 13443,
   13444, 13445, 13446, 13447, 13448, 13449, 13450, 13451, 13452, 13453,
   13454, 13455, 13456, 13457, 13458, 13459, 13460, 13461, 13462, 13463,
   13464, 13465, 13466, 13467, 13468, 13469, 13470, 13471, 13472, 13473,
   13474, 13475, 13476, 13477, 13478, 13479, 13480, 13481, 13482, 13483,
   13484, 13485, 13486, 13487, 13488, 13489, 13490, 13491, 13492, 13493,
   13494, 13495, 13496, 13497, 13498, 13499, 13500, 13501, 13502, 13503,
   13504, 13505, 13506, 13507, 13508, 13509, 13510, 13511, 13512, 13513,
   13514, 13515, 13516, 13517, 13518, 13519, 13520, 13521, 13522, 13523,
   13524, 13525, 13526, 13527, 13528, 13529, 13530, 13531, 13532, 13533,
   13534, 13535, 13536, 13537, 13538, 13539, 13540, 13541, 13542, 13543,
   13544, 13545, 13546, 13547, 13548, 13549, 13550, 13551, 13552, 13553,
   13554, 13555, 13556, 13557, 13558, 13559, 13560, 13561, 13562, 13563,
   13564, 13565, 13566, 13567, 13568, 13569, 13570, 13571, 13572, 13573,
   13574, 13575, 13576, 13577, 13578, 13579, 13580, 13581, 13582, 13583,
   13584, 13585, 13586, 13587, 13588, 13589, 13590, 13591, 13592, 13593,
   13594, 13595, 13596, 13597, 13598, 13599, 13600, 13601, 13602, 13603,
   13604, 13605, 13606, 13607, 13608, 13609, 13610, 13611, 13612, 13613,
   13614, 13615, 13616, 13617, 13618, 13619, 13620, 13621, 13622, 13623,
   13624, 13625, 13626, 13627, 13628, 13629, 13630, 13631, 13632, 13633,
   13634, 13635, 13636, 13637, 13638, 13639, 13640, 13641, 13642, 13643,
   13644, 13645, 13646, 13647, 13648, 13649, 13650, 13651, 13652, 13653,
   13654, 13655, 13656, 13657, 13658, 13659, 13660, 13661, 13662, 13663,
   13664, 13665, 13666, 13667, 13668, 13669, 13670, 13671, 13672, 13673,
   13674, 13675, 13676, 13677, 13678, 13679, 13680, 13681, 13682, 13683,
   13684, 13685, 13686, 13687, 13688, 13689, 13690, 13691, 13692, 13693,
   13694, 13705, 13714, 13718, 13722, 13726, 13730, 13737, 13741, 13754,
   13761, 13771, 13772, 13777, 13781, 13789, 13793, 13797, 13798, 13799,
   13803, 13804, 13805, 13806, 13810, 13811, 13812, 13813, 13818, 13826,
   13832, 13836, 13840, 13844, 13851, 13858, 13862, 13866, 13873, 13877,
   13884, 13891, 13892, 13896, 13903, 13904, 13908, 13909, 13913, 13914,
   13915, 13916, 13920, 13929, 13930, 13931, 13935, 13939, 13949, 13948,
   13964, 13965, 13969, 13970, 13974, 14002, 14003, 14004, 14009, 14014,
   14013, 14030, 14038, 14045, 14064, 14080, 14099, 14096, 14146, 14147,
   14151, 14152, 14156, 14157, 14158, 14159, 14161, 14160, 14173, 14174,
   14175, 14176, 14177, 14183, 14183, 14188, 14193, 14203, 14213, 14217,
   14226, 14226, 14231, 14237, 14248, 14259, 14267, 14269, 14273, 14280,
   14287, 14289, 14293, 14294, 14299, 14298, 14302, 14301, 14305, 14304,
   14308, 14307, 14310, 14311, 14312, 14313, 14314, 14315, 14316, 14317,
   14318, 14319, 14320, 14321, 14322, 14323, 14324, 14325, 14326, 14327,
   14328, 14329, 14330, 14331, 14332, 14333, 14334, 14335, 14339, 14340,
   14344, 14345, 14349, 14359, 14369, 14382, 14397, 14410, 14423, 14435,
   14440, 14448, 14453, 14461, 14469, 14484, 14492, 14502, 14513, 14522,
   14526, 14530, 14531, 14535, 14562, 14564, 14568, 14572, 14576, 14583,
   14584, 14588, 14589, 14593, 14594, 14598, 14599, 14605, 14611, 14617,
   14627, 14626, 14636, 14637, 14642, 14643, 14644, 14649, 14650, 14651,
   14655, 14656, 14660, 14672, 14681, 14691, 14700, 14714, 14715, 14719,
   14726, 14727, 14728, 14732, 14733, 14737, 14744, 14748, 14752, 14753,
   14754, 14758, 14762, 14770, 14771, 14779, 14779, 14792, 14793, 14797,
   14801, 14805, 14806, 14807, 14808, 14809, 14810, 14811, 14812, 14822,
   14824, 14826, 14831, 14832, 14833, 14834, 14835, 14839, 14840, 14841,
   14842, 14843, 14844, 14854, 14855, 14860, 14873, 14886, 14888, 14890,
   14895, 14900, 14902, 14904, 14910, 14911, 14913, 14919, 14918, 14936,
   14937, 14941, 14946, 14954, 14954, 14979, 14978, 14999, 15007, 15007,
   15015, 15020, 15019, 15033, 15034, 15036, 15038, 15049, 15051, 15057,
   15063, 15081, 15071, 15164, 15182, 15206, 15230, 15234, 15243, 15266,
   15203, 15333, 15353, 15358, 15366, 15331, 15387, 15392, 15397, 15402,
   15407, 15412, 15420, 15421, 15424, 15433, 15443, 15461, 15462, 15466,
   15467, 15468, 15472, 15473, 15478, 15479, 15481, 15486, 15495
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "ANALYSE_SYM", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM", "AS",
  "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM", "AUTOEXTEND_SIZE_SYM",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM",
  "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM",
  "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM",
  "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM", "FILTER_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM", "FLUSH_SYM",
  "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM", "FUNCTION_SYM", "GE",
  "GENERAL", "GENERATED", "GROUP_REPLICATION", "GEOMETRYCOLLECTION",
  "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM", "GLOBAL_SYM", "GRANT", "GRANTS",
  "GROUP_SYM", "GROUP_CONCAT_SYM", "GT_SYM", "HANDLER_SYM", "HASH_SYM",
  "HAVING", "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY", "HOST_SYM",
  "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES",
  "INDEX_SYM", "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM",
  "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTANCE_SYM",
  "INSTALL_SYM", "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM",
  "IN_SYM", "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "JSON_SYM", "KEYS",
  "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM",
  "LE", "LEADING", "LEAVES", "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM",
  "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING",
  "LIST_SYM", "LOAD", "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEVER_SYM", "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM",
  "NO_WRITE_TO_BINLOG", "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM",
  "NVARCHAR_SYM", "OFFSET_SYM", "ON", "ONE_SYM", "ONLY_SYM", "OPEN_SYM",
  "OPTIMIZE", "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY",
  "OR2_SYM", "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE",
  "OUT_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER",
  "PARSER_SYM", "PARSE_GCOL_EXPR_SYM", "PARTIAL", "PARTITION_SYM",
  "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM",
  "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "REBUILD_SYM",
  "RECOVER_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD",
  "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPEAT_SYM", "REPLACE", "REPLICATION", "REPLICATE_DO_DB",
  "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE", "REPLICATE_IGNORE_TABLE",
  "REPLICATE_WILD_DO_TABLE", "REPLICATE_WILD_IGNORE_TABLE",
  "REPLICATE_REWRITE_DB", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM",
  "RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM",
  "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM",
  "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM", "ROTATE_SYM",
  "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS",
  "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM",
  "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD", "SSL_SYM", "STACKED_SYM",
  "STARTING", "STARTS_SYM", "START_SYM", "STATS_AUTO_RECALC_SYM",
  "STATS_PERSISTENT_SYM", "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM",
  "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM", "STORED_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE_SYM", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB",
  "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL", "JSON_OBJECTAGG", "JSON_ARRAYAGG", "'|'", "'&'",
  "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "'('", "')'", "','",
  "'!'", "'{'", "'}'", "';'", "'@'", "'.'", "':'", "$accept", "query",
  "$@1", "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "$@2",
  "execute_using", "execute_var_list", "execute_var_ident", "help", "$@3",
  "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "master_file_def", "opt_channel", "create", "$@6", "$@7", "$@8", "$@9",
  "$@10", "$@11", "$@12", "$@13", "$@14", "server_options_list",
  "server_option", "event_tail", "$@15", "ev_schedule_time", "$@16",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@17",
  "ev_sql_stmt_inner", "clear_privileges", "clear_password_expire_options",
  "sp_name", "sp_a_chistics", "sp_c_chistics", "sp_chistic",
  "sp_c_chistic", "sp_suid", "call", "$@18", "opt_sp_cparam_list",
  "opt_sp_cparams", "sp_cparams", "sp_fdparam_list", "sp_fdparams",
  "sp_init_param", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@19", "$@20", "$@21", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "$@22", "sp_proc_stmt", "sp_proc_stmt_if", "$@23",
  "sp_proc_stmt_statement", "$@24", "sp_proc_stmt_return", "$@25",
  "sp_proc_stmt_unlabeled", "$@26", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@27", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@28", "$@29", "$@30", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@31", "$@32", "searched_case_stmt", "$@33",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@34", "$@35", "searched_when_clause", "$@36",
  "$@37", "else_clause_opt", "sp_labeled_control", "$@38", "sp_opt_label",
  "sp_labeled_block", "$@39", "sp_unlabeled_block", "$@40",
  "sp_block_content", "$@41", "sp_unlabeled_control", "$@42", "$@43",
  "$@44", "$@45", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@46", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_file_block_size", "ts_wait", "size_number",
  "create2", "create2a", "$@47", "create3", "$@48", "$@49",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@50",
  "partition_entry", "$@51", "partition", "part_type_def", "$@52",
  "opt_linear", "opt_key_algo", "part_field_list", "part_field_item_list",
  "part_field_item", "part_column_list", "part_func", "sub_part_func",
  "opt_num_parts", "opt_sub_part", "$@53", "$@54", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@55", "part_name",
  "opt_part_values", "$@56", "$@57", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@58", "$@59",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@60", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "$@61", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "udf_type", "create_field_list",
  "field_list", "field_list_item", "column_def", "key_def",
  "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "$@62", "field_def", "opt_generated_always",
  "opt_gcol_attribute_list", "gcol_attribute_list", "gcol_attribute",
  "opt_stored_attribute", "parse_gcol_expr", "generated_column_func",
  "type", "$@63", "$@64", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "opt_collate_explicit",
  "collation_name_or_default", "opt_default", "ascii", "unicode",
  "opt_binary", "opt_bin_mod", "ws_nweights", "$@65", "ws_level_flag_desc",
  "ws_level_flag_reverse", "ws_level_flags", "ws_level_number",
  "ws_level_list_item", "ws_level_list", "ws_level_range",
  "ws_level_list_or_range", "opt_ws_levels", "opt_primary", "references",
  "opt_ref_list", "ref_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "normal_key_type", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "fulltext", "spatial", "init_key_options", "key_alg",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "key_using_alg", "all_key_opt", "normal_key_opt", "spatial_key_opt",
  "fulltext_key_opt", "btree_or_rtree", "key_list", "key_part",
  "opt_ident", "opt_component", "string_list", "alter", "$@66", "$@67",
  "$@68", "$@69", "$@70", "$@71", "$@72", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "password_expire",
  "connect_options", "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "alter_command_list",
  "standalone_alter_commands", "$@73", "$@74", "$@75", "opt_validation",
  "alter_opt_validation", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@76",
  "add_part_extra", "reorg_partition_rule", "$@77", "reorg_parts_rule",
  "$@78", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "alter_commands_modifier_list", "add_column", "alter_list_item", "$@79",
  "$@80", "$@81", "alter_commands_modifier", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "slave", "slave_start", "start_slave_opts", "$@82", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "$@83", "opt_checksum_type", "repair",
  "$@84", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "analyze", "$@85", "binlog_base64_event", "check", "$@86",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "$@87", "opt_no_write_to_binlog", "rename", "$@88", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@89",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@90",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@91", "cache_keys_spec",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_part2",
  "select_options_and_item_list", "$@92", "table_expression",
  "from_clause", "opt_from_clause", "table_reference_list",
  "select_options", "select_option_list", "select_option",
  "opt_select_lock_type", "select_item_list", "select_item",
  "select_alias", "optional_braces", "expr", "bool_pri", "predicate",
  "bit_expr", "or", "and", "not", "not2", "comp_op", "all_or_any",
  "simple_expr", "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr", "sum_expr", "variable",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_ref", "join_table_list", "esc_table_ref",
  "derived_table_list", "join_table", "normal_join", "opt_use_partition",
  "use_partition", "table_factor", "select_derived_union",
  "select_part2_derived", "$@93", "select_derived", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition",
  "index_hints_list", "opt_index_hints_list", "opt_key_definition",
  "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias", "opt_all", "opt_where_clause",
  "opt_having_clause", "opt_escape", "opt_group_clause", "group_list",
  "olap_opt", "alter_order_clause", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list", "order_dir",
  "opt_limit_clause", "limit_clause", "limit_options", "limit_option",
  "opt_simple_limit", "ulong_num", "real_ulong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num",
  "opt_procedure_analyse_clause", "opt_procedure_analyse_params",
  "procedure_analyse_param", "select_var_list", "select_var_ident",
  "opt_into", "into", "into_destination", "do_stmt",
  "empty_select_options", "drop", "$@94", "$@95", "$@96", "$@97",
  "table_list", "table_name", "table_alias_ref_list", "if_exists",
  "opt_temporary", "drop_ts_options_list", "drop_ts_options",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_from_subquery", "fields", "insert_values",
  "insert_query_expression", "value_or_values", "values_list", "equal",
  "opt_equal", "row_value", "opt_values", "values", "expr_or_default",
  "opt_insert_update_list", "update_stmt", "update_list", "update_elem",
  "opt_low_priority", "delete_stmt", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@98", "opt_table_sym",
  "opt_profile_defs", "profile_defs", "profile_def", "opt_profile_args",
  "show", "$@99", "show_param", "$@100", "$@101", "show_engine_param",
  "master_or_binary", "opt_storage", "opt_db", "opt_full", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where",
  "opt_wild_or_where_for_show", "describe", "$@102", "$@103",
  "explainable_command", "describe_command", "opt_extended_describe",
  "opt_describe_column", "flush", "$@104", "flush_options", "$@105",
  "$@106", "opt_flush_lock", "$@107", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@108", "reset_options", "reset_option",
  "$@109", "slave_reset_options", "purge", "$@110", "purge_options",
  "purge_option", "kill", "kill_option", "use", "load", "$@111", "$@112",
  "$@113", "$@114", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident", "label_ident", "ident_or_text",
  "user", "keyword", "keyword_sp", "set", "start_option_value_list",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "option_value_following_option_type", "option_value_no_option_type",
  "internal_variable_name", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types", "password",
  "set_expr_or_default", "lock", "$@115", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@116",
  "shutdown_stmt", "alter_instance_stmt", "alter_instance_action",
  "handler", "$@117", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@118", "handler_rkey_mode", "revoke", "$@119",
  "revoke_command", "grant", "$@120", "grant_command", "opt_table",
  "grant_privileges", "opt_privileges", "object_privilege_list",
  "object_privilege", "$@121", "$@122", "$@123", "$@124", "opt_and",
  "require_list", "require_list_element", "grant_ident", "user_list",
  "grant_list", "grant_user", "opt_column_list", "column_list",
  "column_list_id", "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin", "$@125", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "opt_union_clause", "union_list", "union_opt",
  "opt_union_order_or_limit", "union_order_or_limit", "order_or_limit",
  "union_option", "query_specification", "query_expression_body",
  "subselect", "$@126", "opt_query_spec_options", "query_spec_option_list",
  "query_spec_option", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@127", "view_list_opt", "view_list",
  "view_select", "$@128", "view_select_aux", "$@129",
  "create_view_select_paren", "$@130", "create_view_select", "$@131",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@132", "udf_tail",
  "sf_tail", "$@133", "$@134", "$@135", "$@136", "$@137", "sp_tail",
  "$@138", "$@139", "$@140", "$@141", "xa", "opt_convert_xid", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "install", "uninstall", YY_NULL
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   124,    38,    45,    43,    42,
      47,    37,    94,   126,    40,    41,    44,    33,   123,   125,
      59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   674,   675,   676,   675,   675,   677,   677,   678,   678,
     679,   679,   679,   679,   679,   679,   679,   679,   679,   679,
     679,   679,   679,   679,   679,   679,   679,   679,   679,   679,
     679,   679,   679,   679,   679,   679,   679,   679,   679,   679,
     679,   679,   679,   679,   679,   679,   679,   679,   679,   679,
     679,   679,   679,   679,   679,   679,   679,   679,   679,   679,
     679,   679,   679,   679,   679,   680,   681,   681,   682,   683,
     683,   685,   684,   686,   686,   687,   687,   688,   690,   689,
     692,   691,   693,   691,   694,   694,   695,   695,   695,   695,
     695,   695,   695,   696,   696,   697,   697,   698,   699,   699,
     700,   700,   701,   701,   702,   702,   703,   704,   704,   705,
     705,   706,   707,   707,   708,   708,   708,   708,   708,   708,
     708,   708,   708,   708,   708,   708,   708,   708,   708,   708,
     708,   708,   708,   708,   708,   708,   709,   709,   709,   710,
     711,   711,   711,   711,   712,   712,   714,   713,   715,   716,
     713,   717,   718,   713,   719,   720,   713,   721,   713,   722,
     713,   713,   713,   713,   713,   723,   723,   724,   724,   724,
     724,   724,   724,   724,   726,   725,   728,   727,   727,   729,
     729,   729,   729,   730,   730,   731,   731,   732,   732,   733,
     733,   734,   734,   736,   735,   737,   737,   737,   737,   737,
     737,   737,   737,   737,   737,   737,   737,   737,   738,   739,
     740,   740,   741,   741,   742,   742,   743,   743,   743,   743,
     743,   743,   743,   744,   744,   744,   745,   745,   747,   746,
     748,   748,   749,   749,   750,   750,   751,   751,   752,   752,
     753,   754,   755,   755,   756,   756,   757,   758,   758,   758,
     758,   759,   759,   760,   760,   761,   761,   763,   762,   762,
     764,   762,   765,   762,   766,   766,   767,   767,   768,   769,
     769,   770,   771,   771,   772,   772,   772,   772,   772,   773,
     774,   774,   775,   775,   776,   776,   777,   777,   778,   778,
     778,   779,   779,   779,   779,   779,   779,   779,   779,   779,
     779,   779,   779,   780,   781,   782,   782,   782,   783,   783,
     784,   784,   785,   786,   786,   787,   787,   788,   789,   789,
     790,   791,   791,   791,   791,   791,   791,   791,   791,   791,
     791,   791,   791,   791,   792,   792,   793,   794,   793,   795,
     795,   795,   795,   795,   795,   795,   795,   795,   795,   795,
     795,   795,   797,   796,   799,   798,   801,   800,   803,   802,
     804,   805,   806,   808,   807,   809,   810,   810,   810,   811,
     811,   813,   814,   815,   812,   816,   816,   816,   817,   817,
     819,   820,   818,   822,   821,   823,   823,   824,   824,   826,
     827,   825,   829,   830,   828,   831,   831,   833,   832,   834,
     834,   836,   835,   838,   837,   840,   839,   841,   842,   843,
     841,   844,   845,   841,   846,   846,   847,   847,   847,   848,
     849,   850,   851,   851,   852,   852,   853,   854,   855,   855,
     857,   856,   858,   858,   858,   859,   859,   859,   860,   860,
     861,   861,   861,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   863,   863,   864,   864,   864,   865,   865,   865,
     865,   865,   866,   866,   867,   867,   867,   868,   868,   868,
     868,   868,   868,   868,   869,   869,   870,   870,   870,   871,
     871,   871,   872,   873,   874,   875,   876,   877,   877,   877,
     878,   879,   880,   881,   882,   883,   884,   885,   886,   887,
     888,   888,   889,   889,   890,   890,   890,   890,   891,   892,
     891,   893,   894,   893,   895,   893,   896,   897,   897,   899,
     898,   901,   900,   902,   903,   904,   903,   903,   903,   903,
     903,   905,   905,   906,   906,   907,   907,   908,   908,   909,
     910,   911,   912,   913,   913,   914,   915,   914,   916,   914,
     917,   917,   918,   919,   920,   920,   921,   921,   922,   922,
     924,   923,   925,   926,   927,   926,   928,   926,   929,   929,
     930,   930,   931,   931,   933,   934,   932,   935,   935,   936,
     936,   937,   937,   938,   938,   940,   939,   941,   942,   942,
     943,   943,   944,   944,   944,   944,   944,   944,   944,   944,
     945,   946,   946,   947,   947,   948,   948,   949,   949,   950,
     950,   951,   951,   952,   953,   953,   954,   954,   955,   955,
     956,   956,   956,   957,   957,   957,   957,   957,   957,   957,
     957,   957,   957,   957,   957,   957,   957,   957,   957,   957,
     957,   957,   957,   957,   958,   957,   957,   957,   957,   957,
     957,   957,   957,   957,   957,   957,   959,   960,   961,   962,
     963,   963,   963,   963,   963,   963,   964,   964,   964,   965,
     965,   965,   965,   966,   967,   967,   968,   968,   969,   969,
     970,   970,   970,   970,   970,   970,   971,   971,   972,   973,
     973,   974,   976,   975,   977,   977,   978,   978,   979,   979,
     980,   980,   981,   981,   981,   981,   981,   981,   982,   982,
     982,   983,   984,   985,   985,   985,   985,   985,   985,   985,
     985,   985,   985,   985,   985,   985,   985,   985,   985,   985,
     985,   985,   985,   985,   985,   985,   985,   985,   985,   985,
     985,   985,   985,   985,   985,   985,   985,   985,   986,   985,
     987,   985,   985,   985,   985,   988,   988,   988,   988,   988,
     988,   988,   988,   989,   990,   990,   991,   991,   992,   992,
     992,   992,   992,   993,   993,   993,   993,   993,   994,   994,
     994,   995,   995,   995,   996,   997,   997,   998,   998,   998,
     999,   999,  1000,  1000,  1001,  1001,  1001,  1002,  1002,  1002,
    1002,  1003,  1003,  1004,  1004,  1005,  1005,  1006,  1006,  1007,
    1007,  1007,  1007,  1007,  1007,  1007,  1007,  1007,  1007,  1007,
    1007,  1007,  1007,  1007,  1007,  1007,  1008,  1009,  1010,  1010,
    1011,  1011,  1012,  1012,  1013,  1013,  1014,  1014,  1015,  1015,
    1016,  1016,  1017,  1018,  1018,  1019,  1019,  1020,  1020,  1021,
    1021,  1022,  1022,  1022,  1023,  1023,  1023,  1024,  1024,  1024,
    1024,  1024,  1024,  1024,  1025,  1025,  1027,  1026,  1028,  1028,
    1029,  1030,  1030,  1030,  1030,  1031,  1032,  1033,  1033,  1034,
    1035,  1035,  1036,  1036,  1037,  1037,  1038,  1039,  1039,  1040,
    1040,  1041,  1041,  1041,  1041,  1042,  1042,  1042,  1042,  1042,
    1043,  1043,  1043,  1043,  1043,  1044,  1045,  1045,  1046,  1046,
    1047,  1047,  1048,  1048,  1048,  1049,  1049,  1050,  1051,  1052,
    1053,  1053,  1054,  1054,  1055,  1055,  1056,  1056,  1057,  1057,
    1058,  1058,  1059,  1059,  1060,  1060,  1061,  1061,  1062,  1062,
    1063,  1064,  1064,  1065,  1065,  1065,  1066,  1066,  1067,  1067,
    1068,  1068,  1069,  1069,  1070,  1070,  1072,  1071,  1073,  1071,
    1071,  1074,  1071,  1075,  1071,  1076,  1071,  1077,  1071,  1078,
    1071,  1071,  1071,  1071,  1071,  1071,  1071,  1071,  1071,  1079,
    1080,  1080,  1081,  1081,  1082,  1082,  1082,  1082,  1082,  1082,
    1083,  1084,  1084,  1085,  1085,  1086,  1086,  1086,  1086,  1087,
    1088,  1088,  1088,  1088,  1089,  1089,  1090,  1090,  1091,  1091,
    1092,  1092,  1092,  1092,  1092,  1093,  1093,  1093,  1093,  1094,
    1094,  1094,  1094,  1094,  1095,  1094,  1094,  1096,  1094,  1097,
    1094,  1094,  1094,  1094,  1094,  1094,  1094,  1098,  1098,  1099,
    1099,  1100,  1101,  1101,  1103,  1102,  1104,  1104,  1104,  1106,
    1105,  1107,  1108,  1107,  1109,  1109,  1110,  1111,  1111,  1111,
    1112,  1112,  1113,  1114,  1114,  1114,  1115,  1114,  1116,  1117,
    1114,  1114,  1114,  1114,  1114,  1114,  1114,  1114,  1114,  1114,
    1114,  1114,  1114,  1114,  1114,  1114,  1118,  1118,  1118,  1119,
    1119,  1119,  1119,  1119,  1120,  1120,  1121,  1121,  1122,  1122,
    1123,  1123,  1124,  1124,  1124,  1125,  1125,  1125,  1126,  1126,
    1126,  1126,  1127,  1127,  1128,  1128,  1129,  1131,  1130,  1132,
    1133,  1133,  1134,  1134,  1135,  1135,  1135,  1136,  1137,  1137,
    1138,  1138,  1139,  1139,  1140,  1140,  1141,  1141,  1142,  1142,
    1143,  1143,  1144,  1144,  1145,  1145,  1145,  1145,  1145,  1147,
    1146,  1148,  1148,  1148,  1150,  1149,  1151,  1151,  1152,  1152,
    1153,  1153,  1153,  1155,  1154,  1156,  1158,  1157,  1159,  1159,
    1160,  1160,  1161,  1161,  1161,  1161,  1161,  1161,  1163,  1162,
    1164,  1164,  1164,  1166,  1165,  1165,  1167,  1167,  1168,  1168,
    1169,  1171,  1170,  1172,  1172,  1173,  1173,  1174,  1175,  1176,
    1176,  1178,  1177,  1179,  1179,  1180,  1180,  1181,  1182,  1184,
    1183,  1185,  1186,  1186,  1187,  1187,  1188,  1189,  1189,  1190,
    1190,  1191,  1191,  1192,  1192,  1192,  1194,  1193,  1195,  1196,
    1197,  1197,  1198,  1198,  1199,  1199,  1200,  1200,  1201,  1201,
    1201,  1202,  1202,  1202,  1203,  1203,  1203,  1204,  1204,  1205,
    1205,  1205,  1205,  1205,  1206,  1206,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1208,  1208,  1208,
    1208,  1208,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,
    1209,  1209,  1209,  1209,  1209,  1209,  1210,  1210,  1210,  1210,
    1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,
    1210,  1211,  1211,  1212,  1212,  1213,  1213,  1214,  1214,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1216,  1216,  1217,  1217,
    1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,
    1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,
    1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,
    1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,
    1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,
    1218,  1218,  1218,  1218,  1218,  1218,  1218,  1219,  1219,  1219,
    1219,  1219,  1219,  1219,  1219,  1219,  1219,  1219,  1219,  1219,
    1219,  1219,  1219,  1219,  1219,  1219,  1219,  1219,  1219,  1220,
    1220,  1220,  1220,  1220,  1220,  1220,  1220,  1220,  1220,  1220,
    1220,  1220,  1220,  1220,  1220,  1220,  1220,  1220,  1220,  1220,
    1220,  1220,  1220,  1221,  1221,  1221,  1221,  1221,  1221,  1221,
    1221,  1222,  1222,  1223,  1223,  1224,  1224,  1225,  1225,  1226,
    1226,  1227,  1227,  1228,  1229,  1229,  1229,  1229,  1229,  1229,
    1229,  1229,  1229,  1229,  1229,  1229,  1229,  1229,  1229,  1229,
    1229,  1229,  1229,  1229,  1229,  1230,  1231,  1231,  1231,  1232,
    1232,  1233,  1233,  1234,  1234,  1235,  1235,  1236,  1237,  1237,
    1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,
    1238,  1238,  1239,  1239,  1240,  1240,  1241,  1241,  1242,  1242,
    1243,  1243,  1244,  1244,  1245,  1245,  1246,  1247,  1247,  1248,
    1248,  1249,  1249,  1249,  1249,  1249,  1249,  1249,  1249,  1249,
    1249,  1249,  1249,  1250,  1250,  1250,  1251,  1251,  1252,  1253,
    1253,  1253,  1254,  1254,  1256,  1255,  1257,  1258,  1258,  1259,
    1259,  1259,  1259,  1260,  1260,  1261,  1261,  1262,  1262,  1263,
    1263,  1264,  1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,
    1269,  1269,  1269,  1269,  1269,  1269,  1269,  1269,  1269,  1269,
    1269,  1269,  1270,  1270,  1270,  1270,  1270,  1270,  1270,  1270,
    1270,  1271,  1271,  1271,  1271,  1272,  1272,  1272,  1273,  1273,
    1274,  1274,  1275,  1275,  1276,  1276,  1277,  1277,  1278,  1278,
    1279,  1279,  1280,  1280,  1280,  1281,  1282,  1282,  1283,  1284,
    1284,  1285,  1286,  1286,  1287,  1287,  1287,  1288,  1288,  1289,
    1290,  1290,  1290,  1291,  1291,  1291,  1291,  1291,  1292,  1292,
    1293,  1293,  1293,  1293,  1293,  1293,  1294,  1294,  1294,  1294,
    1294,  1295,  1295,  1295,  1295,  1295,  1296,  1296,  1296,  1296,
    1297,  1298,  1298,  1299,  1299,  1300,  1300,  1300,  1301,  1302,
    1302,  1303,  1303,  1304,  1304,  1305,  1306,  1306,  1306,  1307,
    1308,  1310,  1309,  1311,  1312,  1309,  1309,  1309,  1309,  1309,
    1309,  1313,  1309,  1309,  1309,  1309,  1309,  1309,  1314,  1314,
    1315,  1316,  1316,  1317,  1317,  1318,  1318,  1319,  1319,  1320,
    1320,  1320,  1321,  1321,  1322,  1322,  1322,  1323,  1323,  1323,
    1324,  1324,  1324,  1324,  1325,  1325,  1326,  1326,  1327,  1327,
    1327,  1328,  1328,  1328,  1329,  1329,  1330,  1331,  1331,  1332,
    1332,  1333,  1333,  1334,  1334,  1335,  1335,  1336,  1337,  1337,
    1338,  1338,  1339,  1339,  1340,  1340,  1341,  1342,  1342,  1343,
    1344,  1344,  1345,  1345,  1345,  1346,  1346,  1347,  1347,  1348,
    1348,  1348,  1350,  1349,  1351,  1351,  1352,  1352,  1353,  1353,
    1354,  1354,  1354,  1354,  1354,  1354,  1354,  1354,  1354,  1355,
    1355,  1357,  1356,  1358,  1358,  1358,  1358,  1358,  1358,  1358,
    1358,  1358,  1358,  1358,  1358,  1359,  1358,  1360,  1358,  1358,
    1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,
    1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,
    1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1358,  1361,
    1361,  1361,  1362,  1362,  1363,  1363,  1364,  1364,  1365,  1365,
    1366,  1366,  1367,  1367,  1368,  1368,  1369,  1369,  1369,  1370,
    1370,  1370,  1372,  1371,  1373,  1371,  1374,  1374,  1374,  1374,
    1374,  1374,  1375,  1375,  1376,  1376,  1376,  1376,  1377,  1377,
    1377,  1379,  1378,  1381,  1382,  1380,  1380,  1383,  1383,  1384,
    1383,  1385,  1385,  1386,  1386,  1386,  1386,  1386,  1386,  1386,
    1386,  1386,  1386,  1386,  1386,  1386,  1386,  1387,  1387,  1389,
    1388,  1390,  1390,  1392,  1391,  1391,  1391,  1393,  1393,  1395,
    1394,  1396,  1397,  1397,  1398,  1399,  1399,  1399,  1400,  1402,
    1403,  1404,  1405,  1401,  1406,  1406,  1407,  1407,  1408,  1408,
    1408,  1409,  1409,  1409,  1410,  1410,  1411,  1411,  1412,  1412,
    1412,  1412,  1413,  1413,  1414,  1414,  1415,  1415,  1416,  1416,
    1417,  1417,  1418,  1418,  1419,  1419,  1419,  1420,  1420,  1421,
    1421,  1422,  1422,  1423,  1423,  1424,  1425,  1425,  1425,  1425,
    1426,  1426,  1426,  1427,  1428,  1428,  1428,  1429,  1429,  1429,
    1429,  1429,  1429,  1429,  1429,  1429,  1429,  1430,  1430,  1430,
    1430,  1430,  1431,  1431,  1431,  1432,  1432,  1433,  1433,  1434,
    1435,  1435,  1436,  1436,  1437,  1437,  1437,  1438,  1438,  1438,
    1438,  1439,  1439,  1439,  1440,  1440,  1441,  1442,  1442,  1443,
    1444,  1445,  1446,  1447,  1448,  1448,  1449,  1449,  1450,  1450,
    1450,  1451,  1451,  1451,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,  1453,
    1453,  1454,  1455,  1455,  1455,  1455,  1455,  1455,  1455,  1456,
    1456,  1457,  1457,  1458,  1458,  1459,  1459,  1460,  1460,  1460,
    1461,  1461,  1461,  1461,  1462,  1462,  1462,  1462,  1463,  1464,
    1464,  1464,  1464,  1464,  1464,  1465,  1465,  1465,  1466,  1466,
    1467,  1468,  1468,  1469,  1470,  1470,  1471,  1471,  1472,  1472,
    1472,  1472,  1473,  1474,  1474,  1474,  1474,  1474,  1476,  1475,
    1477,  1477,  1478,  1478,  1479,  1480,  1480,  1480,  1480,  1482,
    1481,  1483,  1484,  1485,  1486,  1486,  1487,  1486,  1488,  1488,
    1489,  1489,  1490,  1490,  1490,  1490,  1491,  1490,  1492,  1492,
    1492,  1492,  1492,  1494,  1493,  1495,  1495,  1495,  1495,  1495,
    1497,  1496,  1498,  1498,  1498,  1498,  1499,  1499,  1500,  1500,
    1501,  1501,  1502,  1502,  1504,  1503,  1505,  1503,  1506,  1503,
    1507,  1503,  1503,  1503,  1503,  1503,  1503,  1503,  1503,  1503,
    1503,  1503,  1503,  1503,  1503,  1503,  1503,  1503,  1503,  1503,
    1503,  1503,  1503,  1503,  1503,  1503,  1503,  1503,  1508,  1508,
    1509,  1509,  1510,  1510,  1510,  1511,  1511,  1511,  1511,  1512,
    1512,  1513,  1513,  1514,  1514,  1514,  1514,  1514,  1514,  1515,
    1515,  1516,  1516,  1517,  1518,  1518,  1518,  1518,  1518,  1519,
    1519,  1520,  1520,  1521,  1521,  1522,  1522,  1522,  1522,  1522,
    1524,  1523,  1525,  1525,  1526,  1526,  1526,  1527,  1527,  1527,
    1528,  1528,  1529,  1530,  1530,  1531,  1532,  1533,  1533,  1534,
    1535,  1535,  1535,  1536,  1536,  1537,  1538,  1538,  1539,  1539,
    1539,  1540,  1540,  1541,  1541,  1543,  1542,  1544,  1544,  1545,
    1545,  1546,  1546,  1546,  1546,  1546,  1546,  1546,  1546,  1547,
    1547,  1547,  1548,  1548,  1548,  1548,  1548,  1549,  1549,  1549,
    1549,  1549,  1549,  1550,  1550,  1551,  1552,  1553,  1553,  1553,
    1554,  1555,  1555,  1555,  1556,  1556,  1556,  1558,  1557,  1559,
    1559,  1560,  1560,  1562,  1561,  1564,  1563,  1563,  1566,  1565,
    1565,  1568,  1567,  1569,  1569,  1569,  1569,  1570,  1570,  1571,
    1571,  1573,  1572,  1574,  1574,  1576,  1577,  1578,  1579,  1580,
    1575,  1582,  1583,  1584,  1585,  1581,  1586,  1586,  1586,  1586,
    1586,  1586,  1587,  1587,  1588,  1588,  1588,  1589,  1589,  1590,
    1590,  1590,  1591,  1591,  1592,  1592,  1592,  1593,  1594
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     4,     1,
       2,     0,     4,     0,     2,     3,     1,     2,     0,     3,
       0,     6,     0,     5,     1,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     3,     1,     3,     1,     2,     3,
       5,     7,     2,     3,     1,     3,     3,     2,     3,     1,
       3,     1,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     5,     3,     1,     0,     1,     3,     1,
       3,     3,     3,     3,     0,     3,     0,     7,     0,     0,
      14,     0,     0,    14,     0,     0,    14,     0,     6,     0,
       3,     8,     4,     3,    11,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     0,    12,     0,     6,     2,     0,
       1,     3,     1,     0,     2,     0,     2,     0,     1,     3,
       4,     0,     2,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     1,     0,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     1,     1,     1,     2,     3,     3,     0,     4,
       0,     3,     0,     1,     3,     1,     0,     1,     3,     1,
       0,     3,     0,     1,     3,     1,     4,     0,     1,     1,
       1,     0,     3,     2,     3,     0,     3,     0,     5,     5,
       0,     7,     0,     6,     1,     1,     1,     3,     1,     1,
       1,     3,     0,     1,     1,     1,     1,     2,     1,     3,
       1,     1,     0,     1,     0,     2,     3,     5,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     4,     0,     1,     1,     1,     3,
       1,     3,     3,     1,     2,     1,     1,     1,     1,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     0,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     5,     0,     2,     0,     3,     0,     2,
       2,     2,     2,     0,     6,     2,     0,     2,     1,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     1,     1,
       0,     0,     8,     0,     6,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     5,     0,
       1,     0,     5,     0,     2,     0,     5,     4,     0,     0,
       8,     0,     0,     8,     1,     1,     1,     1,     1,     2,
       4,     5,     0,     4,     4,     4,     3,     3,     2,     2,
       0,     2,     1,     2,     3,     1,     1,     1,     0,     1,
       1,     2,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     0,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     3,
       1,     1,     1,     1,     2,     3,     2,     4,     5,     0,
       5,     0,     0,     5,     0,     7,     1,     0,     1,     0,
       3,     0,     3,     5,     6,     0,     4,     2,     2,     2,
       2,     0,     1,     0,     3,     0,     1,     1,     3,     1,
       4,     3,     3,     0,     2,     0,     0,     7,     0,    10,
       1,     3,     1,     1,     0,     2,     0,     3,     1,     3,
       0,     6,     1,     0,     0,     5,     0,     4,     1,     1,
       1,     3,     1,     3,     0,     0,     5,     1,     3,     1,
       1,     0,     3,     1,     3,     0,     4,     1,     0,     1,
       2,     1,     3,     4,     3,     3,     3,     4,     4,     3,
       4,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       1,     1,     2,     1,     0,     3,     0,     1,     1,     2,
       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     0,     6,     1,     1,     3,     4,
       4,     3,     2,     2,     3,     3,     4,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     2,     2,
       7,     8,     8,     8,     8,     2,     0,     1,     4,     0,
       1,     2,     0,     3,     2,     9,     0,     2,     0,     1,
       2,     1,     1,     2,     2,     2,     1,     2,     0,     1,
       1,     4,     1,     3,     3,     3,     1,     2,     1,     1,
       3,     2,     3,     2,     2,     1,     3,     3,     2,     3,
       1,     2,     2,     2,     1,     2,     1,     1,     1,     2,
       3,     2,     3,     2,     2,     3,     3,     3,     0,     6,
       0,     6,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     2,     1,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       2,     0,     1,     1,     5,     0,     3,     0,     2,     3,
       0,     1,     2,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     3,     2,     1,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     1,
       2,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     1,     0,     2,     0,     2,     1,     1,     0,
       1,     1,     2,     2,     1,     2,     2,     0,     1,     1,
       1,     3,     1,     3,     0,     1,     0,     4,     1,     1,
       1,     0,     1,     2,     1,     1,     2,     1,     3,     3,
       1,     1,     0,     2,     0,     1,     5,     0,     3,     3,
       1,     0,     2,     2,     2,     0,     3,     3,     6,     6,
       1,     1,     2,     2,     2,     1,     2,     2,     1,     1,
       0,     1,     1,     1,     1,     0,     1,     1,     1,     0,
       1,     2,     0,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     1,     2,     2,     2,     3,     2,     1,     1,
       1,     1,     3,     1,     1,     1,     4,     2,     1,     4,
       0,     1,     0,     2,     1,     3,     0,     5,     0,     5,
       7,     0,     5,     0,     5,     0,     5,     0,     4,     0,
      10,     3,     4,     3,     3,     7,     5,     5,     1,     4,
       0,     1,     1,     2,     2,     2,     1,     4,     2,     2,
       3,     0,     2,     2,     1,     2,     2,     2,     2,     3,
       0,     3,     1,     4,     0,     3,     0,     2,     0,     1,
       1,     2,     2,     1,     3,     0,     1,     1,     3,     2,
       2,     1,     3,     4,     0,     6,     4,     0,     5,     0,
       6,     4,     3,     1,     7,     4,     4,     0,     1,     2,
       2,     2,     1,     1,     0,     5,     0,     3,     2,     0,
       5,     0,     0,     6,     1,     3,     1,     1,     3,     3,
       1,     3,     2,     3,     2,     4,     0,     6,     0,     0,
       7,     4,     4,     3,     3,     2,     2,     6,     5,     3,
       5,     5,     1,     1,     1,     2,     1,     1,     1,     0,
       1,     1,     2,     2,     3,     3,     3,     3,     0,     1,
       0,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     2,     2,     2,     4,     3,     0,     4,     3,
       0,     1,     1,     3,     3,     2,     2,     4,     0,     3,
       0,     3,     0,     3,     0,     3,     0,     1,     1,     3,
       1,     1,     0,     2,     1,     3,     3,     3,     1,     0,
       5,     0,     1,     1,     0,     6,     0,     1,     1,     2,
       1,     1,     1,     0,     5,     2,     0,     5,     0,     1,
       1,     2,     1,     1,     1,     1,     1,     2,     0,     5,
       0,     1,     1,     0,     4,     4,     3,     5,     1,     3,
       3,     0,     6,     1,     1,     1,     3,     2,     3,     1,
       1,     0,     6,     1,     1,     1,     3,     3,     4,     0,
       5,     1,     0,     4,     0,     2,     1,     3,     4,     2,
       3,     3,     3,     4,     3,    11,     0,     3,     8,     2,
       0,     1,     1,     1,     0,     1,     2,     1,     1,     1,
       1,     0,     2,     4,     3,     1,     1,     1,     2,     0,
       2,     2,     1,     1,     0,     2,     3,     3,     3,     2,
       3,     4,     3,     4,     3,     4,     1,     3,     4,     3,
       6,     1,     5,     6,     5,     7,     6,     8,     5,     6,
       4,     4,     5,     3,     4,     1,     3,     3,     3,     3,
       3,     3,     5,     5,     3,     3,     3,     3,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     3,     2,
       2,     2,     2,     3,     3,     5,     6,     4,     4,     7,
       2,     6,     5,     6,     6,     4,     4,     5,     3,     3,
       4,     6,     2,     4,     4,     4,    10,     6,     8,     6,
       4,     4,     6,     4,     4,     4,     6,     4,     7,     7,
       7,     6,     6,     6,     6,     3,     4,     6,     8,     2,
       2,     8,     8,     6,     6,     1,     6,     6,     8,     8,
       6,     8,     6,     2,     8,     8,     2,     2,     2,     4,
       4,     4,     4,     3,     8,     6,     8,     4,     6,     4,
       4,     6,     8,     4,     3,     6,     4,     6,     5,     8,
       7,    10,     1,     6,     4,     4,     4,     4,     4,     6,
       4,     4,     6,     2,     3,     0,     4,     0,     3,     0,
       1,     1,     3,     2,     4,     5,     4,     4,     4,     6,
       4,     5,     4,     5,     4,     5,     4,     5,     4,     4,
       4,     4,     4,     5,     7,     2,     3,     1,     4,     0,
       1,     0,     2,     0,     3,     3,     1,     2,     2,     3,
       2,     1,     2,     1,     2,     1,     2,     2,     2,     1,
       0,     1,     1,     3,     1,     3,     1,     3,     0,     1,
       0,     2,     4,     5,     1,     1,     1,     1,     4,     1,
       3,     3,     3,     5,     5,     7,     4,     7,     9,     6,
       7,     9,     6,     1,     2,     2,     0,     1,     4,     4,
       4,     4,     2,     4,     0,     3,     1,     0,     1,     0,
       2,     3,     3,     1,     1,     6,     6,     1,     2,     0,
       1,     1,     0,     1,     1,     1,     1,     3,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     0,     2,
       0,     1,     0,     2,     0,     2,     2,     0,     0,     4,
       3,     1,     0,     1,     1,     3,     3,     1,     2,     0,
       1,     3,     3,     1,     0,     1,     1,     0,     1,     2,
       1,     3,     3,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     5,     0,     1,     3,     1,     3,
       1,     2,     1,     0,     1,     2,     5,     2,     1,     3,
       0,     0,     7,     0,     0,     8,     4,     6,     4,     4,
       5,     0,     6,     4,     4,     4,     5,     4,     1,     3,
       1,     1,     3,     0,     2,     0,     1,     0,     1,     1,
       2,     3,     1,     1,     8,     9,     8,     6,     7,     6,
       0,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       4,     1,     3,     4,     3,     1,     2,     2,     4,     1,
       1,     3,     1,     1,     1,     0,     1,     3,     0,     1,
       3,     1,     1,     1,     0,     5,     9,     3,     1,     3,
       0,     1,     8,     6,     7,     0,     2,     0,     2,     1,
       1,     1,     0,     4,     0,     1,     0,     1,     1,     3,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     0,
       3,     0,     3,     2,     4,     4,     3,     4,     4,     1,
       3,     3,     6,     2,     2,     0,     6,     0,     7,     5,
       2,     1,     5,     5,     2,     2,     1,     4,     3,     2,
       3,     2,     2,     1,     3,     4,     3,     3,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     1,
       1,     1,     1,     1,     0,     1,     0,     2,     0,     1,
       1,     1,     0,     2,     0,     2,     0,     2,     2,     0,
       2,     2,     0,     4,     0,     4,     1,     1,     1,     1,
       1,     3,     1,     1,     0,     1,     1,     3,     0,     1,
       1,     0,     4,     0,     0,     5,     1,     0,     3,     0,
       3,     3,     1,     2,     2,     2,     2,     2,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     0,
       3,     3,     1,     0,     4,     1,     2,     0,     1,     0,
       3,     3,     2,     2,     3,     0,     1,     1,     2,     0,
       0,     0,     0,    22,     1,     1,     0,     1,     0,     1,
       1,     0,     1,     1,     0,     2,     2,     1,     3,     4,
       3,     3,     0,     2,     2,     1,     3,     3,     0,     4,
       0,     3,     1,     1,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     3,     1,     3,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     2,     2,     2,     1,     1,     3,     5,     2,
       1,     1,     1,     1,     3,     4,     5,     1,     5,     3,
       2,     1,     3,     2,     2,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     3,     6,     5,     8,     2,
       2,     0,     2,     1,     3,     2,     1,     1,     1,     1,
       0,     1,     1,     1,     0,     2,     2,     2,     3,     3,
       4,     6,     2,     3,     3,     1,     3,     3,     2,     2,
       1,     0,     2,     3,     0,     2,     2,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       1,     1,     1,     3,     3,     1,     1,     2,     2,     0,
       3,     1,     3,     4,     4,     3,     0,     7,     1,     2,
       1,     1,     1,     1,     1,     1,     0,     5,     1,     1,
       1,     1,     1,     0,     4,     6,     6,     6,     7,     5,
       0,     4,     8,     8,     8,     6,     0,     1,     1,     2,
       0,     1,     1,     3,     0,     3,     0,     3,     0,     3,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     2,     1,     1,     2,     0,     1,
       3,     1,     2,     2,     2,     1,     3,     3,     1,     1,
       3,     1,     3,     4,     5,     4,     6,     6,     1,     0,
       3,     3,     1,     1,     0,     2,     2,     2,     2,     0,
       2,     0,     3,     2,     1,     2,     2,     2,     2,     2,
       0,     3,     0,     1,     0,     3,     2,     0,     1,     2,
       0,     1,     4,     4,     5,     2,     3,     0,     1,     3,
       0,     1,     1,     0,     1,     1,     2,     1,     0,     1,
       1,     3,     4,     1,     4,     0,     2,     0,     1,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     1,     2,     1,
       2,     3,     3,     3,     0,     3,     3,     0,     7,     0,
       3,     1,     3,     0,     3,     0,     3,     4,     0,     2,
       3,     0,     3,     0,     3,     4,     4,     1,     1,     0,
       2,     0,    12,     7,     6,     0,     0,     0,     0,     0,
      14,     0,     0,     0,     0,    11,     4,     4,     3,     4,
       3,     3,     0,     2,     1,     3,     5,     1,     1,     0,
       1,     1,     0,     2,     0,     1,     3,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2665,  1180,  2600,     0,     0,     0,     0,     0,     0,
    2602,   159,    66,  1757,  1862,  1863,  1670,  1695,     2,     0,
    1180,   305,   209,     0,    78,  1710,     0,  1915,     0,     0,
    1180,     0,   521,     0,  1909,     0,     0,  1180,  1750,  1899,
     282,   209,  2602,     0,  1226,     0,  1781,  2481,     0,     0,
       0,  1764,     0,  2479,  1750,     0,     0,     0,     0,     3,
       8,    19,     0,    41,    24,    30,    14,    18,    13,    54,
      48,    26,    39,    38,    10,     0,    27,    57,  1142,    58,
      16,    45,    11,    12,    15,    36,    44,    37,    40,    52,
    1216,    22,    23,    31,    46,    62,    20,    59,    55,    21,
    1864,    25,    47,    42,    33,    63,    34,    53,    35,    61,
      56,   978,    29,    49,    28,     9,    17,    50,    51,    43,
      64,    32,    60,     0,  1008,     0,     0,     0,     0,     0,
       0,     0,     0,  1693,   967,  2663,  2664,  2665,  1182,  1181,
       0,  2602,  2021,  1165,  1191,  2035,  2091,  2092,  2093,  2094,
    2095,  2096,  2037,  2097,  2098,  2036,  2099,  2101,  2100,  2102,
    2103,  2038,  2039,  2104,  2105,  2106,  2108,  2107,  2109,  2040,
    2041,  2110,  2111,  2112,  2113,  2114,  2042,  2043,  2115,  2117,
    2116,  2044,  2118,  2119,  2120,  2123,  2122,  2121,  2045,  2124,
    2046,  2125,  2126,  2127,  2128,  2129,  2130,  2131,  2132,  2133,
    2135,  2134,  2047,  2136,  2137,  2138,  2139,  2140,  2142,  2141,
    2143,  2144,  2145,  2048,  2146,  2147,  2148,  2149,  2150,  2151,
    2152,  2153,  2154,  2049,  2155,  2156,  2157,  2177,  2050,  2158,
    2161,  2160,  2159,  2162,  2163,  2164,  2166,  2165,  2167,  2168,
    2051,  2169,  2170,  2171,  2172,  2173,  2175,  2174,  2179,  2180,
    2181,  2182,  2183,  2052,  2053,  2054,  2176,  2178,  2388,  2184,
    2055,  2186,  2185,  2187,  2189,  2188,  2056,  2190,  2057,  2058,
    2191,  2192,  2017,  2193,  2018,  2194,  2196,  2197,  2198,  2204,
    2199,  2059,  2195,  2200,  2201,  2202,  2203,  2205,  2206,  2060,
    2207,  2208,  2209,  2210,  2211,  2212,  2213,  2214,  2215,  2216,
    2239,  2227,  2229,  2220,  2222,  2223,  2225,  2221,  2228,  2226,
    2232,  2233,  2231,  2234,  2235,  2236,  2237,  2238,  2230,  2218,
    2224,  2219,  2240,  2241,  2217,  2242,  2243,  2244,  2245,  2246,
    2247,  2248,  2249,  2250,  2251,  2252,  2254,  2253,  2255,  2256,
    2257,  2258,  2259,  2260,  2262,  2261,  2263,  2264,  2265,  2266,
    2268,  2267,  2270,  2271,  2061,  2269,  2272,  2273,  2274,  2275,
    2276,  2062,  2063,  2064,  2277,  2278,  2065,  2066,  2279,  2281,
    2280,  2282,  2283,  2284,  2285,  2286,  2287,  2288,  2067,  2068,
    2069,  2289,  2290,  2291,  2292,  2293,  2294,  2295,  2296,  2297,
    2298,  2299,  2300,  2301,  2302,  2304,  2303,  2305,  2306,  2307,
    2308,  2309,  2310,  2311,  2070,  2312,  2071,  2313,  2314,  2315,
    2316,  2317,  2318,  2319,  2320,  2321,  2072,  2322,  2073,  2323,
    2324,  2325,  2326,  2074,  2327,  2328,  2329,  2330,  2332,  2333,
    2331,  2334,  2075,  2335,  2336,  2337,  2076,  2339,  2338,  2340,
    2077,  2342,  2078,  2079,  2341,  2081,  2343,  2344,  2080,  2082,
    2345,  2346,  2347,  2348,  2349,  2351,  2350,  2352,  2353,  2354,
    2355,  2083,  2356,  2357,  2358,  2359,  2084,  2360,  2361,  2362,
    2363,  2364,  2366,  2365,  2367,  2368,  2369,  2370,  2372,  2374,
    2373,  2371,  2375,  2376,  2377,  2378,  2381,  2382,  2383,  2384,
    2379,  2380,  2085,  2385,  2386,  2387,  2389,  2390,  2392,  2391,
    2086,  2087,  2393,  2394,  2090,  2395,  2396,  2397,  2400,  2398,
    2399,  2402,  2401,  2403,  2406,  2404,  2405,  2088,  2407,  2089,
    2408,  2409,  2410,   228,  2024,   211,  2025,  2034,     0,     0,
    2471,  2470,  1149,  1166,  2603,  2604,   614,   917,     0,     0,
     918,     0,   613,   916,   614,  2665,     0,   610,   611,     0,
       0,     0,  1761,  1760,  1759,     0,  1757,     0,  1693,  1693,
    1693,     0,     0,  1693,  1693,     0,  1696,  1693,  1693,  1693,
       0,    71,  1871,   306,   307,     0,  2510,   208,     0,     0,
       0,  2016,     0,  1712,  1713,  1711,  1100,     0,  1916,  1917,
       0,  1924,     0,  1925,  1919,  2468,     0,     0,     0,     0,
       0,     0,   209,  1183,     0,  1715,  1751,  1716,  1714,     0,
     272,   281,   283,   284,   280,  2503,  2604,  2615,  2617,  1609,
    1234,   831,     0,     0,  2427,  2428,  2262,  2282,  2429,  2379,
       0,     0,  2445,  2411,     0,  2421,     0,  1838,   284,  1112,
    1136,  1120,  1113,  1136,  1765,  1762,     0,     0,  1100,  1918,
    2727,     0,     0,     0,  2722,     0,  2728,     0,  1226,     0,
       0,     1,     5,     0,     0,  1254,  2030,  2395,     0,  2029,
    2028,  2031,  2578,  2584,  2571,     0,  1114,  1128,  2172,  2054,
    2281,  1854,  1852,  2011,     0,   958,  1009,     0,   963,     0,
    2482,     0,   961,     0,   974,   973,   971,     0,   485,   956,
       0,   209,     0,  2674,   965,  1163,  2601,     0,   230,     0,
      80,    82,     0,     0,     0,  2607,     0,     0,     0,     0,
     163,     0,   209,     0,   160,  2674,  2674,  2665,  2667,  2669,
     614,   612,     0,     0,     0,     0,     0,  1691,  1755,  1758,
    2092,  2036,  2103,     0,  1984,     0,     0,     0,  1498,     0,
    2042,     0,  2118,  2120,  2047,     0,     0,  1254,  1254,   787,
       0,     0,     0,  2144,  2145,  1990,     0,     0,     0,  1981,
    1991,  2054,  2186,  2187,     0,  1983,  2192,     0,     0,     0,
       0,  2211,  1988,     0,     0,  2249,  2251,     0,     0,  2255,
    2256,  2257,  2258,  1967,  1308,     0,   787,  1980,  1987,  1973,
    2282,  2287,  2288,     0,  2297,     0,     0,  2326,     0,  2333,
    2331,  2337,     0,     0,  2363,     0,     0,   787,  1966,  2381,
    2382,  2383,  2384,     0,  1982,  2085,  1989,     0,  2395,  1254,
     787,   787,     0,     0,     0,  2403,  2406,  2410,     0,     0,
       0,     0,  1246,     0,  2635,  1307,     0,     0,     0,  1385,
    1669,  1245,  1249,  1266,  1271,  1285,     0,  1300,  1319,  1320,
    1322,  1422,  1321,  1327,  1326,  1977,  1325,  1324,  1978,  1979,
    1247,  1318,  2001,  2024,  2000,     0,     0,     0,     0,     0,
       0,     0,  1697,     0,   209,  1681,  1693,    73,     0,     0,
       0,  2013,  1585,  2485,  2486,     0,    79,  1101,  1716,     0,
    1914,  2000,     0,  1928,     0,  1178,     0,   712,   531,   522,
       0,  1833,  1832,     0,  1910,  2616,     0,     0,  1154,  1717,
       0,  1905,     0,  1903,  1900,  1902,   273,     0,     0,   303,
       0,  2610,  2607,  2628,  1217,  2618,     0,     0,  1617,  1610,
       0,  1241,  2648,  2643,  2642,  2645,  2646,  1240,  2647,  1239,
    2644,  2641,     0,  1235,  1237,  1238,   830,     0,   833,   835,
    1733,  1734,   834,   843,     0,   832,     0,     0,     0,     0,
    2413,  2454,  2451,  2450,  2434,     0,   839,   841,   840,  2442,
     838,     0,  2379,  2414,  2421,     0,     0,  2412,     0,     0,
     831,  1846,     0,     0,  1846,     0,  1617,  1836,  1839,     0,
    2431,  1813,   914,   913,   912,  2432,  1832,     0,  1789,  1801,
       0,  1766,  1806,     0,  2433,     0,  1835,     0,  1617,  1846,
       0,  1782,     0,     0,     0,     0,   279,  1141,  1140,  1116,
    1137,  1138,     0,     0,  1119,  1121,  1122,   144,     0,  2738,
    2480,     0,  1972,  1971,  2022,  2724,  1970,  2732,  2734,  2718,
       0,  2721,  2720,  2729,  1219,     0,  2620,     6,    65,     0,
    2033,     0,     0,     0,     0,     0,     0,   991,     0,     0,
       0,     0,     0,  1148,     0,  1144,  1143,     0,  1117,  1130,
       0,     0,  1868,  2672,  2673,  2671,   849,     0,  2666,   212,
       0,   972,     0,   486,   212,     0,     0,     0,     0,     0,
     487,   488,   419,  1015,  1694,   979,   969,     0,     0,   968,
    2674,     0,     0,  1193,  1195,  1194,  1212,   232,   229,   210,
       0,     0,  1151,  1688,  1690,  1168,  2606,     0,     0,  2608,
    2612,  1306,  1305,     0,   157,   162,     0,     0,     0,     0,
    2670,     0,   614,     0,     0,     0,  2662,  2650,  2657,  2658,
    2661,  2660,  2659,     0,  2656,  2649,  2652,  2653,  2655,  2654,
    2674,  2668,     0,   919,   919,   919,     0,  1526,  2011,     0,
       0,     0,  2014,     0,     0,  1590,  1340,  1590,  1590,  1590,
    1499,     0,     0,     0,     0,     0,     0,     0,     0,  1590,
    1379,  1352,     0,  1380,     0,     0,     0,  1992,     0,     0,
       0,  2635,     0,     0,  1490,     0,  1469,     0,     0,     0,
    2635,     0,     0,     0,     0,     0,  1494,  1496,  2000,  1590,
       0,     0,  1590,     0,     0,     0,     0,     0,  1259,   827,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1590,  1590,     0,     0,  1590,  1393,  1994,     0,
       0,     0,  1993,     0,     0,     0,  1986,  1985,  1968,     0,
    1396,  1398,  1397,     0,  1590,  1590,     0,     0,     0,  1590,
    1590,  1330,  1329,  1331,     0,     0,     0,     0,  2434,  1465,
    1467,     0,     0,  1304,  1303,     0,  1302,  1301,     0,  1248,
       0,     0,  1253,  1252,  1309,  1310,  1311,  1312,     0,  1313,
    1314,  1315,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1332,     0,     0,  1969,     0,     0,  1439,     0,  1676,
    1683,  1678,     0,  1697,  1679,  1687,   501,   500,  1702,  1703,
    1685,  1698,  1699,     0,  1684,     0,     0,  1671,     0,    72,
       0,  1894,     0,     0,     0,  1890,  1892,  1896,  1891,     0,
       0,  1895,     0,  1893,  1872,  1876,  1882,  1873,     0,     0,
     304,   308,   310,     0,   313,  2520,  2535,  2536,  2532,  2537,
    2555,  2538,  2542,     0,  2534,  2526,     0,  2541,     0,  2530,
    2539,     0,  2524,     0,  2540,  2545,  2556,  2528,  2533,  2511,
       0,  2518,  2522,  1586,  1587,     0,  2484,     0,  2012,     0,
       0,     0,  1201,  1929,  1930,  1926,  1585,  2469,  2472,     0,
     711,   532,     0,     0,   543,     0,     0,    68,    69,     0,
    1185,     0,  1184,  1188,     0,     0,  1526,  1906,  1907,     0,
     271,   296,   291,   299,   293,   295,   294,   300,   301,   302,
     297,   292,   298,   285,     0,  2520,     0,  2504,     0,  2611,
       0,  2613,  2630,  2629,     0,  2155,     0,     0,  1668,  1660,
    1665,  1662,     0,     0,  1241,  1618,     0,  1592,     0,     0,
    1224,  1227,  1236,  2447,     0,  2444,  2443,     0,     0,  2462,
    2415,     0,  2456,  2457,     0,  2448,     0,  2449,     0,     0,
       0,     0,     0,  2446,  2420,  2419,     0,  2422,  2423,     0,
    2426,  2466,  2467,  2464,  2465,  2463,  2439,  1842,     0,     0,
    1812,     0,   614,     0,     0,     0,     0,     0,   209,     0,
    1783,     0,     0,   659,  1805,  1840,  1841,  1846,     0,     0,
    1846,     0,  1818,  1836,     0,  1846,  1778,     0,     0,  1770,
    1775,  1771,     0,  1777,  1776,  1779,  1767,  1768,  1842,  1794,
     144,  1836,  1804,  1811,     0,  1793,  1800,     0,  1809,  1836,
    1836,  1849,  1849,     0,  1125,  1126,     0,     0,     0,  1115,
    1763,  1234,     0,     0,  1507,     0,  1509,  1506,  1505,  1504,
    1526,     0,     0,  2719,  2735,  2717,  2723,  2730,  2731,  2716,
    1220,  1617,  2627,  2621,  1218,  2622,  2625,     7,     4,  1255,
     999,     0,  2032,     0,     0,     0,     0,  2588,  2586,     0,
    2587,  2585,  2561,  2572,     0,   980,     0,     0,     0,     0,
       0,     0,     0,     0,   144,     0,  1132,  1867,     0,  1856,
    1857,  1858,  1859,  1860,  1855,  1853,  1869,  1870,   850,   849,
     605,   608,   607,     0,     0,   964,     0,     0,   474,   962,
       0,     0,   452,   430,   452,   489,  1098,  1735,  1098,     0,
    1735,  1735,  1098,  1735,     0,     0,  1735,  1735,  1735,  1735,
       0,     0,  1735,     0,     0,  1098,     0,  1735,     0,  1083,
       0,     0,  1735,  1735,  1735,  1735,  1735,  1098,     0,     0,
    1735,  1735,     0,  1108,     0,     0,  1735,  1735,  1735,  1735,
       0,  1735,  1735,     0,  1735,     0,     0,     0,  1082,   618,
     646,   647,   957,  1010,  1013,  1088,  1021,  1033,  1017,  1016,
       0,  1057,  1060,  1086,  1087,  1084,  1000,     0,     0,   966,
    1164,     0,     0,   909,   908,  1209,     0,  1212,  1197,  1211,
       0,   233,   235,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   144,   112,   135,     0,     0,     0,
       0,     0,     0,     0,    83,    84,  1153,  1152,     0,  1150,
    1176,  1175,  1173,     0,  1174,  1172,  1167,  1169,  1170,  2605,
    2609,   615,   849,   462,     0,   422,  2584,     0,     0,     0,
     211,  2711,     0,  2651,   146,   920,     0,     0,     0,     0,
       0,  1592,  1527,     0,  1592,  1692,  1756,  1755,     0,     0,
    1591,  1590,     0,     0,     0,     0,     0,     0,  1500,     0,
       0,  1492,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   788,  1403,     0,     0,     0,     0,     0,     0,  1561,
    1562,  1563,  1564,  1572,  1565,  1566,  1567,  1574,  1579,  1568,
    1569,  1575,  1576,  1577,  1570,  1578,  1573,  1571,  1580,     0,
    1560,     0,     0,  1491,  1584,  1581,  1583,  1582,     0,  1470,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1590,     0,     0,     0,  1590,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1414,     0,     0,     0,     0,     0,  1590,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1375,     0,  2003,  2002,     0,     0,     0,   882,     0,     0,
       0,  1334,     0,  1333,  1534,     0,  2633,  2636,     0,     0,
       0,     0,  1244,  1251,  1250,  1257,  1256,  1258,  1262,  1267,
    1260,  1264,     0,  1316,  2098,  1269,     0,     0,  1297,  2635,
    1597,  1298,  1283,  1288,  1289,     0,  1286,  1287,     0,  1291,
       0,  1290,  1294,  1295,  1296,  1299,     0,     0,     0,     0,
    1323,  1328,  1348,  1349,  1249,     0,  1440,  1441,  1997,  2004,
       0,  1673,  1686,  1834,  1700,  1735,  2569,  1680,  1102,     0,
       0,    74,    76,  1887,  1884,  1883,  1885,  1889,   144,  1886,
       0,  1897,  2144,  2381,  2384,   317,     0,   289,   288,   290,
     314,     0,     0,  2521,  2519,  2553,  2552,  2557,     0,  2554,
    2550,  2543,  2579,  2547,     0,  2579,  2549,  2548,  2579,  2544,
    2551,  2579,  2516,     0,  1589,  2182,  2267,     0,  1592,  2488,
    1526,  2737,  2004,     0,  1927,     0,     0,     0,  1179,     0,
       0,   530,   529,   528,   527,     0,   545,   525,   533,    70,
       0,     0,  1911,     0,     0,     0,     0,  1156,     0,  1908,
     144,  1901,     0,     0,  2519,     0,  2516,  2614,  2619,  2023,
    1667,   836,  1661,     0,  1614,  1611,  1613,  1626,  1627,  1625,
    1619,  1620,  1624,  1623,  1223,  1233,  1229,  1232,     0,  1598,
    1242,     0,   848,   847,   844,   842,     0,     0,     0,     0,
    2461,  2453,  2455,  2452,  2435,  2436,  2437,     0,  2440,  2438,
       0,  2425,     0,  1844,  1847,  1848,     0,     0,  1827,  1821,
    1820,  1816,  1822,     0,  1817,  1831,  1830,  1829,  1791,  1790,
    1786,  1837,  1826,  1824,  1814,  1846,  1825,  1823,  1772,  1773,
    1774,     0,  1617,     0,  1844,  1819,  1846,  1836,     0,  1846,
    1846,     0,     0,  1808,  1810,  1139,  1124,  1123,     0,     0,
    1536,     0,  2623,     0,     0,     0,  1523,  1537,     0,  1537,
       0,     0,     0,     0,  1585,  2725,  2733,     0,  2626,   977,
       0,  2573,  2575,  2564,  2563,  2562,  2559,     0,     0,     0,
       0,     0,   992,   994,     0,     0,   976,   981,   982,   986,
     140,  2019,  1644,  1645,  1643,  1641,  1642,   141,   142,  1634,
    1635,  1631,  1632,  1630,  1633,   143,  1147,  1146,  1145,  1129,
    1118,     0,     0,  1134,     0,   606,  1735,  1735,     0,     0,
       0,     0,     0,     0,     0,     0,   213,   222,  2483,     0,
       0,   428,   429,  1735,   427,   475,   476,   479,   480,   481,
       0,     0,     0,     0,     0,     0,     0,     0,   165,   482,
    1735,  1735,   424,   453,   454,   457,   458,   459,   460,   461,
     420,     0,   425,  1099,   950,  1180,  1064,     0,   690,   950,
     905,   910,   910,  1062,  1736,     0,     0,  1180,     0,     0,
       0,     0,     0,  1180,     0,     0,     0,     0,     0,  1735,
       0,  1075,     0,  1019,     0,     0,     0,     0,     0,  1076,
       0,     0,     0,  1020,  1735,     0,     0,     0,     0,     0,
       0,  1180,     0,     0,     0,  1180,  1111,  1110,  1109,     0,
       0,  1180,  1180,     0,     0,     0,     0,   652,   653,     0,
       0,     0,   644,  1085,  1039,  1040,   619,   519,     0,  1011,
    1012,   849,   849,   689,     0,  1105,   686,   692,  2007,     0,
    1002,  1004,  2675,  2676,  2677,  1200,  1192,  1199,  1196,  1212,
       0,  1552,  1198,   231,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    81,     0,     0,
       0,     0,     0,     0,     0,     0,  1689,  1177,  1171,   158,
     849,  1735,  1735,  1735,  1735,   426,   463,   464,   467,   468,
     469,   470,   473,   471,   472,     0,     0,   438,   991,     0,
     174,  2705,     0,     0,   415,   414,     0,   616,     0,     0,
     921,     0,     0,     0,  1592,     0,  1609,  2012,  1753,     0,
    2015,     0,  1399,     0,  1444,  1477,  1446,  1447,  1450,     0,
       0,     0,     0,     0,  1400,     0,  1350,     0,  1401,  1402,
       0,     0,     0,     0,  1452,     0,   789,     0,     0,  1353,
    1354,  1345,  1337,     0,     0,  1424,     0,  1473,  1355,     0,
       0,     0,     0,     0,  1425,  1495,     0,  1497,  2004,     0,
    1456,  1407,  1360,     0,  1454,     0,  1361,  1426,  1427,  1428,
    1409,     0,  1430,     0,  1410,     0,     0,  1413,     0,     0,
    1363,  1460,  1458,     0,     0,     0,     0,  1462,  1365,     0,
       0,     0,  1364,     0,     0,     0,     0,     0,     0,     0,
    1367,     0,  1346,  1459,  1461,  1416,     0,     0,     0,     0,
       0,  1376,  1590,  1448,     0,  1230,  2637,  1534,     0,     0,
    2628,  1338,   952,  1466,  2005,  1263,  1268,  1261,  1265,  2635,
       0,     0,     0,     0,  1281,  1280,     0,     0,     0,  2635,
    1597,  1284,  1443,  1431,     0,  1490,     0,  1677,  1674,  1701,
       0,     0,  1104,  1103,  1682,  1102,    77,     0,  1888,  1881,
    1898,  1874,     0,   309,   318,   311,   315,   316,   312,  2546,
       0,  2527,     0,  2531,  2525,  2529,     0,     0,  2517,     0,
    2523,  2498,  2492,  2499,  2501,  2495,  2500,  2502,  2493,  2494,
    2489,  2496,  1617,     0,     0,  1202,  1204,  1205,  1203,  1212,
       0,     0,  2475,  2476,  2474,  2473,   535,     0,   553,  1651,
    1652,  1637,  1638,  1636,  1639,   544,  1640,  1650,     0,   556,
       0,     0,     0,  1913,  1912,     0,  1186,  1189,  1190,  1161,
    1160,  1162,  1155,  1157,  1158,  1234,     0,  1730,  1729,     0,
    2617,  1707,  1709,  1718,  1721,     0,  1904,     0,   286,     0,
       0,     0,     0,     0,     0,  1934,  1659,  1615,  1616,  1999,
       0,     0,     0,  1593,     0,  1594,     0,     0,  2417,     0,
    2459,  2458,  2460,     0,  2424,  1843,     0,  1795,     0,  1815,
    1828,  1788,     0,  1807,  1769,  1797,  1787,  1592,  1836,  1784,
    1785,  1850,  1851,   145,  1230,  2628,  1585,  1532,  2624,     0,
    1525,  1524,  1538,     0,     0,  1537,  1537,     0,  1512,  1511,
    1592,  1748,     0,  1510,  1549,     0,  2736,  2574,     0,     0,
    2560,   997,   995,   996,   998,   993,   985,   984,   209,   983,
     989,     0,   988,  1131,     0,     0,  1127,  1861,     0,     0,
     960,   216,   219,   217,     0,   218,     0,     0,   484,   483,
       0,  1834,   477,   169,   168,   170,   171,   173,   172,   167,
     975,     0,     0,     0,  1834,   455,   431,   432,   435,   436,
     437,   691,   951,  1044,     0,     0,     0,   910,   685,   950,
     919,   911,   950,   950,  1094,  1095,     0,     0,   631,   626,
    1066,   640,  1042,  1027,  1043,  1054,  1056,     0,   628,   629,
     630,   654,     0,     0,   642,     0,     0,  1022,  1073,  1074,
    1102,   623,   658,     0,     0,     0,   667,   668,   666,   648,
     655,  1096,  1097,   624,   625,  1068,     0,  1605,  1607,  1614,
     633,   632,   627,     0,     0,  1079,  1049,     0,   665,   663,
     660,   662,   661,   664,   643,   635,   634,   637,   636,   639,
     638,   651,   641,  1032,     0,     0,  1041,  1098,  1098,  1058,
    1059,  1014,  1018,  1061,     0,   673,   674,   676,   677,  2010,
       0,  1107,  1063,     0,   678,   687,   679,     0,     0,     0,
       0,     0,   179,  2679,     0,  1555,     0,  1556,  1553,  1554,
     234,   136,   134,   115,   119,   121,   114,   117,   118,   120,
     124,   125,   123,   126,   127,   130,   131,   128,   122,   129,
     116,   132,   113,     0,    86,    87,     0,    88,    89,     0,
      90,    91,     0,    92,    85,     0,     0,     0,     0,  1834,
     465,     0,     0,  1735,  1735,   421,   439,   440,   443,   444,
     445,   446,   447,   450,   448,   451,   449,   980,     0,     0,
     236,   671,   672,   670,   669,     0,  2712,   418,   416,   417,
       0,     0,   689,   147,   517,   617,   620,   943,   945,   944,
     935,   934,   148,   151,   154,  1754,     0,  1558,  1628,     0,
       0,  1445,     0,  1501,     0,  1342,   801,   801,   785,  1485,
     781,  1489,   801,  1481,   785,  1483,     0,     0,  1493,     0,
       0,     0,  1453,  1451,     0,     0,     0,     0,     0,     0,
    1471,     0,     0,     0,  1347,     0,  1435,  1457,  1455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1463,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   871,   877,   880,   881,   883,
     875,     0,  1418,     0,  1335,  2631,  1231,  1592,     0,  2638,
    2640,  1230,     0,  2623,     0,     0,  1468,     0,  1278,  1274,
       0,  1272,  1596,  1293,  1292,     0,     0,     0,  1282,  1442,
       0,  1998,  2006,  1089,   498,  2570,  1672,    75,  1877,     0,
       0,  2583,     0,  2582,     0,  2565,  2568,  2011,     0,     0,
       0,     0,  2487,     0,  1744,  1744,     0,  1212,  1214,  1920,
    2477,  2478,     0,   536,   537,   539,   541,   531,     0,   523,
     526,     0,   535,     0,  1159,     0,  1708,     0,     0,     0,
    1725,  1996,  1995,  2002,  1727,  1738,  1726,  1732,     0,     0,
       0,     0,     0,     0,   837,     0,  1942,  1612,  1622,  1621,
       0,     0,  1609,  1243,     0,  2416,  2441,  1845,  1617,  1803,
    1802,  1780,  1617,  1799,  1846,  1530,     0,  1531,  1508,     0,
    1516,     0,     0,     0,     0,     0,     0,     0,  1609,     0,
    1543,  1544,     0,     0,  1547,  1550,  1551,  1529,  2726,  2576,
    2577,   990,     0,  1133,     0,   657,   656,   221,   220,   226,
     227,  1648,  1646,  1647,   490,   502,  1649,   503,   478,   166,
     491,   492,   456,     0,   433,  1046,     0,   950,   906,   907,
     919,     0,   919,   919,     0,     0,  1026,     0,  1168,     0,
    1031,   843,   649,  1035,  1072,  1071,     0,  1036,   650,     0,
    1024,     0,  1608,  1023,     0,  1051,  1029,  1897,   520,  1065,
     689,  1106,   887,   777,   725,   716,   801,   719,   718,   763,
     785,   730,   781,   779,   748,   781,   781,   756,   755,   773,
     754,   759,   738,   857,   857,   737,   776,   857,   760,   758,
     762,     0,   764,   781,   769,   757,   761,   778,   753,   750,
     775,   801,   785,   785,   734,   774,   857,     0,   767,   801,
     693,   805,   736,   857,   864,     0,     0,   801,   803,  2009,
       0,   189,     0,     0,  1001,     0,   182,   180,   191,     0,
       0,     0,  1213,     0,     0,   137,   139,    93,     0,    95,
      97,   102,     0,   104,     0,   107,     0,   109,  2020,   111,
       0,    98,     0,   497,   496,   495,   494,   466,     0,     0,
       0,     0,  1834,   441,   161,     0,     0,     0,   237,   239,
     240,     0,   247,     0,   506,     0,   504,     0,   516,   518,
       0,  1931,   849,   621,     0,     0,     0,  1528,     0,     0,
    1752,     0,  1377,  1502,     0,     0,   802,  1478,   857,     0,
    1487,     0,  1488,   783,   782,  1480,  1482,  1486,  1484,  1341,
    1351,  1423,  1344,  1343,     0,     0,  1383,  1405,     0,  1384,
       0,     0,     0,     0,     0,  1357,     0,  1359,     0,     0,
    1437,  1408,  1429,  1386,  1411,     0,  1362,  1336,     0,  1387,
       0,  1392,  1390,     0,  1366,     0,     0,  1373,     0,  1371,
       0,  1372,     0,  1374,  1415,  1417,     0,     0,   882,   868,
     869,   870,     0,   872,   874,   876,     0,     0,  1449,  1598,
    1535,  2639,  1221,  1222,  2632,  2634,   953,  1270,     0,  1279,
    1276,     0,  1273,  1432,  1675,  1091,  1090,  1879,     0,  1875,
     326,   321,   329,   323,   325,   324,   330,   331,   332,   333,
     327,   322,   328,   320,   319,  2580,     0,  2591,     0,     0,
       0,     0,     0,     0,  1744,     0,  1704,  1706,  1206,  1212,
    1214,     0,  1207,  1931,   540,     0,     0,   560,     0,   558,
     534,     0,  1187,  1230,     0,  1719,  1722,  2620,     0,     0,
       0,  1743,  1742,     0,  1739,  1741,     0,   287,     0,  2509,
       0,     0,     0,     0,     0,     0,     0,  1935,  1937,     0,
    1666,  1602,  1601,  1595,  1617,     0,  1796,   144,  1792,  1533,
       0,  1504,     0,     0,     0,  1504,  1514,  1513,     0,  1747,
    1628,  1749,  1539,  1539,  1548,   987,  1135,   434,     0,     0,
    1045,     0,     0,     0,     0,     0,     0,  1078,     0,  1105,
    1028,  1055,  1081,     0,  1069,  1180,  1606,  1080,  1050,  1052,
    1156,     0,   675,     0,   891,   724,   717,   735,   733,   790,
     780,     0,   790,   790,   851,   862,   860,   854,     0,   858,
     859,   744,   763,   739,     0,   857,   752,   743,   765,   768,
     770,   772,   790,     0,   857,   732,   731,   741,   728,   790,
     813,     0,     0,     0,     0,   809,     0,   885,     0,     0,
     816,   694,   806,   808,   696,     0,     0,   766,   857,   721,
     865,   864,   723,   857,   864,   790,     0,   804,   790,     0,
     190,   178,     0,     0,  1003,  1005,     0,     0,  1006,  2681,
       0,  2683,  1210,  1557,   133,     0,    94,     0,   103,     0,
       0,   108,     0,     0,    99,     0,     0,   423,   493,   499,
     442,     0,     0,  2706,     0,     0,  2704,   250,   248,   249,
       0,   243,   245,   240,     0,     0,     0,   616,  1933,  1932,
     505,   601,   622,     0,     0,     0,  1559,  1629,     0,  1503,
       0,     0,     0,     0,  1479,     0,     0,     0,     0,     0,
    1474,  1476,  1472,  1464,     0,     0,     0,     0,     0,  1339,
       0,  1433,     0,     0,     0,     0,     0,     0,  1370,  1368,
    1369,   866,  1420,     0,   879,   873,   871,   878,     0,  1594,
    1275,     0,  1093,  1092,     0,     0,  2581,     0,  2515,  2567,
    2566,  2584,  2584,  2584,     0,  1705,     0,  1208,  1215,     0,
     538,     0,   533,     0,   557,     0,   524,   600,  1728,  1720,
    1723,  1724,  2004,  1737,     0,  1731,     0,  2506,  2507,  2505,
       0,     0,     0,     0,  1936,     0,     0,  1943,  1945,  1603,
    1604,     0,  1599,  1653,  2418,  1798,     0,     0,  1519,  1522,
       0,     0,     0,  1746,     0,     0,     0,  1048,     0,   688,
       0,     0,     0,  1614,   948,     0,     0,     0,     0,     0,
       0,     0,  1077,  1974,  1067,  1037,  1105,  1025,     0,  1030,
     645,     0,   890,     0,   895,   794,   795,   796,   745,   791,
     793,     0,   747,   715,   853,   852,   856,     0,   855,   864,
     740,   771,   746,     0,   742,   729,   819,   820,   822,   821,
     818,   828,   811,   829,     0,     0,   823,   824,   825,   817,
       0,   807,     0,     0,   815,   810,   720,   722,   726,   727,
     713,     0,   714,  2008,   176,   181,   192,   193,   970,  2680,
       0,  2678,     0,   138,    96,   105,   106,   110,     0,     0,
       0,  2703,   187,     0,   238,   843,   241,  2713,   247,     0,
       0,   507,   509,   517,   602,     0,     0,     0,     0,  1378,
     799,   797,   800,   798,   786,     0,  1381,  1382,  1406,     0,
    1404,     0,  1358,  1434,     0,     0,  1412,  1388,  1391,  1389,
    1394,  1395,     0,  1419,     0,  1609,  1277,  1880,  1878,     0,
    2589,  2589,  2589,  2497,     0,     0,     0,   546,     0,   563,
     562,   559,  1740,  2508,  1940,  1941,     0,  1938,     0,     0,
    1944,  1600,     0,  1663,  1517,     0,  1520,     0,  1515,     0,
    1540,     0,  1552,     0,  1047,     0,     0,   922,     0,   947,
       0,     0,     0,  1976,  1975,  1034,  1038,  1070,     0,   888,
       0,   892,   893,   894,     0,   886,   792,     0,   954,   863,
     861,     0,   812,   814,   819,   697,     0,   183,  1007,   354,
    2682,  2691,  2688,  2693,  2685,     0,     0,   164,   179,   188,
    2707,   826,   214,   244,     0,     0,  2620,  1931,     0,   512,
     922,   924,   926,     0,  1475,     0,  1436,  1438,   867,     0,
    1617,  2592,     0,  2513,  2514,  2512,     0,     0,     0,   554,
       0,     0,   588,  1939,  1947,  1946,     0,  1241,  1664,     0,
       0,  1542,  1541,     0,     0,     0,   922,     0,  1735,   680,
     923,   939,   938,   928,  1614,     0,   924,   926,     0,   889,
       0,     0,   857,     0,   857,     0,     0,   185,   380,     0,
     366,   352,     0,     0,     0,   356,   194,   197,   195,     0,
     196,   202,     0,   203,   204,   205,   206,   207,   198,   378,
     379,   201,   199,   200,     0,  2026,     0,  2027,  1226,  2688,
       0,     0,     0,  2684,  2617,   100,     0,   191,     0,  2714,
     246,  2699,   510,   508,     0,  2617,   149,     0,   152,   925,
     941,   932,   155,   927,   940,   930,   784,  1356,  1421,  1653,
       0,     0,     0,     0,     0,  2590,  2594,  1745,  1526,   542,
       0,   547,     0,   550,   552,   566,     0,  1735,     0,     0,
    1735,  1735,  1735,  1735,   581,   589,   591,     0,  1655,  1225,
    1518,  1521,  1546,  1545,   684,   683,   937,     0,   929,   946,
     949,   681,   682,     0,   901,     0,   900,     0,   897,   896,
     749,   955,   751,     0,   184,     0,   177,     0,     0,   365,
     368,     0,     0,   371,   361,   360,   362,     0,   355,   354,
     354,   408,   359,   405,   404,   397,  2692,     0,  2620,  2689,
       0,     0,     0,  2686,     0,     0,  2708,   224,   223,   215,
       0,   354,  2697,  2698,     0,  2701,   514,   513,  1089,     0,
    1089,   933,  1089,   931,  1241,  2595,  2598,  2596,  2597,  2599,
    2593,  1921,   555,   548,     0,     0,   564,     0,  1735,  1735,
       0,     0,     0,     0,     0,   561,   590,  1735,  1658,     0,
    1656,   936,  1053,   903,   904,   902,     0,     0,   708,   186,
     381,   392,   395,   387,   367,     0,     0,     0,   357,   354,
       0,   341,   339,   340,   346,   347,   348,   349,   350,   351,
     342,   345,   343,   344,   354,     0,   255,     0,     0,  2690,
    2687,     0,  2694,     0,   101,   193,   214,   225,  2715,  2700,
     354,  2620,   150,   942,   153,   156,  1228,   836,   554,   551,
     574,   567,   570,     0,   599,     0,     0,   595,   596,   594,
     592,   585,     0,   583,     0,  1654,     0,     0,     0,   710,
     709,   698,     0,     0,   354,   388,     0,   363,     0,   372,
       0,     0,   253,   411,   409,   251,   399,   399,  2695,  2696,
     175,  2709,  2702,   515,  1922,   549,   574,     0,   572,     0,
     568,   565,   569,   597,   598,     0,   582,     0,   593,  1657,
     899,   898,     0,   706,   702,   695,   699,   701,     0,     0,
     389,   395,   385,   393,   354,     0,     0,   353,     0,   407,
     254,     0,     0,     0,   354,     0,   398,   400,   402,   354,
    1948,   571,     0,   579,   575,   577,   580,   588,   587,   584,
     704,   703,   700,   707,   705,     0,   386,     0,     0,   384,
     364,   369,   354,   412,   354,   265,   264,     0,   257,   334,
     406,     0,   256,  2710,     0,  1934,   573,     0,     0,   586,
     390,     0,   354,     0,   354,     0,   354,     0,     0,     0,
       0,     0,   252,     0,  1942,   578,   576,     0,   382,   354,
     370,   375,     0,     0,   260,   335,   336,     0,   262,     0,
    1950,   354,   354,   371,   374,   413,   410,     0,   337,   258,
     259,   270,   269,     0,  1949,     0,  1954,   354,   354,   376,
     278,   276,   354,   266,   274,   268,     0,   275,     0,   263,
       0,     0,  1961,     0,   261,   277,   338,  1952,  1953,  1951,
    1956,     0,     0,  1958,  1959,     0,  1923,   267,  1960,  1955,
       0,  1962,  1964,     0,  1957,     0,     0,  1963,  1965
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    58,   663,  1608,    59,    60,    61,    62,    63,  1427,
      64,   887,  1349,  2021,  2022,    65,   582,    66,  1120,  1121,
    1784,  1785,  2994,  3408,  3409,  3003,  3422,  2997,  3412,  3413,
    3000,  3416,  3417,  1774,  1775,  3404,  3405,  1776,  1579,    67,
    2477,  3454,  4368,  3455,  4370,  3456,  4372,  1802,   545,  2297,
    2298,  1146,  3029,  3394,  4127,  3398,  4207,  4326,  4138,  2400,
    3758,  4128,  4129,  4216,   576,   577,  1809,  1655,  4249,  2276,
    4359,  2277,    68,   708,  1118,  1750,  1751,  3437,  3438,  3785,
    3439,  3790,  3791,  3792,  3793,  4544,  4419,  4495,  4545,  4599,
    4627,  4633,  4577,  4642,  4643,  4644,  4631,   927,  4645,    69,
     612,   613,   929,  1453,  2035,  1454,    70,    71,   575,  1370,
    1371,  1372,  1373,  2648,  2036,  2643,  2644,  3573,  4578,  4629,
    4648,  4420,  4421,  4333,  4422,  4219,  4423,  4337,  4424,  4222,
    4425,  4426,  4427,  4428,  4536,  4429,  4332,  4570,  4416,  4417,
    4538,  4611,  4624,  4430,  4229,  4327,  4482,  4230,  4328,  4531,
    4412,  4532,  4565,  4607,  4413,  4483,  4568,  4486,  4431,  4437,
    4546,  4432,  4438,  4433,  4234,  4344,  4436,  4342,  4435,  4542,
    4541,  4595,  2476,  3040,   694,   695,   720,  2467,   696,  1135,
    1091,  1658,  2310,  2311,  2846,  2847,  3015,  3016,  3017,  2302,
    2303,  2304,  2455,  2456,  2457,  2284,  2285,  2286,  1662,  2281,
    2282,   697,  1092,  1102,  2305,  2306,  2307,  3021,  2459,  2460,
    2461,  2462,  1338,  3025,  1339,  3284,  3043,  3446,  4146,  3800,
    4255,  4451,  3447,  3448,  3449,  2935,    72,   598,   909,  1424,
    2700,  1425,  2702,  3192,  3193,  3194,  2081,  2082,  4067,  2086,
    2699,  4169,  4458,  4282,  4283,  2687,  4281,  3199,  3598,  3599,
    3873,  4069,  4172,  4463,  4385,  4511,  4461,  4507,  4462,  4509,
    4588,  4554,  4555,  4395,  4472,  4473,  4515,  4557,  4294,  4295,
    4296,  2720,  4025,  2449,  1649,  1650,   546,   547,   548,   717,
    3044,  1718,  3045,  1719,  2934,  1720,  1721,  2891,  1532,  2924,
    2899,  3035,  2944,  2945,  2946,  2947,  2948,  2954,  2858,  2317,
    2318,  2396,  2957,  3380,  3983,  4525,  4526,  4527,  4481,    73,
     906,  4015,  3691,  3713,  3382,  3383,  3384,  3385,  3386,  3387,
    3388,  3472,  3473,  3470,  1193,  3948,  3949,  3950,  3466,  3467,
    3748,  3731,  3732,  3733,  4016,   849,  3972,  3698,   962,   963,
    2735,   978,   979,  2133,  1485,  3734,  2134,  1653,  3699,  3700,
    3701,  3742,  3527,  4052,  3533,  3534,  3535,  3125,  3126,  3127,
    3128,  3129,  2590,  3735,  2956,  3684,  3941,  3944,  4115,  4318,
    2319,  2859,  1746,  2862,  1020,   549,  2321,  2322,  1815,  1816,
    4189,  4258,  4262,  4190,  4263,  4259,  4191,  4192,  4193,  4265,
    4261,  3050,  3922,  3923,  2851,  3146,  4117,    74,  1103,  1086,
    1094,  1089,  1110,   703,  1736,    75,  2236,  2237,  2238,  2239,
    1625,  2232,  2233,   668,  2401,  2962,  3998,   685,  1722,  1723,
    1724,  3675,  3308,  3680,  4105,  1725,  2390,  2873,  1726,  3295,
    3660,  1727,  3325,  3678,  3938,  2874,  2875,  1728,  1729,  1730,
    1731,  3307,  3319,  3936,  1732,  3554,  3555,  3556,  2323,   898,
    2634,  2952,  2370,    76,    77,    78,   676,  1634,    79,  1034,
    1035,  1036,  1078,  1079,  1636,  2263,  2816,  1029,  1030,  1031,
     677,  1076,    80,   712,  1789,    81,  1435,  2712,  2713,  2714,
      82,  1111,    83,    84,   713,  1796,  1797,  1798,    85,  1419,
     140,    86,   917,  1430,  1432,  1433,    87,   707,  1112,  1113,
    1114,  1115,  2406,    88,  2073,  2675,  2676,  2677,  2678,  1747,
    2410,  1748,  1749,  3592,    89,    90,   660,  2599,   618,   619,
     620,  3135,  3136,  3137,  2126,   952,   953,   954,  1480,   850,
     851,  1289,  1060,  1841,   853,   854,   855,  1290,  1291,  3736,
     856,  1302,  1976,   857,   858,   859,   860,   861,   862,  3499,
    3500,  3831,  2005,  2006,  2007,   863,   864,  1279,  1890,  3492,
    3090,  3820,  1832,  3076,  1882,  1883,  1215,  1216,  1181,  2502,
    1838,  1584,  1585,  1586,  1587,  1588,  2211,  1821,  1822,  1589,
    2201,  2595,  2596,  2202,  2783,  3915,  3263,  3264,  3265,  3266,
    3267,  2966,  2967,  2968,  3056,  1879,  1880,  1888,  1405,  1406,
    1833,  2129,  3232,  2614,  2745,  3631,  3902,  1735,  2907,  2908,
     938,  1601,  2115,  2739,  1474,  1475,  2120,  2121,  3460,  4632,
    3130,  2247,  3285,  2696,  2697,  4083,  4399,  4400,  1468,  1469,
     940,   941,  1470,    91,   557,    92,  2019,  2628,  3163,  1346,
    2640,  1123,   736,   701,   570,  1340,  1341,  1342,    93,    94,
     586,   607,   920,  2721,  2722,  3209,  2723,  2724,  2725,  3216,
    2324,  2325,  3217,  3613,  3614,  3615,  3586,    95,  2790,  2791,
     608,    96,  1172,   555,   556,    97,  1038,   645,  1555,  1556,
    1557,  2182,    98,   637,  1021,  3238,  3242,  2168,   913,  1343,
    1537,  1024,  1538,  2153,  2757,  1520,  2193,    99,  1082,  1081,
    1644,   100,   681,  1645,   101,   888,  1364,  2031,  3168,  3559,
    3854,  1365,  1366,  2641,   102,   609,   924,   925,  1438,  2100,
     103,   600,   914,  2092,   104,   590,   105,   106,   903,  3593,
    4457,  4550,   594,  2075,  1415,  3801,  3226,  3627,  3628,  3630,
    3897,  3898,  4585,  4636,  4659,  4652,  4662,  4663,  4666,  4671,
    4672,   865,  1045,   866,  3932,   867,   868,   869,  3210,   870,
    2116,   871,  2792,   872,  2852,  1590,   737,   580,   524,  3418,
    3419,   669,  1046,  2110,   901,  4236,   671,   672,   526,   527,
     107,   633,   983,   987,  1507,  1508,  1509,  1025,  1501,   984,
    1510,   636,   970,   971,  1497,   972,  1495,   973,  2141,  1490,
    1516,   108,   904,   532,  1417,  1418,  2684,   109,   647,   110,
     111,   690,   112,  1407,  2068,  2069,  2670,  3181,  2671,   113,
     930,  1457,   114,   890,  1399,  2659,  1400,  2044,  1401,  1402,
    2058,  2052,  2061,  2055,  2227,  1621,  1622,  3178,  2017,   673,
     674,  2651,  3172,  3173,  1067,  4163,  3858,  4275,  4276,   115,
     141,   535,   715,  1130,  1460,   116,   117,   118,   119,   934,
    1603,  1604,  2777,  1605,  1606,  1464,  1956,  1957,  1275,  1276,
    3138,  3139,   955,   724,  1155,  1147,   134,   135,   136,   727,
     728,   137,  1108,  1109,  2963,  3400,  3760,  4001,  4002,  4133,
    4244,  4240,  4241,  4134,  4238,  4243,  4364,  4365,  1149,  4450,
    1150,  1151,  3030,  4013,  4248,  4446,  4549,  1152,  2473,  3442,
    4142,  4361,   120,  1051,  1047,   657,  1599,  1593,  1595,   121,
     122
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -4051
static const int yypact[] =
{
    4813,  2198,   916, -4051,   708,  1082, 55355,    69,  -120,  -120,
     752,  3518, -4051,   913, -4051, -4051, -4051,  2742, -4051, 55355,
     916,   349, -4051, 27588, -4051,   234,  1151,   903,   290,  -120,
     916,  1089, -4051, 55355, -4051,  1130,  1691,   916,  1001, -4051,
   48915, -4051,   752, 55355, -4051, 30827, -4051, -4051, 48915,   954,
      95,  1044,  1376, -4051,  1566, 55355,  1869,  -126,  1880,  1769,
   -4051, -4051,  1492, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, 43763, -4051, -4051,  1332, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   28236, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051,  1810, 55355,  1828, 55355,  1547,  1778, 55355,
   47627, 55355, 27588,  1790,  1865, -4051, -4051,  1918, -4051, -4051,
    -120,   752, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051,  1384, -4051, -4051,  1484,  1887,
   -4051, -4051, -4051, -4051, -4051,  2058,  1853, -4051,  1896, 47627,
   -4051, 55355, -4051, -4051,  1853,   988,  1533, -4051,  1543,  1881,
    1912,  1920, -4051, -4051, -4051, 49559,   913,  9761,  1790,  1790,
    1790, 55355,  1909,  1790,  1790, 55355, -4051,  1790,  1790,  1790,
    -120, -4051, -4051, -4051, -4051,  2007, -4051, -4051, 55355,  1776,
     212,   669, 47627, -4051, -4051, -4051,  1938, 55355, -4051, -4051,
   13101, -4051,  1926, -4051, -4051, -4051,  -120, 13101,  2139,  2011,
     944, 55355, -4051, -4051,  -120, -4051, -4051,  1970, -4051,    32,
    1610, -4051, -4051,  1711, -4051, -4051,   137, -4051,  1614,  1099,
    2083,   329,  1718,  1588,   405,   549, 41187,   134,   771,   100,
   31474, 41831,  1594, -4051, 50203,  1603,   868,  7180,  1711, -4051,
     816,   -98, -4051,   816, -4051, -4051, 55355,  -120,  1938, -4051,
   -4051,   248,   248,   248,  2180,   248, -4051,   248, -4051,  -126,
    1618, -4051, -4051,  1629, 55355,  1638, -4051,  1650,  2090, -4051,
   -4051,  1652,  2110,   -86, -4051,  2246, -4051,  1736,  1665,  2187,
    2031, -4051, -4051,  1685,   850, -4051,  1766, 44407, -4051, 47627,
   -4051, 55355, -4051,  1998, -4051, -4051, -4051,  2435, -4051, -4051,
    2220, -4051, 55355,  1861, -4051, -4051, -4051, 27588,  1739, 55355,
   -4051, -4051, 27588, 27588,   247,    63,  1635, 55355, 55355,  2222,
   -4051,  2406, -4051,  1961, -4051,  1158,   105,  1918,  2408, -4051,
    1853, -4051, 55355, 55355, 55355, 27588,    12, -4051,  1764, -4051,
    1780,  1783,  1788, 17777, -4051,  1796,  1803,  1805, 13101,  1817,
    1840,  1843,  1848,  1862,  1864,  1875,  1898,  1638,  1638,  1900,
    1902,  1904,  1906,  1113,  1914, -4051,  1917,  1921,  1923, -4051,
   -4051,  1940,  1954,  1957,  1962, -4051,  1966,  1968,  1974, 13769,
    1976,  1983, -4051, 24983,  1988,  1991,  2013,  2026,  2030,  2043,
    2057,  2067,  2070, -4051, -4051, 13101,  1900, -4051, -4051, -4051,
    2079,  2081,  2087,  2089,  2097,  2102,  2106,  2111,  2116,  2118,
    2120,  2127,  2131,  2135,  2138,  2140,  2144,  1900, -4051,  1184,
    2146,  2156,  1200,  2163, -4051,  2179, -4051,   356,  2182,  1638,
    1900,  1900,  2191,  2205,  2211,  2213,  2235,  2237,  2241,  2244,
   17777, 17777, -4051, 17777, 13101, -4051, 55355, 32121, 55355, -4051,
    1774, -4051, 40540,  2595, -4051,  2833, 17777,   594, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051,  1899, -4051, -4051, -4051, -4051,
   -4051,  1867, -4051,  2251,  1782, 55355, 55355, 55355,  2095, 55355,
   55355, 47627,  1155, 55355, -4051, -4051,  1790,  1908,  3228, 34062,
    4236, -4051,   156, -4051, -4051, 55355, -4051, -4051,  1970,  2016,
     182,  1858,  2495,   274, 27588, -4051,  1932,   182,  1402, -4051,
    -173, -4051, -4051,  2264, -4051, -4051, 44407, 27588, -4051, -4051,
   27588, -4051,  2533, -4051,  2005, -4051, -4051,  1899,  3758, -4051,
    5042,  2259,    63,  1146, -4051, -4051, 30180,  2586,  2398, -4051,
    2580,   210, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051,  9761,  2083, -4051, -4051, -4051, 55355, -4051, -4051,
   -4051, -4051, -4051,  2791, 13101, -4051, 44407,   642,  2612,   -34,
   -4051,  2260,  2273, -4051,  1222,   868, -4051, -4051, -4051, -4051,
   -4051, 55355,   100, -4051,  1603,   868, 32768, -4051,  9093,  2777,
   -4051,    11,  2284,  2476,    11, 45051,  2398,   221, -4051,   260,
   -4051,  2757, -4051, -4051, -4051, -4051,  2424,  2407, -4051, -4051,
     299,  2588, -4051,  2807, -4051,    57, -4051,  2439,  2398,    11,
     221, -4051,  2698,  2831,   535,  -134, -4051, -4051, -4051, -4051,
    2325, -4051,   655,  2913, -4051,  2337, -4051,  2811, 27588, -4051,
   -4051, 22377, -4051, -4051, -4051,  2342, -4051,  2634,  2457, -4051,
    2372, -4051, -4051,    86, -4051,  2358,   788,  2875, -4051,  2380,
   -4051,  2385,  3010, 47627,   185,   991, 44407,  2399,  2900,  2903,
    2932,  2935,  2939, -4051,  2952, -4051,  2454,  2963, -4051,  2724,
   47627,  2328, 45695, -4051, -4051, -4051,  3008,  3027, -4051, -4051,
    2825, -4051,  3137, -4051, -4051,  2483,  3040,  3040,  3040,  3152,
   -4051, -4051, -4051,  6500, -4051, -4051, -4051,  2672,  2540, -4051,
    1861, 27588,  2918,  2509, -4051, -4051,  1619, 13101, -4051, -4051,
    5611,  3135,    94, -4051, -4051,  1293, -4051,  3124,  2739, -4051,
   -4051, -4051, -4051,  3024, -4051, -4051,  3137,  3087,  3040, 44407,
   -4051,  3019,  1853, 55355, 55355, 55355, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, 55355, -4051, -4051, -4051, -4051, -4051, -4051,
    1861, -4051, 27588, -4051, -4051, -4051,  -184,  2809,  1507, 22377,
   55355, 37288, -4051, 13101, 13101,  1511,  3150,  3209,  3209,  3209,
     182,  2591, 13101, 13101, 13101, 13101, 13101, 13101, 13101,  1660,
   -4051, -4051,   -60, -4051,  2558, 13101, 13101, -4051, 13101, 13101,
   28884, -4051,  4365, 13101, 13101,  1320,  3088, 13101, 13101, 13101,
   13101,  2877, 13101, 13101, 28884,  3217,  2564, -4051,  2559,  1727,
   13101, 13101,  1734, 13101, 13101, 13101, 13101, 13101, -4051, -4051,
   13101, 13101, 13101, 17777, 13101, 13101, 13101, 13101, 13101, 13101,
    2568, 13101,  3209,  3209, 13101, 13101,  1770, -4051, -4051, 13101,
    2497,  2497, -4051, 13101,  8425, 13101, -4051, -4051, -4051,  2569,
   -4051, -4051, -4051, 28884,  3209,  3209, 13101, 13101, 13101,  3209,
    3209,  3150,  3150,  3150,   306,  2570,   738, 13101,  1222, -4051,
    2734,  2566, 13101, -4051, -4051, 50847, -4051, -4051, 13101, -4051,
   13101, 13101, -4051, -4051, -4051, -4051, -4051, -4051,  1692, -4051,
   -4051, -4051, 14437, 17777, 17777,  2576, 17777, 17777, 17777, 17777,
   17777,  2965, 17777, 17777, 18445, 19113, 17777, 17777, 17777, 17777,
    1295,  3150, 47627, 17777, -4051,  1899,  1899, 13101, 37940, -4051,
   -4051,  2573, 27588,  1155, -4051, -4051, -4051, -4051, -4051, -4051,
    2582,  1155, -4051,  3094, -4051, 44407, 27588, -4051,  2575, -4051,
    2968, -4051,  2970,  2971,  2974, -4051, -4051, -4051, -4051,  3203,
    2976, -4051,  2978, -4051, -4051,  2601, -4051, -4051, 19781, 47627,
   -4051,  2603, -4051,  3110, -4051,  2851,  2790,  1967, -4051, -4051,
   -4051, -4051, -4051,  2888, -4051, -4051,  2709, -4051,  2901, -4051,
   -4051,   193, -4051,   120, -4051, -4051, -4051, -4051, -4051, -4051,
    2904,  2616, -4051, -4051, -4051, 55355, -4051, 55999, -4051, 27588,
     708, 55355, -4051, -4051, -4051,  3003,   211,  2621, -4051, 27588,
   -4051, -4051,   112,   112,  2886,  1385, 47627, -4051, -4051,   149,
    2627,  2710,  2633, -4051,  2716, 27588,  2809, -4051,  3289,    32,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051,  2638,  3148,  2851,  2930, -4051,  2944, -4051,
   55355, -4051, -4051, -4051,  1160,  2738,  2738, 47627,  2660, -4051,
   -4051, -4051, 13101, 42475,  1218, -4051, 21727,  2692,  2722,  3091,
   -4051,  1774, -4051, -4051, 46339, -4051,   182,   868,  2673, -4051,
   -4051,   -20, -4051, -4051,  3086, -4051,  2908, -4051,  2671,  2681,
    2682, 51491, 13101, -4051, -4051, -4051,  9093,  2678, -4051, 51491,
   -4051, -4051, 17777,  1917, -4051,   182, -4051,  3103,   708, 13101,
   -4051,  2697,  1853, 55355, 55355, 55355, 27588, 55355, -4051, 27588,
   -4051,  1101,  1101, -4051, -4051, -4051, -4051,    11, 55355, 55355,
      11, 44407, -4051,   221, 55355,    11, -4051,  3106,  2798, -4051,
   -4051, -4051,  3181, -4051, -4051,  3170,  2699, -4051,  3103, -4051,
    2811,   221, -4051, -4051, 27588, -4051, -4051,   221, -4051,   221,
     221,   323,   323,   816, -4051, -4051,  2852,   -98,  3306, -4051,
   -4051,  2083, 22377, 55355,  1761,  2868, -4051,  2706, -4051, -4051,
    2809,   248,  2967, -4051,  3180, -4051, -4051, -4051, -4051, -4051,
   -4051,  2398, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,  2803, -4051,   775, 47627,  2805,  2808, -4051, -4051,  2810,
   -4051, -4051,   380, -4051,  2735,   639,   708,  1667,   708,  1081,
     708,   708,  1645,   708,  2811,  3220,  3256, -4051,  3297, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,   121,
   -4051, -4051, -4051,  1990,  3249,  2579,  3123,   -96,   829,  2579,
    1699,   708,   150, -4051,   150, -4051,   249,   868,  3314,  2992,
     868,   868,  3314,   868,  2994,  2996,   868,   868,   868,   868,
    2815,  3255,   868,  3138,   712,  2646,  3140,   868,  3001, -4051,
     921,  3268,   868,   868,   868,   868,   868,  3314,  3004,  3357,
     868,   868,  3005,   161,  3009,  3015,   868,   868,   868,   868,
     213,   868,   868,  3017,   868,  3006,  2793,  2813, -4051,  6134,
   -4051, -4051, -4051,    35, -4051, -4051, -4051, -4051,  2759,  2762,
   25633, -4051, -4051, -4051, -4051, -4051,  3050,  1045, 27588, -4051,
    2768, 52135, 27588, -4051, -4051, -4051,  2771,   177, -4051, -4051,
    2773,  2774,   182,  3281,  3282,  3283,  3284,  3286,  3287,  3288,
    3291,  3294,  3295,  3296,  3298,  3299,  3301,  3309,  3310,  3311,
    3312,  3313,  3315,  3316,    34, -4051, -4051,  3318,  3319,  3321,
    3323,  3324,  3326,  3327,  2800, -4051, -4051, -4051, 27588, -4051,
   -4051, -4051, -4051,  2885, -4051, -4051, -4051, -4051,  1860, -4051,
   -4051, -4051,   186,  2137,  2854,  2883,   -86, 55355, 55355,  2835,
     658, -4051,  1816, -4051, -4051,  1226,  3121,  3125,  3126, 22377,
    2838,  2692, -4051, 37288,  2692, -4051, -4051,  2840,   278,   347,
   -4051,  3209,  2842, 13101,  2848,  2855,  2858, 13101,    80,   203,
     360,   182,  -194,  1536,  1053,   355,   365, 13101,  2859, 10429,
    2860, -4051, -4051,   421,   491,  1247,  1249,  2866,  2867, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,  3320,
   -4051,   544,  2869,  2853, -4051, -4051, -4051, -4051,  2876, -4051,
   13101,  1253,   579,   797,   384,  2890,   882,  1561,  1578,  2879,
   28884, 55355,  3209,  2884,  1264,  1273,  3209,  2891,   906,  1291,
    1587,  1599,  1628,  1296,   947,  1644,  3049,  1300,   997,   999,
    1302,  1023,  1065, -4051,  1342,  2896,  2898,  1094,   231,  3209,
    2902,   397,  2906,  2914,  1346, 11097, 11765, 12433,   288,  1102,
   -4051,  2919, -4051,  2559,  2920,  2923,   445,   199,  1351,  2917,
    2926, -4051, 13101, -4051, -4051,  1204, -4051,  2929,   141, 47627,
   13101, 55355, -4051, -4051, -4051,  2315,   250, -4051, -4051, -4051,
   -4051, -4051,  1072, -4051,  2889, -4051,  2928,  1933,  2940, 13101,
     996,  2940,  2412,   493,   493, 17777,  2546,  2688, 13769,   257,
   13769,   257,  2940,  2940,  2940, -4051, 17777,  2937, 17777, 17777,
   -4051,  3150, -4051, -4051, 40540,  2941,  2942, -4051, -4051,  1095,
   55355, -4051,  2582,  1180, -4051,   868, -4051,  2945,   142, 27588,
   47627,  2947, -4051, -4051, -4051, -4051, -4051, -4051,  2811, -4051,
    3516, 27588,  2977,  2993,  3034, -4051, 34709, -4051, -4051, -4051,
   -4051, 34709,   978, -4051, -4051, -4051, -4051, -4051,  3046, -4051,
   -4051, -4051,  2953, -4051, 44407,  2953, -4051, -4051,  2953, -4051,
   -4051,  2953,   970,  4221, -4051,  1142,  1173,  3574,  2692, -4051,
    2809, -4051,  1311, 27588, -4051,  3305,   -21, 27588,  2768,  2954,
   17777, -4051, -4051, -4051, -4051,  1525,  3064, -4051,  3612, -4051,
   13101,   708, -4051, 44407, 44407, 27588, 27588,    50,  2230, -4051,
    2811, -4051,  3758, 19781,  2959, 44407,   975, -4051, -4051, -4051,
   -4051,  2310, -4051, 33415,   373,  2962, -4051, -4051, -4051, -4051,
   -4051,   681, -4051, -4051, -4051, -4051, -4051, -4051, 13101,  3418,
   -4051,  3130, -4051, -4051, -4051, -4051,  1156,  3062,   197,  3205,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051,   868,   182, -4051,
   32768, -4051,   708,  3444, -4051,   182,  2979, 55355, -4051, -4051,
   -4051, -4051, -4051, 44407, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051,    11, -4051, -4051, -4051, -4051,
   -4051,  3218,  2398,  2588,  3444, -4051,    11,   221, 27588,    11,
      11,   708, 13101, -4051, -4051, -4051, -4051, -4051,   708,  9761,
    2706,  -187,   113, 23027,  3387,  3392, -4051,  3259,  1271,  3259,
   23027, 23027, 28884, 22377,  2411,  2987, -4051,  3325, -4051, -4051,
    3082, -4051,   408, -4051, -4051, -4051, -4051,   133,  1081,  1081,
    1081,  1081,  2735, -4051,    -5,  3482, -4051,   639, -4051,  1432,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,   708,  3506,  3264,  1525, -4051,   868,   868,  3322,   708,
    3141,  3145,  3146,  3147,  3149,  3189, -4051, -4051, -4051,   708,
     708, -4051, -4051,   868, -4051,  1996, -4051, -4051, -4051, -4051,
     708,   708,   708,   708,  1081,   708,   708,  1741, -4051, -4051,
     868,   868, -4051,   311, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,  1504, -4051, -4051, 29532,   916, -4051,   163, -4051, 29532,
   -4051,   177,   177, -4051, -4051, 52779, 29532,   916,  1667,  1081,
   29532,  1081, 53423,   916,   708,   708,   708,   708,  2310,   868,
    1081, -4051, 53423, -4051,  3420, 55355,  3421, 29532, 29532, -4051,
   47627, 55355, 53423, -4051,   868,  1541,  1081, 54067,  1667,  1667,
   29532,   916, 28884,  2069,   708,   916, -4051, -4051, -4051, 29532,
   27588,   916,   916,  2680,  2113,  2367,  2545, -4051, -4051, 55355,
    1081, 53423, -4051, -4051, -4051, -4051, -4051, -4051,  3285, -4051,
   -4051,  3494,  6902, 21079, 55355,  1583,   219, -4051,  3016,   439,
   -4051,  3235, -4051, -4051, -4051, -4051, -4051, -4051, -4051,   177,
    3026, 54711, -4051, -4051, 13101,  3029,  1081,   708,  1081,  1081,
     708,   708,  1081,  1081,   708,   708,   708,   708,   708,   708,
     708,   708,  1081,  1081,   708,  1740,  5611, -4051,  3030,  3030,
    3031,  3031,  3032,  3032,  3035,  3135, -4051, -4051, -4051, -4051,
     202,   868,   868,   868,   868, -4051,  2091, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, 47627,  3404,  2477,  2399,  3224,
   -4051, -4051,  1161,  3037, -4051, -4051,   224,  5605,   235,   235,
   -4051, 27588, 27588, 27588,  2692, 55355,  3330,  1570, -4051,  3043,
   -4051, 15105, -4051,  3047, -4051,   182, -4051, -4051, -4051,   195,
   13101, 13101,  3559,  2136, -4051, 46983, -4051, 13101, -4051, -4051,
   13101, 46983,  2136,  1765, -4051,  3051, -4051,  3469,  3475, -4051,
   -4051, -4051, -4051, 13101, 13101, -4051, 13101,   -74, -4051, 13101,
   13101, 13101, 13101, 13101, -4051, -4051, 17777, -4051,  3052,  3058,
   -4051, -4051, -4051,  3060, -4051, 13101, -4051, -4051, -4051, -4051,
   -4051, 13101, -4051, 13101, -4051, 13101, 13101, -4051, 13101, 13101,
   -4051, -4051, -4051, 15773, 13101, 13101,  3061, -4051, -4051, 13101,
   13101, 13101, -4051, 13101,   284, 13101,  1596, 13101,  1678, 13101,
   -4051, 13101, -4051, -4051, -4051, -4051, 13101,  1888,  1525,  1081,
    3063, -4051,  3209, -4051,  1768,  2580,  1055, -4051,  1204,  3065,
    1146, -4051,  3055,   182, -4051, -4051, -4051, -4051, -4051, -4051,
   17777,   469,  3066, 17777, -4051,  2412,  2877,  2877,  2044, 13101,
     996,  2412, -4051, -4051, 13101, 13101, 38592, -4051, -4051, -4051,
   47627, 44407, -4051, -4051, -4051,   142, -4051,  2575, -4051, -4051,
    2768, -4051,  3573,  3069, -4051, -4051, -4051, -4051, -4051, -4051,
   55355, -4051,  3155, -4051, -4051, -4051, 26283, 26283, -4051, 26283,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051,  2398,  2252, 55355, -4051,  3074, -4051, -4051,  1619,
    2738,  3098,  3461, -4051, -4051, -4051, 55355,  3080,  2412, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,  3698,  3083,
    3084,  3589,  3090,   182, -4051,  3166, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051,   826,  2083, 28884, -4051, -4051, 23677,
    1614, -4051, -4051, -4051, -4051,  3092, -4051,  3591, -4051,  3545,
    3561, 26283, 26283, 26283, 43119,  3686, -4051, -4051, -4051, -4051,
   13101, 42475, 42475,   182,  3714,  3548,  3424,  3105, -4051,  3109,
   -4051, -4051, -4051,  9093, -4051, -4051,  1667, -4051,    48, -4051,
   -4051, -4051,  3396, -4051, -4051, -4051, -4051,  2692,   221, -4051,
   -4051, -4051,   182, -4051,    26,  1146,  2899, -4051, -4051,  1560,
   -4051, -4051, -4051,  3519, 23027,  3259,  3259,  3521,  3397,   751,
    1251, -4051,   868, -4051,   353,  1081, -4051, -4051,   708,   708,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,  1525, -4051, -4051,   708,  3621, -4051, -4051, 46339, 43119,
   -4051, -4051, -4051, -4051,  3671, -4051,  3674,  1539, -4051, -4051,
    2307,  1444, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,  1699,  2307,  2307,  1329, -4051,   135, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051,  3122,  3523,  3525,   177, -4051, 29532,
   -4051, -4051, 29532, 29532, -4051, -4051,   147, 53423, -4051, -4051,
   -4051, -4051, -4051, -4051,  3128, -4051, -4051,  1525, -4051, -4051,
   -4051, -4051, 43119,   708, -4051,  3225, 29532,  3128, -4051, -4051,
     189, -4051, -4051,  3158,  3236,   708, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, 53423,  3134, -4051,  1123,
   -4051, -4051, -4051, 53423,  3219, -4051, -4051, 53423, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051,  3142,  2139, -4051,  2705,  1700, -4051,
   -4051, -4051,  2759, -4051,  3153,  3144, -4051, -4051, -4051, -4051,
   55355, -4051, -4051, 27588, -4051, -4051, -4051,  6426, 55355,    62,
    1048,  3227,  1573,  3151, 53423, -4051,  3154, -4051,  3156, -4051,
     182,  1081, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, 35356, -4051, -4051, 36000, -4051, -4051,  1020,
   -4051, -4051,  1819, -4051, -4051,   708,  1525,  2307,  2307,   818,
   -4051,  3428,  3608,   868,   868, -4051,  2452, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051,   639,  1161,  3442,
   55355, -4051, -4051, -4051, -4051,  3308, -4051, -4051, -4051, -4051,
    3447, 27588, 20431, -4051,  3425, -4051,  4367, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051,  1825, -4051,  3551, 13769,
    1357, -4051, 13101,   182,   499, -4051,  3167,  3167,  3172, -4051,
    3173, -4051,  3167,  3593,  3172,  3597,  3182,  3186,   182,  1388,
    3187,  3188, -4051, -4051, 13101, 13101,  1397,   476,  1408,  3790,
    3358,  1109,  1148,   548, -4051,  1415,  3216, -4051, -4051,  1453,
    1497,  1546,  1581,  1172,  1585,  1835, 13769,  1591,   497,   597,
   -4051,  1598,  1187,  1207,  1605, 13101,  1624, 13101,  1651, 13101,
    1656,  1688,  1737,  3191,  3191,   162, -4051,  3190, -4051, -4051,
   -4051,  3192, -4051,  3195, -4051, -4051, -4051,  2692,  9761,  1055,
   -4051,  2580,  3197,   113,   738, 55355, -4051,  3198, -4051, -4051,
   13101, -4051,   594, -4051, -4051, 17777,   636,  3200, -4051, -4051,
    3201, -4051, -4051,   320, -4051, -4051, -4051, -4051,   264,  3717,
   34709, -4051,  1895, -4051, 44407,  3185, -4051,  3207,  3300,  3302,
    3303,  3221, -4051, 28884,  3502,  3502, 27588,   177,  3651, -4051,
   -4051, -4051,  3223,  3226, -4051, -4051, -4051,  3611,  3491, -4051,
   -4051,  1525, 55355, 44407, -4051,  9761,  3229,  1201,  3231,  1907,
   -4051, -4051, -4051,  3222, -4051, 16441,  3232, -4051, 19781,  3511,
   44407,  3705,  3706,  3707, -4051,    81,  3626, -4051, -4051, -4051,
   13101, 13101,  3330, -4051,  3062, -4051, -4051, -4051,  2398, -4051,
   -4051, -4051,  2398, -4051,    11, -4051,   738, -4051, -4051, 23027,
   -4051,  3648,  3649, 23027, 13101, 13101,  3244, 28884,  3330, 16441,
   -4051, -4051,   177,   177, -4051,   353, -4051, -4051, -4051, -4051,
   -4051, -4051,  3789, -4051,   708, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051,  1504, -4051,   847, 13101, 29532, -4051, -4051,
   -4051,  3246, -4051, -4051,  3786,  3787, -4051, 29532,  1860, 55355,
   -4051,  2791, -4051, -4051, -4051, -4051,  3346, -4051, -4051,  6426,
   -4051, 28884, -4051, -4051, 29532, 55355, -4051, 27588, -4051, -4051,
   21079, -4051,  3257, -4051,  3167,  3167,  3167, -4051, -4051, -4051,
    3172, -4051,  3173,  3503, -4051,  3173,  3173, -4051, -4051, -4051,
   -4051, -4051, -4051,   362,  1919, -4051, -4051,   362, -4051, -4051,
   -4051,   106,  -178,  3173, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,  3167,  3172,  3172, -4051, -4051,   362,  3167, -4051,  3167,
   -4051,  3254, -4051,   359,   122,  3167,  3167,  3167,  3258,  3251,
    3507, -4051, 13101, 13101,  3547, 55355,  3549, -4051,  3850, 55355,
    3908,  3265, -4051, 54711,  1934, -4051, -4051, -4051,  1943, -4051,
   -4051, -4051,  1994, -4051,  3261, -4051,  2000, -4051, -4051, -4051,
   55355, -4051,  2046, -4051, -4051, -4051, -4051, -4051,  3267, 55355,
    2307,  2307,  1866, -4051, -4051,  3417,  3446,  3272,  3273, -4051,
   -4051,   708,   937, 27588, -4051, 27588, -4051,  3448, -4051, -4051,
    3275,   132,  5776, -4051,  3280,  3290,  3292, -4051, 55355, 42475,
   -4051,  2877, -4051,   182, 13101,  1335, -4051, -4051,   362,  3575,
   -4051,  1337, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051,  2877,  2877, -4051, -4051, 13101, -4051,
   13101,   248,  3293, 13101, 13101, -4051, 13101, -4051,   276,  3304,
    3317, -4051, -4051, -4051, -4051, 13101, -4051, -4051,  2877, -4051,
   13101, -4051, -4051, 13101, -4051, 13101, 13101, -4051,  1743, -4051,
    1745, -4051,  1747, -4051, -4051, -4051,  1525,  3307,  3673, -4051,
   -4051, -4051,  1525,  3472, -4051, -4051,  1525,  1081, -4051,  3418,
    1774, -4051, -4051, -4051, -4051, -4051, -4051, -4051,  2053, -4051,
   -4051, 13101, -4051, -4051, -4051,  3664,  3940, -4051,  3527, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, 55355,   470,  3329, 39244,
   44407, 44407, 44407, 16441,   -62,  3810, -4051, -4051, -4051,   177,
    3651,  3689, -4051,   885, -4051, 55355,  1556, -4051,  2073, -4051,
   -4051,  3328, -4051,    26,  3448, -4051, -4051,   788,  1201, 28884,
   37940,  1917,   182,  3331,  3332, -4051,  3092, -4051,  3765,  2945,
   44407, 44407, 44407,  3915,  3916,  3812,  3918,    81, -4051,   630,
   -4051,  1509, -4051,   182,  2398,  3334, -4051,  2811, -4051, -4051,
    2740,  3351, 23027, 23027,  2772,  3352,   182,   182, 55355, -4051,
    3551, -4051,  3776,  3776, -4051, -4051, -4051, -4051,  1525,  3491,
   -4051,  1752,  3333,  3336, 55355,  3337,  3340, -4051,  2887,  1583,
   -4051, -4051, -4051, 27588, -4051,   916, -4051, -4051, -4051,  3128,
     826,  3341, -4051, 55355,  3653, -4051, -4051, -4051, -4051,  1319,
   -4051,  3343,  1319,  1319,  3936,   228, -4051,  3941, 46983, -4051,
   -4051, -4051,  1718, -4051,  3348,   362, -4051, -4051,  3353, -4051,
   -4051, -4051,  1319,  3344,   362, -4051, -4051, -4051, -4051,  1319,
   -4051, 47627,  1814,   708,  2659, -4051,  3369, -4051,  3856,   236,
    3718, -4051,  3095, -4051,  3780,  3720,  3613, -4051,   362, -4051,
   -4051,  3954, -4051,   362,  3954,  1319,  3616, -4051,  1319, 55355,
   -4051,   182,  2877,  3910, -4051, -4051,  3483,   708,  3862, -4051,
    2132, -4051, -4051, -4051, -4051,  1081, -4051, 55355, -4051, 55355,
   55355, -4051,   708,  3345, -4051,  3350,  1699, -4051, -4051, -4051,
   -4051,   708,  1048, -4051, 55355,  6426, -4051, -4051, -4051, -4051,
    3347,  3349, -4051, -4051,  3815,  3354,  3355,  6134, -4051, -4051,
   -4051,  3989, -4051, 55355, 55355, 55355, -4051, -4051,   459,   182,
    3356,  3359,  3360,  3362, -4051,  3363,  2141,  3365,  3367,  1762,
    3368, -4051, -4051, -4051,  1772,  1241,  2165,  3679,  3751, -4051,
    3594, -4051,  1786,   876,  1808,  1821,  1831,  1833, -4051, -4051,
   -4051, -4051, -4051,  3374, -4051, -4051,   335, -4051,  3375,  3548,
   -4051,  2169, -4051, -4051,  3858,  3754, -4051,  3833, -4051, -4051,
   -4051,   -86,   -86,   -86,  2217, -4051,  3781, -4051, -4051,  3798,
   -4051,  3382,  3612, 55355, -4051,  3491, -4051, -4051, -4051, -4051,
   -4051, -4051,  3377, -4051, 16441, -4051, 44407,  2945,  2945,  2945,
     248,   248,  3999,   248, -4051,  4002,  4003,   630, -4051, -4051,
   -4051, 13101, -4051,  3632, -4051, -4051, 13101,  3390, -4051, -4051,
   13101,  3391,  2263, -4051,  1250,  3393,  3394, -4051,  2267, -4051,
   55355, 55355,  2280,  1123,  3399, 55355, 55355,  2977,  2993,  3034,
    1740,  1740, -4051, -4051, -4051,  1356,  1583, -4051,  3818, -4051,
   -4051,  2288, -4051,   983,  3677, -4051, -4051, -4051, -4051,  1319,
   -4051,   248, -4051, -4051, -4051, -4051, -4051, 46983, -4051,  3954,
   -4051, -4051, -4051,   248, -4051, -4051,   406, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051,  3692,  3443, -4051, -4051, -4051, -4051,
   47627, -4051,  4051,  4046, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,  3402, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   55355, -4051,  1205, -4051, -4051, -4051, -4051, -4051, 55355, 55355,
    2291, -4051,  3547,  3596, -4051,  2791, -4051, -4051,  1687, 55355,
    3922, -4051, -4051,  3425, -4051,  1214,  2294,  2301,  2314, -4051,
   -4051, -4051, -4051, -4051, -4051,  3699, -4051, -4051, -4051, 13101,
   -4051, 13101, -4051, -4051,  3729,  3901, -4051, -4051, -4051, -4051,
   -4051, -4051,  3410, -4051,  1081,  3330, -4051, -4051, -4051,  3691,
    3451,  3451,  3451, -4051,  3470,  3515, 17777, -4051,  3426,  3463,
   -4051, -4051, -4051,  2945, -4051, -4051,   248, -4051,   248,   248,
   -4051, -4051,  4078,  3849,   182, 55355,   182, 55355, -4051,  4048,
   -4051,  4049, 54711, 54711, -4051,  2316,  2375,   487, 55355, -4051,
    3725,  2388,  2413, -4051, -4051, -4051, -4051, -4051,  3436, -4051,
   55355, -4051, -4051, -4051,   144, -4051, -4051,  2419, -4051, -4051,
   -4051,  2421, -4051, -4051, -4051, -4051,  3437,  3563, -4051, 61795,
   -4051, -4051,  3439,  3471, -4051,  3449,  3441, -4051,  1573, -4051,
   -4051, -4051, -4051, -4051,  6426,  3623,   788,   132,  3448, -4051,
     487,   104,  1024,  3450, -4051,  1886, -4051, -4051, -4051,  3452,
    2398, -4051,  2538, -4051, -4051, -4051, 28884, 27588,  3453,  3556,
   55355,  1630,  1469, -4051, -4051, -4051,  3457,  1218, -4051,  2432,
    2449, -4051, -4051,  3460,  2461,  3670,   487,   708,   868, -4051,
     487, -4051, -4051, -4051,  1123,  3462,   104,  1024,  3491, -4051,
    1012,  1012,   362,   248,   362, 13101, 13101,  3958,  3481, 55355,
     167, -4051, 63083, 63083, 55355, -4051, -4051, -4051, -4051,  5576,
   -4051, -4051,   761, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051,  4090, -4051,  3455, -4051, -4051,  3439,
    3464,  3636,  1641, -4051,  1614, -4051, 55355,  3850,  6426,  3048,
   -4051,  1051, -4051, -4051,  3468,  1614, -4051,  3727, -4051,   104,
   -4051, -4051, -4051,  1024, -4051, -4051, -4051, -4051, -4051,  3632,
    3748,  1081,  1081,  1081,  1081,  2538, -4051,  3229,  2809, -4051,
    1525, -4051,  2470, -4051, -4051, -4051,  3562,   868,  4000,  4004,
     868,   868,   868,   868,  3474,  1469, -4051,  3981,  3767, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051,  1081, -4051, -4051,
   -4051, -4051, -4051,  2487, -4051,  4136, -4051,   204,  3764,  3766,
   -4051, -4051, -4051,  3479,   182, 13101, -4051, 13101,  3512, -4051,
   -4051,  3949, 55355, -4051, -4051, -4051, -4051, 13101, -4051, 61795,
   61795, -4051, -4051, -4051, -4051,  4116, -4051,  3484,   788, -4051,
    4086,  3768,  4087, -4051,  3487,  4010, -4051, -4051, -4051, -4051,
    4021, 61795, -4051, -4051, 47627, -4051, -4051, -4051,   320,  1949,
     320, -4051,   320, -4051,  1218, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, 55355,  3492, -4051,   708,   868,   868,
    2164,  2164,  1525, 55355,  3601, -4051, -4051,   868, -4051,  3493,
    3499, -4051, -4051, -4051, -4051, -4051,  3557,  4029,  -123,   182,
     182, -4051,    88, -4051, -4051,  3920,  4014, 13101,   182, 58575,
    3500, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, 62439, 13101, -4051,   761,  4090, -4051,
   -4051,  3783, -4051,  3792, -4051, -4051, -4051, -4051, -4051, -4051,
   61795,   788, -4051, -4051, -4051, -4051, -4051,  2310,  3556, -4051,
    3517, -4051, -4051,   -52, -4051,   708,   708, -4051, -4051, -4051,
   -4051, -4051,  2489, -4051, 47627, -4051,  3767,  1012,  1012, -4051,
   -4051,  1490,  3544, 13101, 61795, -4051,  4026, -4051,  3952,   182,
    3890,  3524, -4051,  3513,   182,  4065, 63083, 63083, -4051, -4051,
   -4051,  3048, -4051, -4051, -4051, -4051, -4051,  2494, -4051, 17109,
   -4051, -4051, -4051, -4051, -4051, 47627, -4051,  3601, -4051, -4051,
   -4051, -4051,   708, -4051,  3927, -4051,  1490, -4051,  3931,  3827,
   -4051,   117, -4051,   182, 59219,  4150, 55355, -4051,  3629, -4051,
   -4051, 13101,  4063, 48271, 59863,  3541, -4051, -4051, -4051, 61795,
    3734, -4051,  3517, -4051,  3552, -4051,  2412,  1469, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, 13101, -4051,  4075,  3655, -4051,
    3566, -4051, 61795,   182, 61795, -4051, -4051,  4022,  3570,   348,
   -4051,  3569, -4051, -4051,  4013,  3686, -4051, 17109,  3580, -4051,
     182,  4192, 61795, 55355, 56643,  4093, 60507,  4057, 55355,  6426,
    4058,  4059, -4051,  4206,  3626, -4051, -4051,  3682, -4051, 57287,
   -4051,  3011,  3803,  3624, -4051, -4051,  4137,  2418, -4051,   248,
    4032, 61795, 61795, -4051, -4051, -4051, -4051, 39896, -4051, -4051,
   -4051, -4051, -4051,  1160, -4051,  3891,  3600, 57931, 61151, -4051,
   -4051, -4051, 36644, -4051, -4051, -4051,  4071, -4051, 13101, -4051,
      60, 24325,  3770, 39896, -4051, -4051,   182, -4051, -4051, -4051,
   -4051, 47627,  2508, -4051, -4051, 28884, -4051, -4051, -4051, -4051,
   26938,  3602, -4051,   868, -4051, 28884, 16441, -4051, -4051
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4051, -4051, -4051, -4051, -4051,    51, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051,  1636, -4051, -4051, -4051, -4051, -4051,
   -4051,  1829,  1839, -4051, -3284, -4051, -4051,  1841, -4051,   512,
    1842, -4051,   511, -4051,  1851, -4051,   519,  -554, -1522, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,   513,
    1447,  3564, -4051,   518, -4051,   171, -4051, -4051, -4051, -3232,
      47,  -132, -4051, -4051,    19,  1503,    29,  3230,  -131, -3916,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,   521,
     533, -4051, -4051,   300, -4051, -4051, -1063, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051,  -334,  -296,  1937, -4051, -4051, -4051,
    4274, -4051,  3685, -4051, -2017,  2223, -4051, -4051, -4051, -4051,
   -4051,  2287, -1951, -4051, -4051, -4051,  1159, -4051, -4051, -4051,
   -4051,  -518,   201, -4051,   205, -4051,   207, -4051,   208, -4051,
     209,   214,   215,   216, -4051,   217, -4051, -4051,  -292, -4051,
   -4051, -4051, -4051,   218, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,  -199, -4051, -4051,   -79, -4051, -4051,  -191,   220, -4051,
    -158,   223, -4051,   225, -4051,   -97, -4051,   -95, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,  3212, -4051, -4051, -4051, -2440, -4051, -4051, -2519,  2686,
   -4051, -2108, -4051, -4051, -2270, -4051, -4051, -2066,   911, -4051,
   -4051,  1392,   531, -4051, -1541, -2203, -2189, -4051, -4051, -4051,
   -2332, -2326, -1427, -4051, -1422, -2508, -4051, -4051, -4051,   206,
   -4051, -4051, -2931, -4051,  2632, -4051, -4051, -4051,  1421, -4051,
   -4051,  1162,   485,  1165, -4051,   765,  2938, -1351, -4051, -4051,
   -4051, -4051, -4051, -4051,   -22,   297,   -94, -4051, -3494,   494,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -2497, -4051,
   -4051, -4051,  -219, -4051, -4051,  -147, -4051, -4051,  -186, -4051,
      77, -2652, -4051, -4051,  2571, -1507, -4051,  3826, -4051,  -429,
     578,  2657, -2775, -2404, -4051, -1020, -1008, -2590, -4051, -4051,
   -4051,  1349,  1339, -4051,  1049,  2652, -1587, -4051,  1987, -4051,
   -4051,  1077, -4051,  1067, -4051, -4051, -4051,  -137, -4051, -4051,
     187, -2671, -4051, -4051, -4051,  1036, -4051,  1039, -4051, -4051,
   -4051,  -324,  1008, -1208,  1500,  -602, -4051,   448,   -50,  -465,
   -4051, -4051, -4051,   666, -3630, -3424, -4051,   -41, -2450,  -904,
     -58, -4051, -4051, -2529, -3164, -4051,  1582, -4051, -4051, -4051,
   -3006, -2243,  1277, -4051, -4051,   869, -4051, -1865,   871, -4051,
   -4051, -4051,   877, -4050,   226, -4051, -4051, -4051, -4051, -3917,
   -4051, -4051, -1604, -2079, -4051, -4051,  4397,  4398, -1119, -2455,
   -3731,   222,   227, -4051, -4051, -4051,  2597, -1221,   230,   151,
     154,  1931, -1247,   317, -2200, -4051,   454, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051,  1394, -4051,  2185, -4051,
    1955, -4051,  2193, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
    2035, -4051, -4051, -4051, -4051,   498, -4051,  -761, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -2236, -2218,  2040, -4051, -4051,
    2045, -4051, -4051, -4051,   792, -2231, -1088, -1084, -1558,  3791,
   -1509, -3343, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,  2863, -4051, -4051, -4051, -4051, -4051,  3794, -4051,  2862,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051,   762,  1729, -4051,
   -4051, -4051, -4051, -4051, -4051,  1133,  2647, -4051, -4051, -4051,
      28, -4051, -4051, -4051, -4051,  2352, -4051, -4051, -4051, -4051,
    2707, -4051, -4051, -4051, -4051, -4051, -4051,  1262, -4051,  1773,
   -4051, -1703, -4051,   863, -1073,  2991,  3799,  1859,  -651, -4051,
   -4051, -2640,  3520, -4051, -4051, -1493, -4051,  3510, -1462,  -921,
    3177,  2460,  1269,  3877, -4051, -1266, -1212, -4051, -4051,  -710,
   -4051, -4051, -4051,  -692, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051,  1845, -4051, -1336, -4051, -4051, -4051,
   -4051, -4051,  -924,  1953,  1847,  -969, -4051,  3252, -4051, -4051,
   -4051, -2071, -1016,  2257,  2893, -4051, -4051, -1420, -4051, -2151,
   -4051,  1876, -4051, -4051, -1948,   827, -4051,  1221, -4051, -4051,
   -4051,   387,  1084,   395, -3092, -1193,  1936, -4051, -4051, -1348,
    3335, -1737,   640,  1870,   955, -4051, -4051, -4051, -4051,  1176,
   -2434,  -610, -4051, -2835,  -971, -1042, -4051, -2598,   843, -1337,
   -2052, -1836, -1199, -2760, -4051,   229, -4051,    23, -4051,  2387,
     419,   420, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
    -636,  -892,  3769,  3101, -4051,  3178, -4051, -1191,  3429,  3431,
   -4051, -4051,  3607,  1844,  1846, -4051, -2941, -2668, -4051, -4051,
    -625, -1504,   890, -4051,   930, -3195, -2628,  3433, -2653,  1258,
    4462,  3440, -1673,  3962, -4051, -4051, -4051, -4051, -4051, -4051,
    2340, -4051, -4051, -4051, -4051, -4051, -4051,  2988,  3889,  -632,
   -1432, -4051,  -833,  2969,  2344,  -966,  2957, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051,  2501,  1206, -4051, -4051, -4051,  3093, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051,   941,   -49, -4051,   908,   -66,
   -4051,   643, -4051, -4051, -4051, -4051, -4051,  -129, -4051, -4051,
    -136, -4051, -1072, -1430,   819, -1346, -2381, -4051,   933, -2589,
   -2683,  -757, -1243, -1239, -1674,    93,  3376, -4051,  2989, -1190,
   -4051,    89,   244, -1391,    -6, -2367,   -89,  -657, -4051,   813,
   -4051, -4051, -4051,  3560, -4051,  2395,  4502, -4051,  3270,  3041,
    4504,  -503,  3571,  3056, -4051,  3057, -4051, -4051, -4051, -2047,
   -1426, -4051, -4051,   170, -4051,  2479, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051, -4051, -4051, -4051, -4051,  2451,  3628,  3104, -4051,  2498,
   -4051, -4051, -4051, -4051, -4051,  2333, -4051,    83, -3068, -1116,
    3496,   304, -4051,   987, -1777,  -852, -4051, -4051,   289, -4051,
   -4051,   367,  3950,  3633, -4051, -4051, -4051, -4051, -4051, -2670,
    -615, -3444,  1424, -2074, -4051, -1421, -2756, -4051, -1130, -4051,
   -4051, -4051, -2425, -4051, -4051, -4051,   102,  4023,  4024, -4051,
   -4051,  -192, -4051,   -99, -4051, -4051, -4051, -4051, -4051, -4051,
   -4051,   331, -4051,   330, -4051, -4051, -4051, -4051,  3847, -4051,
   -4051,  3848, -4051, -4051, -4051, -4051, -4051,  3851, -4051, -4051,
   -4051, -4051, -4051, -4051,  1793, -4051, -4051, -4051, -4051, -4051,
   -4051
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2559
static const yytype_int16 yytable[] =
{
     525,   964,   967,   935,   631,  1023,  1133,  1054,  1639,   939,
    1646,   988,  2124,   571,  1602,  1733,  2098,   581,  1895,  1734,
    1941,  1916,  2038,  1806,  1942,  1534,  1217,   599,  1530,  2468,
    1088,  1481,  2037,  2695,   614,   523,  1975,   617,  2185,   632,
    3164,   693,   614,  2122,  2412,  1817,  1818,  1562,   572,   649,
    3214,  1176,  3058,  1563,  2991,  3077,  2397,  3227,   596,  2788,
     615,  3080,  2320,  3206,  3651,   604,  1651,  3208,  2076,   670,
    3286,  1858,  2084,  3046,  3322,  2111,  1122,  1125,  1652,  2316,
    2149,  2347,  3286,  3286,  2486,  2642,  2728,  2488,  2199,  2748,
    2749,  1977,  1978,   143,   683,  1981,  1982,  1983,  1984,  2369,
    1986,  1987,  1989,  1991,  1992,  1993,  1994,  1995,  2849,  2887,
    2326,  2175,  2260,  3451,  2330,   722,   579,  2287,   686,  2860,
     525,  1075,  2850,   525,   670,   698,   683,  2348,  2778,  2186,
    3211,   985,  2779,  2893,  3245,  3022,  3773,  2189,  2190,  2360,
    2789,  3023,  2265,  3228,  3229,  1320,  1580,  3672,  1271,  1272,
    2014,  1273,  3619,  1824,  2490,   688,   714,  3740,   692,  1283,
    1284,  2300,  3754,  3878,  1321,  3918,  2328,  2329,  3708,  2331,
    2214,  3140,  2334,  2335,  2336,  2337,  2300,  1403,  2340,   533,
    2090,  4187,  2366,  2350,  3529,  2079,  3010,  1564,  2355,  2356,
    2357,  2358,  2359,   682,  2632,  2845,  2363,  2364,  1615,   595,
    1283,  1284,  2373,  2374,  2375,  2376,   603,  2379,  2380,  1169,
    2382,  3239,  2817,  1283,  1284,  1842,  1843,  1283,  1284,  2832,
    2587,  1283,  1284,  1476,  2503,   699,  2709,  2854,  1578,  2059,
    2500,  2288,  1403,  1613,  3623,  2308,  2289,  2308,  4484,   704,
    2309,  2632,  2309,  2863,  1897,  3624,  1648,  3286,  3286,  1283,
    1284,  3955,  2437,  1834,  1835,  1836,  1910,  1911,  1912,  1431,
    2056,  2787,  2458,  1915,  3019,  1848,  3605,  4484,  1283,  1284,
    1786,  3453,  1142,  2681,  4200,  2750,  4510,  -959,  3020,  1559,
     893,  2806,  3047,  2854,  4319,  1042,  3381,  1518,  -511,   990,
     622,  3304,  2255,  3530,   960,  1903,  1283,  1284,  1907,   642,
    3971,  1162,  1283,  1284,  1126,  1153,  1283,  1284, -1834,  1487,
     705,  1648, -1588,  -689,  1850,  3089,  1404,  3585,  1925,  1926,
    3827,  2367,  1930,  2313,  1283,  1284,  3934,  1648,   966,  4404,
    1539,  2672,  1667,  4358,  3290,  3291,  1032,  2300,  2314,  4657,
    1944,  1945,  -603,  2279,  1597,  1949,  1950,  1492,  3706,   921,
    1502,  3707,  2377,   729,  3037,   968,  2855,  3529,  -604,  1413,
    1506,  3976,   583,  3798,  4330,  1283,  1284,  4188,   658,  1544,
    3717,  1404,  2283,  1283,  1284,  3977,  2463,  3739,  1283,  1284,
    1065,  2464,  3694,  1283,  1284,  3694,   528,  2283,  3545,  1616,
    1473,  1283,  1284,  1256,  3695,  2737,  1743,  3695,  1304,  2226,
     142,   591,  1283,  1284,  1478,  3301,  3294, -1664,  3696,   616,
    1571,  3696,  1743,  2682,  2138,  1283,  1284,  2775,  1535,  4256,
     990,   622,  2505,   990,   622,  1744,  4479,  -846,  2564,  2798,
    3390,  4528,  1819,  1128,  4600,  2139,  2240,  2387,  2248,  1283,
    1284,  1744,  -689,  1857,   530, -2558,  3710,   531,   537,  3711,
     719,  3048,   573,  4601,   584,  4305,  2799,  1217,  3557,  2301,
    2127,   922,  3814,  1283,  1284,  3038,  3530,  1043,  3625, -1834,
    1536,  2506,  2507,  2588,  2301,  1740,  4528,  2140,  2776,  3391,
    2710,  3115,  1170,  4004,  1743,  2579,  2388,  1283,  1284, -2042,
    3639,  1572,  2868,   896,  1283,  1284,  1479,  3433,  1426,  3425,
    3426,  3542,   937,  2280,  2738, -1588,  2638,  4480,   706,  1283,
    1284,  2630,  1129,  1744,  4250,  1283,  1284,  1283,  1284,  2215,
    2959,  1336,  2903,  2904,  1787,   592,  1144,   529,   585,  1286,
    3584,  4331,  1287,   670,   969,   698,  1161,   965,   659,  3606,
    1033,   975,   980,  4658,   923,  3260,  2378,  3632,  2283,   738,
    4122,   874,  3887,  3888,  3889,   878,  3912,  3587,  1598,   698,
    4520,  4521,  1283,  1284,  4187, -2189,  1283,  1284,  1414,  3978,
    1286,  2170,   891,  1287,  2173,  1257,   670,  4405,  2726,  2177,
    1066,   899,  2856,  1286,  3261,  4358,  1287,  1286,  1972,  3799,
    1287,  1286,  2507,  4107,  1287,   915,  1019,  1283,  1284,  2191,
    1090,  1560,  2807,  1307,  3257,  1851,  1694,   643,  1567,  -846,
    1493,  2039,  4506,  2633,  1980,  1283,  1284,  1127,  4356,  1286,
     670,   916,  1287,  2683,   670,   670,  1148,  1156,   632,  1651,
    2218,  2001,  3828,  3250,  1304,  2301, -2558,   961,  3531,  1107,
    1039,  1652,  3046,  2849,  2234, -1588,   894,  1519,  3381,  3305,
    2673,  2315,  2866,  3626,  1283,  1284,  2870,  2850,  1058,  3300,
    2633,  2953,  3302,  3303,  2711,  1322,  1286,  3879,  -689,  1287,
    3286,  3286,  1286,  2889,  2890,  1287,  1286,  3802,  1170,  1287,
    3240,   670,  1336,   670,  3022,  1093,  2905,  1619,  2016,  4072,
    3023,  3510,  1282,  1145,  1286,  2914,   525,  1287,  1016,  3960,
    2436,   683,  4252,  1119,  4313,  2057,   683,   683,  3964, -2213,
    2018,  1134,  1093,  1808,  3541,  2501,  1788,  2861,  2861,  2397,
    1105,   931,  3049,  4411,  4135,  4136,  1163,  1164,  1165,  1168,
    3709,  1106,  3986,  2091,  2188,  1286,  3292,  3988,  1287,  3427,
     886,  1139,  4257,  1286,  2287,  2368,  1287,  3055,  1286,  2060,
    4188,  1287,  4530,  1286,  4201,  2767,  1287,  2038,  1280,  3272,
    1788,  1286,  2818,  2819,  1287,  3288,   905,  2037,  2857,   540,
    2848,  3062,  1286,  2615,   918,  1287,  2080,  1218,  3299,  2830,
    4139,  1337,  1651,  2078,  2618,  1286,  3465,  2621,  1287,  2320,
    1288,  -959,  1335,  2751,  1652,  3796,  2842,  2843,  3634,  2097,
    1116,  3293,  -511,  2484,  1540,  1124,  1124,  3821,  1788,  1286,
    2601,  3531,  1287,  3019,  2490,  1283,  1284,  1040,  4073,  3532,
    1176,  1044,  2629,  1614,  3650,  3310, -1588,  3020,  1167,  1160,
    3956,  1288, -2042,  1286,  3039,  2883,  1287,  3251,  3252,  1307,
    1277,   670,  1281,  1545,  1288,  3663,  1293,  1471,  1288,  2612,
    2895,  4141,  1288,  3657,  -689, -1588,  -603,  1286,  2288,  1016,
    1287,  3807,  2136,  2289,  1286,  2589,  2794,  1287,  2688,  1329,
     525,  1331,  -604,  1093,   525,   670,  2308,   525,  2513,  1286,
    1288,  2309,  1287,  1374,  2174,  1286,   574,  1286,  1287,  1408,
    1287,  2801,  2802,  2803,  2804,  2451,  2446,  2565,   683,  1288,
    1283,  1284,  3558,  1345,  4440,  1330,  1533,  2493, -2189,  1334,
     670,   683,  1344,  3780,   683,  2458,  1316,  1317,  1318,  1319,
    3237,  2527,  3778,  3779,  1283,  1284,  3018,  1288,  2960,  1258,
     670, -2340,  1286,  1288, -2558,  1287,  1286,  1288,   593,  1287,
    3880,  1292,  1337,  2265,  2491,   631,   874,  3005,  3006,  3007,
    3008,  1483,  3208,  2580,  3424,  1288,  3865,  2837,  1568,  2192,
     670,  3697,  4354,  3877,  3697,  1283,  1284,  1286,  3262,  4616,
    1287,  1951,  1952,  1942,  1612,  1503,  3188,  2844,  2539,   911,
     632,  2511,  2543,  2594,  1323,  1286,  3737, -1834,  1287,   670,
     588,  1637,  2869,  4179,  2871,  4180,  1288,  1416,  2147,  1428,
     123, -2042,  2709,  2884,  1288,  2566,   985,  4503,  2773,  1288,
    1434,  1739,  2492,  1436,  1288,  1283,  1284,  1283,  1284,  2900,
    3211,  2510,  1288,  3465,  1286,  2504,  2911,  1287,   960,  2463,
    3243,  2512,   683,  1288,  2464,   683,  1574,  2926,  2928,  2930,
    3024,  1283,  1284,  2932,  2235,  3026,  1288,  1488,  3046,  1951,
    2531, -2011, -2213,  3258,  4339,  2283,  1615,   670,  1367,  2741,
     670,  1813,  2568,  2569,  4314,  1473,  2283,  1322,   942,  2778,
    1288,  1283,  1284,  3392,   670,  3464,  1647, -2189,  2258,  2972,
    2478,  2974,  2975,  1283,  1284,  2978,  2979,  2517,  4099,  3679,
    2849,  3671,  4147,  2157,  1288,  2988,  2989,  3662,  3641,  1569,
    3022,  4187,  3645,  2479,  2850,   683,  3023,  2208,  3857,  1324,
    2585,  2586,  1283,  1284,  2342,   125,  3798,  2532,  1288,  2909,
    1283,  1284,  1570,  1942,  4029,  1288,  3166,  1283,  1284,   605,
    3255,  1124,  2472,   670,  3149,  3150,  1066,  1810,   525,   525,
    1288,  3487,  3488,  2537,   552,  2737,  1288,   525,  1288,  3600,
    1314,  1315,  1316,  1317,  1318,  1319,   683,  2518,   639,  1462,
    1602,  2613,  3511,   683,   738,  1827,  1283,  1284,  3895,  1141,
    2656,  1440,  2402,  1811,  1812,  2731,  3787,   937,  3640,  3144,
    2220,  4111,  3644,  2452,  1083,  1286,  3788,  3635,  1287,  1336,
    1283,  1284,  3966,  1288,  1218,   943,  4320,  1288,  4322,   138,
    1336,  3617,  3896,  2249,  1124,  1283,  1284,   553,  1218,  2761,
    2524,  2763,  3314,  3495,  3496,  1489,  3393,  4340,  4081,  2642,
    2766, -2213,  3205,  2769,  2770,  1283,  1284,  2973,  1288,  3019,
    2976,  2977,  1954,  2000,  2980,  2981,  2982,  2983,  2984,  2985,
    2986,  2987,  4362,  3020,  2990,  2529,  1288,  1616,  3959,  1136,
    3658,  2605,  3131,  2861,  2738,  1814,  2710,  1943,  2453,  1283,
    1284,   912,  3512,  3513,  1027,  1283,  1284,  1283,  1284,  2250,
    1286,  1283,  1284,  1287, -2340,   944,   874,  2343,  2774,  1964,
    2040,   142,  1283,  1284,  3031,  1288,  1463,  4188,   139,  3189,
    2287,  1283,  1284,  2403,  1286,   606, -1663,  1287, -2490,  1575,
    2251,  3550,  3551,  1733,  1733,  2848,  2620,  1734,  1734,  1283,
    1284,  2122,  2122, -1834,  1283,  1284,   670,   144,  1283,  1284,
    1283,  1284,  2009,  2352,  3096,  1142,   683,  3236,  1996, -2491,
     709,  3789,   589,  2320,  2347,  1286,  3244,  2089,  1287,   670,
     683,   895,  3799,   554,  3148,   936,  2039,  2742,  2221,  3200,
    2316,  1028,  1790,  2646,  3246,  2300,  4154,  1617,  1143,  4309,
    1283,  1284,  1218,   670,  1283,  1284,  1016,  3256,  2397,  1283,
    1284,   961,  2252,  4149,  1963,  1283,  1284,  1016,  2112,   723,
    2348,  3315,  4315,  2635,  4112,  1286,  1323,  1286,  1287,  2165,
    1287,  2657,   933,  3046,   534,  2135,  2732,  2652,  4341,  2064,
    3539,  2067,  1955,   683,  2288,  2072,  1283,  1284,  3032,  2289,
    1333,  1286,  1478,   683,  1287,  1283,  1284,  2308,  2454, -2490,
     670,  1084,  2309,  3153,  3154,  2011,  1283,  1284,  3247,   683,
    1651,  1498,  1884,  1283,  1284,  1885,  2705,  2706,  2320,  1124,
    2711,  1286,  1652, -2340,  1287,  2606,  1288,  1085,  2730,  1337,
   -2491,  4124,  2166,  1286,  2107,  2253,  1287,  3810,  3268,  3810,
    1337,   670,  4089,  2530,  2647,  4363,   640,  2123,  2458,  1791,
     683,  1283,  1284,  1792,  3841,  3018,  3212,  1942,   670,  3147,
    1942,  4678,  1286,  4316,  3590,  1287,  2353,  1793,   937,  3157,
    1286,  3908,  3909,  1287,  4113,   632,  4254,  1286,  3987,  2071,
    1287,  3989,  2070,   632,  1479,  1499,  2760,  4119,  4090,  3430,
    3431,  3659,  1124,  4277,  4317,  1283,  1284,   525,   525,   525,
     683,   525,  2753,   683,  1830,  2222,  1336,  1618,  1124,  2784,
    2300,  1288,  2171,   525,  2532,   670,  1286,  2658,   525,  1287,
     641,  4047,  2658,  2785,  1997,  1619,  4287,  2163,  2533,  4103,
    4104,  1336,  2158,  2159,  2160,  1288,  2162,  2810,   683,   587,
    1286,  2747,  2594,  1287,  1283,  1284,  2283,  4522,  2172,  2002,
    2003,  1998,  2545,  2176,  4353,  1286,   683,  2203,  1287,  1144,
    4288,  2885,  2463,   945,   946,  4367,   948,  2464,   950,  3024,
    3105,  2894,  2950,   142,  3026,  1286,  1288,  3033,  1287,  1283,
    1284,  2087,  -242,  1283,  1284,   951,  3917,  2154,   670,  1283,
    1284,   644,  2267,  2551,  1283,  1284,  1283,  1284,   601,  2161,
    2933,  4160,  2164,  1283,  1284,  1794,  3811, -1834,  3811,  1286,
    3286,  3286,  1287,  2397,  3406,  1286,  1620,  1286,  1287,  4091,
    1287,  1286,  1283,  1284,  1287,  2167,  1288,  2689,  1288,  2088,
    3677,  1831,  1286,  2301,    44,  1287,  2397,  2187,  3652,  3653,
    2204,  1286,  2607,  2555,  1287,  2556,  3279,  3844,  3133,  1283,
    1284,  3846,  1288,  1830,  1283,  1284,  2254,  2811,  2608,  1286,
    1421,  2283,  1287,  1422,  1286,  3415,  1197,  1287,  1286,  2558,
    1286,  1287,  1107,  1287,  4350,  2715,  1283,  1284,  2597,  4131,
    1336,  3182,  1288,  1016,  4289,  4351,  1283,  1284,  2715,  3812,
    3396,  3816,  3034,  2690,  1288,  2241,  4120,  2241,  2509,  2256,
    2257,  1500,  2259,  1795,  2398,  3397,  2320,  2896,  1016,  1489,
    1286,  2559,   683,  1287,  1286,  2407,   683,  1287,  1999,  1286,
    1830,  2283,  1287,  1288,  2691,  1286,  1145,  1830,  1287,  2786,
    2299,  1288,  2848,   597,  -884,  1283,  1284,  1248,  1288,  2625,
    2563,  1283,  1284,  1283,  1284,  1283,  1284,  2626,  2581,  2951,
    1283,  1284,  3871,  1252,  2313,  3493,  1286,  1198, -2490,  1287,
    1283,  1284,   683,  1830,   646,  1286,  1337,  3280,  1287,  2242,
    1283,  1284,  4290,  3117,  2812, -1865,  1286,  1288,  2205,  1287,
    1847,  2469,   525,  1286,  1283,  1284,  1287,  2290,  2897, -2491,
    4291,  1337, -2490,   683,  3494,  1336,  2692,  2487,  2206,  2478,
    3872,  1288,  2717,  2718,    57,  2474,  1283,  1284,  2301,  3945,
    3224,  2404,  2207,  1423,  4292,  2409,  1288,  2470,  3505,  1283,
    1284,  1286,  2479, -2491,  1287,  4334,  4335,  2475,  1249,  1283,
    1284,  1283,  1284,  3515,  1743,  2243,  1288,  1131,  1132, -1865,
     606,  2204,   765,  4523,  1253,  3604,  3477,  1902,  2598,  4132,
    2602,  1968,  2038,  3516,  1906,  3119,   939,  1016,  4148,  4285,
     661,  1124,  2037,  1744,  4518,  1286,  3188,  2128,  1287,  3549,
    1288,  3018,  2300,  2344,  1218,  2538,  1288,  1886,  1288,  2693,
    1887,   650,  1288,  4286,  1283,  1284, -1865,  4041,   664,  3727,
    1929,  2898,  2519,  1288,  2520,  3276,  2208,  3257,  2528,  1790,
    2291,  3152,  1288,  3123,  4352,   662,  3787,  3946,   770,  2541,
    3813,  2636,  3813,   721,  1286,  1743,  3788,  1287,  2542,  3967,
    1288,   675,  3694,  2451,  1942,  1288,  1068,  1069,   651,  1288,
    3124,  1288,  2610,   670,  3695,  2604,  2546,   882,  2244,  1788,
    1337,  2550,  3968,  4508,  1744,  2554,  4512,  2557,  3696,  1286,
     684,  3947,  1287,  1286,  3165,  2625,  1287,   611,  3311,  1286,
     990,  3702,  1287,  2674,  1286,   611,  1286,  1287,   687,  1287,
     691,  1288,  1016,  1286,  1716,  1288,  1287,  1717,  1293,  2205,
    1288,  3969,  1131,  1132,  2627,  3024,  1288,  2560,  1663,  1664,
    3026,  2572,  1286,   683,   670,  1287,  2591,  1016,  1942,  2206,
     700,  1745,  3462,   652,  1471,   683,  1190,  1191,   689,  2122,
    1374,   782,   702,  2207,  4293,  1374,  1791,  1288,  2209,  1286,
    1792,  2245,  1287,  3013,  1286,   125,  1288,  1287,   670,  1805,
    3014,   990,   622,  3481,  1793,  4586,   709,  1288,  3577,  1131,
    1132,  2266,  3486,  3155,  1288,  1969,  1286,   683,   710,  1287,
    2734,   683,   711,  3489,  1304,  1337,  1286,   714,  2909,  1287,
    3497,  3789,  1942,   716,  4060,  4061,  4062,   670,   670,   683,
     683,  1070,  1071,  1292,  2292,  4524,   942,  1218,  1260,   670,
     730,  1602,  1288,  2283,  2293,   935,  3306,   670,   718,   631,
    2210,  2294,  1124,   542,   798,  3905,   732,  2208,  3501,  2346,
    2694,   879, -1865, -1755,  1124,  1286,  1325,  1326,  1287,  4547,
    4547,  1286,  3688,  1286,  1287,  1286,  1287,  4452,  1287,  4454,
    1286,  4455,   889,  1287,   632,  3320,  1288,   733,  3899,  3900,
    1286,  2759,  3323,  1287, -1834,   734,  3326,   670,   892, -1865,
    1286, -1866,  3502,  1287,  3715,  3716,  2679,  3259,  2451,   897,
    1416,  3066,   902, -1755,  1286,  3901,   272,  1287,   274,  1823,
    2704,  3548,   683,  3665,  3666,  1304, -1755,   908,  1434,  2708,
    2301,  2249,  1794,   874,  2910,  1288,  1286,   683,  3067,  1287,
    3848,  2508,  2507,  3401,   683,   683,  1943,   683,   910,  1286,
     123,  3503,  1287,   928,  2451,  2295,   919,  3540,   933,  1286,
     956,  1286,  1287,   943,  1287, -1866,  2534,  2507,  4382,  3248,
    1288,  2452,   926,  2283,  1288,  2249, -1755,  1336,  2925,  2209,
    1288,  2755,  2489,  2535,  1900,  1288,  3504,  1288,  3068, -1834,
    3506,  3069,  2547,  2507,  1288,   530,  3509,  2250,   531,  3070,
     957,  2892,  2246,  3514,  2548,  2507,   981,  3636,  3808,   986,
    3517,  3637, -1866,  1288,  1286, -1865,  1050,  1287,  3638,  1307,
    2771,  2768,  1970,  1056,  3603,   653,  2689,  2241,  2251,  3519,
    1795,  3817,  3818,  2549,  2507, -1834,  1229,  2882,  1971,  1057,
    1288,  2250,  1059,   944,   602,  1288,   124,   654,  2398,  2552,
    2507,  2210,  2296,  2398,  1061,  3833,  3521,  1247,  1062,  2865,
    2398,  3523,  3933,  1063,  2398,   125,  2876,  1288,  2283, -1865,
    1261,  1262,  2251,  1283,  1284,   826,  2876,  1288,  1064,  2876,
    4469,  2398,  2398,  2853,   670,  2876,  2876,  1080,   655,  1077,
    2813,  2902,  2690,  3524,  2398,  2867,  1943,   895,  2821,  2653,
    2252,  2877,  2654,  2398,   683,  2655,  3212,  1336,  2828,  2829,
    1942,   990,   622,  2931,  2283,  2876,  3011,  1087,  3933,  2833,
    2834,  2835,  2836,  1095,  2838,  2839,  1288,  2398,  2949,  2906,
    1307,  1104,  1288,  2913,  1288,  1107,  1288,  3071,   126,  2916,
    2917,  1288,  3525,  1117,  2252,  2969,  2840,  2841,  3838,   656,
    3839,  1288,  3840,  1138,  1016,  1137,   965,  3919,  1140,  3822,
     123,  1288,   965,  2878,  2879,  2880,  2881,  4038,  3406,  2689,
    3082,  2507,  1403,  3134,  2507,  1288,  1171,  4040,  1309,  1310,
    1282,   127,  1096,  2253,  1173,  1048,  1049,  1174,  1052,  2046,
    1053,  4046,  1175,  2912,  1328,  3281,  2452,  1288,    13,   670,
    1177,  2039,  1336,  2915,  3861,  3862,  3863,  1178,  3853,  1179,
    1288,  3852,  1044,  4048,  1332,   683,   683,   683,  2300,  3057,
    1288,  1182,  1288,  3420,  3421,   128,  4049,  2253, -1866,  2249,
    3457,  3458,  2927,  1097,  3072,  2690,  4050,  1337,  4051,   670,
    3507,  2507,  2452,  2300,  1183,   670,  2241,  1184,  1336,  2241,
    2241, -1588,  1185,  2241,  2241,  2241,  2241,  2241,  2241,  2241,
    2241,  3697,  1638,  2241,  1348, -1866,  1186,  3826,  1187,  2451,
    1411,  2453,  2047,  1410,   272,  1288,   274,  2048,  3282,  1188,
    2249,  2892,  3703,  3378,  1016,  1412,  3602,  1068,  1069,  1309,
    1310,  4267,  1429,  1304,  2451,  2250,  4026,  4027,  4028,  3994,
    3575,  3576,  1189,  2016,  1192,  1602,  1194, -1588,  1195,    25,
    1196,  1404,  3608,  3609,  3052,  3053,  3054,  2453,  1199,  1098,
    2049,  1200,  3851,  1437,  1522,  1201,  2251,  1202,  1312,  1313,
    1314,  1315,  1316,  1317,  1318,  1319,  2050,  1420,  3281,  3764,
    3765,  1546,  3468, -1588,  1203, -1588,  2250,  3475,  3766,  3767,
   -1834,   945,   946,   947,   948,   949,   950,  1863,  1204,   129,
    3162,  1205,   939, -1588,   670,   670,  1206,  1337, -1588,  3013,
    1207,  1547,  1208,   951,  1472, -1834,  3014,  2251,  1209,  1016,
    1212, -1866, -1588,  1523,  3171,   965,  3073,  1213,   939, -1588,
    3177,  3177,  1219,  3177,  3013,  1220,  2269, -1588,  2252,  3768,
    3769,  3014,  2831,  3903,  2254,  3771,  3772,  2249,  3162, -1588,
    2929,  1439,  2270,  4095,  4096,  1473,  1524,  1221,  4101,  4102,
    3195,  3282,  1548, -1588,  4307,  1016,  1549,  1304, -1588,  2283,
    1222,  2454,  1070,  1071,  1223, -1866,   744, -1588,   130,  1312,
    1313,  1314,  1315,  1316,  1317,  1318,  1319,  1224,  2254,  2252,
    1943,  3774,  3775,  3213,  2283,  4299,  3074,  4159,  3850,  2507,
    2313,  1225,  1337,  1867,  2715,  3177,  3177,  3177,   670,  2135,
     965,  1226,  2716,  2250,  1227,  2123,  2123,  2454,  3874,  3875,
    3179,  2253,  3180,  1230,  3075,  1231,  2715,  1459,  4270,  3176,
    3176,  1232,  3176,  1233,  3183,  1294,  1295,  3009,  1307,  3283,
    2918,  1234,  2919,   131,  2251,   132,  1235, -1588,  1337,  -689,
    1236,  1072,  1073,  1074,  3927,  1237,  2301,  1476,   683,  2313,
    1238,   765,  1239,  4387,  1240,    38,  4390,  4391,  4392,  4393,
   -1588,  1241,  2253,   965,  2314,  1242,  1296,  3999,  4000,  1243,
   -1588,  2301,  1244,  1099,  1245,  2920,  4032,  4035,  1246,  1297,
    1250,   133,   670,   670,  3221,  3222,  3223,  2452,  4074,  4075,
    1251,  4077,    44,  1336,  3176,  3176,  3176,  1254,  2921,  1304,
    4042,  2507, -1588,  1868,  4056,  2507,  2252,  1871,   769,  2344,
    2204,  1550,  2452,  1255,  1872,  2271,  1259,   770,  1336,  1298,
     558,  2717,  2718,  2398,  2688,  1263,  2398,  2398,  4381,  4271,
    4272,  2876,  1484,  1299,  4273,  4274,  1303,  2922,  1100,  1264,
    1101,  3687,  2204,  2717,  2718,  1265,   670,  1266,   775,  4118,
    2398,  1743,  4063,  3884,  4465,  4466,  1491,  3269,  3270, -1588,
    1300,  4118,  1307,  4474,  2719,  1283,  1284,  1525,  -689,  1267,
    2876,  1268,  3283,  3273,   537,  1269,  3714,  2876,  1270,   559,
    1744,  2876,  4456, -1588,  3719,  1327,  2719,  1309,  1310,  2253,
    1403,  1551,  3745,  2272,   744,  1873,  1494,  1942,  4088,  3458,
    4260,  4264,  4094,  3875,  4376,  4377,  4378,  4379,    54,  1496,
    1743,   610,   560,  1517,  3331,  4097,  4098,   683,  1521,  2273,
     782,  1541,  3389,  4109,  4110,  1301,  4137,  2841,  2876,  4150,
    4098, -1588,  2254,  2016,  2016,  2016,  4151,  4098,  1542,  1744,
    4401,  1543,  3312,  1558,  1304,  4260,  4264,   561,  2205,  4152,
    4098,  4185,  4098,  1561,  3318,  1552,  1565,  3410,  1566,  1875,
    3414,  1573,    57,  1859,  1860,  1861,  1862,  1863,  2206, -1588,
    1016,  1576,  3927,  1577,  4173,  1578,  4174,  4175,  1591,   765,
    2205,  2274,  2207,  2254,  1592, -1588,   793,  1594,  3689,  1596,
    3474,  3692,  3693,  1600,  3440,  1016, -1588, -1588,   796,   562,
    2206,  1607,   797,   798,  1307,   683,  2398,  1624,  4260,  3712,
    4186,  4098,  4264,  1526,  2207,  1609,  3332, -1588,  2345, -1588,
    1610,  1309,  1310,  4196,  4098, -1588,  2228,  2229,  1611,  1404,
    1626,  2230,  2231,  1627,  1527,  2346,   769,  1312,  1313,  1314,
    1315,  1316,  1317,  1318,  1319,   770, -1588, -1588,  4197,  4098,
   -1588, -1588,  1305,  1337,  4202,  4203,  4204,  4203,  2241,  1528,
    3952,  3953,  1628, -1588,  3423,  1629,  2208,  4300,  3458,  1630,
    1864,  1865,  1866,  1867,  1602,  1529,   775,  1553,  1337,  1306,
    3962, -1588,  1631,  2275,  4301,  3458, -1588,  3965,  3432,  3906,
    1632,  2923,  3720,  1633,  -689,  2269,  4303,  3403,  2208,  1635,
    1876,  4321,   874,  1648,  3444,  4383,  4384, -1588,  1654,  3546,
    2254,  2270,  1656,  3990,  1657, -1588,  3992,  1660,  1878,  1554,
    1661,  3910,  4402,  3875,  4516,  4517,  1665, -1588,   -67,  4551,
    4552,  4622,  4623,   563,  1374,  1737,  3980,  1741,   670,  1738,
    3722, -1588,  3723,  4669,  4670,  1742, -1588,  1943,   782,  1307,
     683,  1799,  4357,  2940,  2943, -1588,  1932,  1933,  1800,  4269,
    1304,  4467,  4468,  1309,  1310,  1801,  3195,   670,  1804,   874,
    1131,  1132,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  4164,
    4165,  1820,  1218,  1868,   670,  1869,  1870,  1871,  2209,  1807,
    3724,  1322,  1830,  1852,  1872,   540,  1837,  1899,  1889,  2016,
    1900,  1901,   818,  1923,  1940,  1953,  3928,  1960,  1961,  3929,
    1979,  1985,   564,   683,   793,  2010,  2020,   683,  2013,   824,
    2209,  1943,  2015,  2027,   826, -1588,  2023,   827,  2024,  2025,
     797,   798,  2026,  1350,  2028,  1286,  2029,  2030,  1287,  2041,
    2042,  2043,  2045,  2053,  2051,  -845,  1308,  4434, -1588,  3589,
    2054,  3720,  2063,  2062,  3685,  3686,  2074,  2077, -1588,  2085,
    2210,  2398,  3474,  2093,  2094,  3474,  3474,  4556,  2553,  2095,
    2096,  2398,  2099,  2876,  2102,  1873,  1602,   565,  2103,  2105,
    -689,  2109,   566,  3474,  2271,  1943,  3930,  3931,  2398,  2876,
   -1588,   683,  2210,  2106,  2398,  3721,  2113,  3718,  2128,  3722,
     567,  3723,  2130,  3738,  3741,  3743,  3744,  2137,  1309,  1310,
    2131,   968,   969,  2144,  2150,  1314,  1315,  1316,  1317,  1318,
    1319,  1311,  2152,  2145,  2146,   568,  2156,  1304,  2178,  -884,
    2179,  1351,  2180,  3656,  2181,  2183,  2198,  2196,  1874,  1875,
    2212,   569,  2213,  2216,  2217,  4556,  2219, -1588,  2223,  3724,
    2261,  2224,  2262,  2225,  2264,  2268,  1352,  2278,  2313,   525,
    1353,  2339,  2272,  3759,  2327,  1307,  2332,  2969,  2333,  2338,
    2341, -1588,  2349,  2351,  2354,  2362,  2361,  2365,  4664,  1602,
    2383,  2371,  1942,  2384,  3410,  1131,  1132,  2372,  2273,  2381,
    1124,  4534,  4673,  3777,  3755,  2391,  1942,  4664,  2392,  2399,
    1354,  1942,  4673,  2385,  1788,  2411,  1942,   683,  2413,   683,
    2414,  2415,  2416,  2417,  2418,   939,  2419,  2420,  2421, -1588,
    1355,  2422,  3806,  2123,  2423,  2424,  2425,  -845,  2426,  2427,
     818,  2428,  1131,  1132,  3928,  3498,  2445,  3929,  3725,  2429,
    2430,  2431,  2432,  2433,  3726,  2434,  2435,   824,  2438,  2439,
    2274,  2440,   826,  2441,  2442,   827,  2443,  2444,  1312,  1313,
    1314,  1315,  1316,  1317,  1318,  1319,  2447,  2465,  2466,  2471,
    2481,  2937,  2485, -1588,  2482,  2483,  1667,  2494,  1668,  4594,
    1876,  4596,  2489,  2496,  3727, -1588,  1356,  2523,  -884,  2507,
    2497,  1670,  1671,  2498,  2514,  2516,  1288,  1877,  1878,  4609,
    3786,  2521,  2522,  2600,  2525, -1588,  3794, -1588,  3795,  4360,
    4297,  2680,  2526,  2536,  3930,  3931,   873,  4634,  2532,  2540,
    1197,  1350,  1672, -1317,  1309,  1310,  2544,  1673,  4637,  4638,
    4649,  2561,  1307,  2562, -1588, -1588,  1248,  2567, -1588, -1588,
    3171,  1676,  2570,  1408,   670,   670,   670,  1677,  1678,   873,
    2571,  1679,  2275,  2592,  2582,  2583,   873,  4346,  2584,  3195,
    1680,  2593,  2609,  3728,  1777,  1778,  1779,  1780,  1781,  1782,
    1783,  2619,  1319,  3213,  3882,  1681,  2623,  1252,  2624,   965,
    2649,  2631,  1357,  2637,   670,   670,   670,  2650,  2686,  1648,
    2698,  1131,  1132,  1682,  2701,  2729,   536,  3725,  2740,   935,
    2744,  1683,  2135,  3726,  2746,  1489,   683,   683,  2938,  2752,
     935,  2756,  3057,  3729,  2758,  2780,  1686,  2762,  1358,  1351,
    2781,  2782,  1687,  2795,  3957,  2797,  2808,  1359,  3924,   875,
     876,   877,  2796,  4297,   880,   881,  2814,   683,   883,   884,
     885,  2815,  1360,  3727,  1352,  2822,  2820,  3942,  1353,  2823,
    2824,  2825,  2827,  2826,  2886,  2888,  1689,  2961,  2958,  2936,
    2964,  3012,   670,  2971,  2993,  2996,  2999,  1361,  3028,  3002,
    3730,  3036,  1826,  3937,  1312,  1313,  1314,  1315,  1316,  1317,
    1318,  1319,  3061,  3065,  3084,   670,  3083,   537,  1354,   937,
    3085,  1309,  1310,  3097,  2674,  3098,  3110,  3145,  3132,  1691,
    3143,  3151,   873,  3169,  2661,  3170,  1692,   873,  1355,  3174,
    3186,  1362,  3190,  3993,  3191,  3196,  3197,  3198,  2080,  3201,
    3203,  3218,  3728,  -915,  3202,  3219,  3215,  1693,  3220,  3225,
    2662,  3410,  3230,  3414,  4006,  3231,  3935,  3233,   873,  3234,
    3241,  4529,  1363,  3560,  3235,  2663,  3254,  3249,  3440,  3253,
    1694,  3274,  3277,  3561,   873,  3278,  3296,  3297,  2664,  3298,
    3313,  4360,   530,  3562,  3309,   531,  3316,  3924,  3924,  3924,
    3321,  3317,  3729,  3324,  1356,   538,  3327,  3563,  3564,  3565,
    3330,  3395,  3970,  3428,  1441,  3399,  4529,  1695,  3329,  3402,
    3429,  3436,  3403,  3566,  1442,  3441,  3443,  2387,  3459,   873,
     873,  3465,   873,   873,  1443,  1696,  3469,  3471,  3490,  1697,
    3476,  2665,  2666,  4448,  3478,   873,  3996,  3479,  1444,  1445,
    1446,  3480,  3482,  3483,  3491,  3526,  3536,  3578,  3537,  3730,
    3538,  2241,  3543,  3547,  1447,  3552,  3553,  4070,   965,  2667,
    4011,  1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  3579,
     670,  3585,  3591,  1699,  3580,  3583,  3581,  3582,  3594,  1421,
    1700,  2135,  3595,  3597,  3610,  3257,  3607,  3618,  3616,  1701,
    1357,  4491,  3620,  3621,  3622,  3629,  3642,  3643,  3648,  3655,
    3664,  3667,  3668,  3673,  3924,  3924,  4491,  4646,  3690,  3924,
    3924,  3683,  3746,  3749,  3750,  4297,  3753,  3757,  3756,  3761,
    3762,  3776,  4502,  3770,  3781,  3782,  1358,  3783,  2668,  3784,
    3797,   873,  2715,  4646,  3803,  1359,  1703,  2588,  3531,  3815,
    1694,   670,  1667,   873,  3804,  3830,  3805,  3866,  3823,  3868,
    1360,  3855,  3886,  3890,  3891,  3892,  3893,  3907,  3911,  3829,
    3914,  3954,  3842,  3943,   670,  3737,  3958,   873,  1706,  3974,
    3961,  3975,  3979,  3982,  3984,  1361,  3985,  1347,  3859,  3740,
    3991,  2959,  2669,  3876,  4130,  3995,  3883,  3920,  3884,  3904,
    3921,  3925,  3410,  3410,  3926,  3997,  3940,  3951,  3963,  4020,
    4024,  4008,  4017,  4144,  4009,  4018,  4491,  4044,   539,  4021,
    4022,  4030,  4043,  4045,  4031,  4032,  4581,  4033,  4034,  1362,
    4036,  4583,  4037,  4057,  4039,  1707,  1708,  1709,   540,  4053,
    4058,  4054,  1710,  4059,  4065,  4064,  4066,  4076,  4676,  2626,
    4078,  4079,  3567,  4082,  4085,  4087,  4114,  4092,  4093,  1711,
    1363,   796,  1712,  4100,  4108,  4123,  4125,  4126,  4035,  3568,
    4140,  4145,  4156,  4153,  4157,  4158,  4491,  4161,  4491,  3057,
    4166,  3057,  4167,   541,  4171,  -609,  2969,  2969,   542,  4162,
    4170,  4491,  3924,  1448,  4176,   936,  4181,  4182,  1714,  4195,
    4198,  4205,  4206,  4239,  4199,  1715,   873,  4246,  4251,  4242,
    1449,  4280,  2953,  4325,  4245,  4266,  -383,  4268,  4279,  4491,
    4491,  4298,  4343,   543,  4654,  4302,  4369,  4310,  4345,  4348,
    4131,   544,  1716,  4366,  4375,  1717,  4388,  4386,  4394,  4397,
    4389,  4398,  4403,  4406,  4408,  4407,  4414,  4411,  -401,  4439,
    4441,  4443,  4444,  4445,  4442,  4447,  4460,  4471,  4475,  4478,
    1943,   683,   873,   873,  4284,  4476,  4487,  4477,  4488,  4498,
    4492,   873,   873,   873,   873,   873,   873,   873,  4499,  4530,
    4535,  4506,  4537,  4539,   873,   873, -2394,   873,   873,  4543,
    3569,  4561,   873,   873,  4540,  4563,   873,   873,   873,   873,
    4564,   873,   873,  4329,  4569,  4572,  4574,  3570,  4336,   873,
     873,  4582,   873,   873,   873,   873,   873,  4584,  4587,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,  4591,
     873,  4592,  4593,   873,   873,  1376,  4598,  4597,   873,  4602,
    3410,  4603,   873,   873,   873,  4606,  4608,  4612,  1450,  1375,
    1376,  4614,  4617,  4618,  4619,   873,   873,   873,  4621,  4625,
    4278,  4626,  4628,  4635,  4651,  4650,   873,  4655,  4675,  3571,
    4338,   873,  4665,  3167,  3004,  4449,  4306,   873,  2995,   873,
     873,  4005,  2998,  4007,  4003,  3001,  3572,  2992,  3289,  4010,
    1154,   873,   873,   873,  4355,   873,   873,   873,   873,   873,
    4012,   873,   873,   873,   873,   873,   873,   873,   873,  4247,
    1451,  3271,   873,  4500,  4019,  4501,   873,  4014,  4143,  4667,
    1377,  4630,   638,  1026,  1659,  2727,  4415,  1452,  2645,  3574,
    4217,  4639,  4566,  4485,  4218,  1377,  4220,  4221,  4223,  4548,
    4567,  4497,  4496,  4224,  4225,  4226,  4227,  4228,  1803,  4231,
    2312,  1378,  4232,  4253,  4233,  2389,  3328,  4068,   670,  3596,
    3870,  2083,  4459,  4168,  4505,  1379,  1378,  3601,  4605,  4071,
    4559,  4589,  4396,  2450,   731,  4023,  2386,  3435,  4284,  3682,
    1379,  3450,  2395,  2955,  3669,  2892,  3674,  4470,  1380,  4562,
    3704,  1381,  4323,  3705,  1670,  1671,  3747,  4116,  3981,  4504,
    3275,  3528,  3845,  1380,  1382,  3843,  1381,  3847,   550,   551,
    3051,  4304,  2480,  4371,  4373,  4194,  2734,  4121,  4311,  1382,
    4308,  3434,  2809,  3027,  4312,  2805,  4558,  2941,  -849,  -849,
    1673,  1383,  2942,  4106,   852,  2195,  2939,  1037,  -849,  1041,
    2197,  3670,  3939,  3204,  1676,  2448,  1383,  2707,  3588,  2408,
    1677,  1678,  3187,  3867,  1679,  2108,  1384,  3142,  1055,  1962,
    1477,   873,  1385,  1482,  2622,  3081,  1898,   900,   670,  3159,
    2793,  1384,  3160,  3141,   907,  2200,  4464,  1385,  1681,  4183,
    3916,  1859,  1860,  1861,  1862,  1863,  3654,  3763,  4184,  4055,
    3158,   873,  1648,  3913,  3849,   873,  1682,  3676,  4374,  4519,
    2736,   873,  4177,  4178,  1166,  1409,  3885,  1386,   873,   670,
    1640,  2012,  1641,  3864,  1642,  3649,   648,  3184,   739,  3185,
    2169,  1643,  1386,  2764,  1849,  1687,  1022,  2184,  2765,  2194,
    4571,  2639,  2101,  3681,  3869,  3894,  4604,  4579,  4620,  4677,
    4080,  4674,  3881,  3973,  1505,  2754,  1825,   634,  1959,   635,
    2151,  2142,  2143,  1504,  4513,  4514,  2685,  2733,  1458,  2104,
    2800,  2660,  1623,  3856,  4380,  1461,   932,  3544,   725,   726,
    4347,  4349,  4668,  1157,  1158,     0,     0,  1159,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4610,  1864,  1865,
    1866,  1867,  4615,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1691,     0,     0,     0,     0,     0,     0,  1692,
       0,  4560,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4647,     0,     0,     0,  1180,     0,     0,     0,     0,
    1693,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1387,     0,  1943,     0,  4647,     0,     0,
       0,     0,     0,     0,     0,   670,  1211,     0,  1387,  1943,
       0,     0,  1388,  1389,  1943,     0,     0,     0,     0,  1943,
       0,  1390,  1228,     0,     0,     0,     0,     0,  1389,  1391,
       0,     0,     0,     0,     0,     0,  1390,     0,     0,     0,
    1695,     0,     0,     0,  1391,     0,     0,     0,     0,     0,
       0,  1868,     0,  1869,  1870,  1871,     0,     0,  1696,     0,
       0,     0,  1872,     0,     0,  1392,     0,     0,     0,     0,
       0,  1274,     0,     0,     0,     0,     0,     0,  1393,  1394,
    1392,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1393,  1394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1700,     0,     0,     0,     0,     0,     0,
       0,     0,  1701,     0,     0,     0,     0,     0,     0,     0,
    1395,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1873,     0,  1395,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1396,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   873,     0,  1396,     0,   873,     1,     0,   852,
       2,  1397,     0,  1398,     0,     0,   873,     0,   873,     0,
       0,  1486,     0,     0,     0,     3,  1397,     0,  1398,     4,
       0,  1706,     0,     0,     0,     0,  1874,  1875,     0,     0,
       0,     0,     0,     5,     6,  1515,     0,     0,     0,     0,
       0,     7,     0,     0,     0,     0,     8,     9,     0,   873,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    10,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1707,  1708,
    1709,     0,    11,     0,     0,  1710,     0,     0,     0,     0,
       0,     0,     0,     0,   873,   873,   873,     0,     0,     0,
       0,     0,  1711,     0,    12,  1712,     0,     0,     0,     0,
       0,   873,  4237,    13,    14,    15,     0,     0,     0,   873,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   873,    18,
       0,  1714,     0,     0,   873,     0,     0,   873,     0,   873,
       0,     0,     0,    19,     0,   873,     0,   873,   873,     0,
       0,     0,     0,     0,  1752,     0,     0,     0,  1876,     0,
       0,     0,     0,    20,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1877,  1878,     0,     0,     0,
       0,    21,     0,    22,     0,  4237,  4237,     0,    23,     0,
       0,    24,     0,  3452,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1828,  1829,     0,     0,    25,  1455,  1376,    26,     0,  1839,
    1840,     0,     0,  1844,  1845,  1846,     0,     0,     0,   873,
       0,     0,  1853,  1854,     0,  1855,  1856,     0,    27,   873,
    1881,     0,     0,     0,  1891,  1892,  1893,  1894,     0,  1896,
       0,     0,     0,     0,     0,    28,     0,  1904,  1905,    29,
    1908,  1909,     0,     0,     0,     0,     0,  1913,  1914,     0,
       0,  1917,  1918,  1919,  1920,  1921,  1922,   873,  1924,     0,
       0,  1927,  1928,     0,     0,     0,  1931,     0,     0,     0,
    1934,  1938,  1939,     0,     0,     0,     0,     0,     0,     0,
       0,  1377,     0,  1946,  1947,  1948,     0,     0,     0,     0,
       0,     0,  4237,  4237,  1958,     0,     0,     0,     0,   852,
       0,     0,     0,     0,     0,  1965,     0,  1966,  1967,     0,
       0,     0,  1378,     0,  4237,     0,     0,     0,     0,     0,
       0,   873,     0,     0,     0,     0,  1379,     0,   873,     0,
       0,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,     0,     0,     0,  2004,     0,     0,     0,     0,  1380,
       0,     0,  1381,    31,     0,    32,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1382,     0,     0,     0,    33,
       0,     0,  4237,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,  4237,     0,     0,
       0,     0,  1383,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    35,  4237,     0,    36,     0,    37,     0,     0,
      38,     0,     0,     0,     0,     0,     0,  1384,     0,     0,
      39,    40,     0,  1385,     0,     0,     0,     0,     0,     0,
      41,     0,    42,     0,     0,     0,     0,  4237,     0,     0,
       0,    43,     0,     0,     0,     0,     0,    44,     0,  4237,
    4237,     0,     0,     0,     0,    45,     0,     0,     0,     0,
      46,    47,    48,     0,     0,     0,     0,     0,  1386,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4237,     0,  2114,
       0,     0,     0,    49,     0,     0,     0,  4237,     0,     0,
      50,     0,  4237,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2148,
       0,     0,     0,  1515,     0,  4237,     0,  4237,     0,     0,
       0,     0,     0,     0,     0,     0,  2155,     0,     0,     0,
       0,     0,     0,   873,    51,  4237,     0,  4237,     0,  4237,
       0,     0,     0,     0,     0,     0,    52,     0,     0,     0,
      53,     0,  4237,    54,     0,     0,     0,     0,    55,     0,
       0,     0,     0,     0,  4237,  4237,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4237,  4237,     0,     0,     0,  4237,     0,     0,     0,    56,
       0,     0,     0,     0,  1387,     0,     0,     0,  1456,     0,
       0,     0,     0,     0,     0,     0,     0,    57,     0,     0,
     873,     0,     0,     0,  1389,     0,     0,     0,     0,   873,
     873,     0,  1390,     0,     0,     0,   873,     0,     0,   873,
    1391,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   873,   873,     0,   873,     0,     0,   873,   873,
     873,   873,   873,     0,     0,   873,     0,     0,     0,     0,
       0,     0,     0,     0,   873,     0,  1392,     0,     0,     0,
     873,     0,   873,     0,   873,   873,     0,   873,   873,  1393,
    1394,     0,   873,   873,   873,     0,     0,     0,   873,   873,
     873,     0,   873,     0,   873,     0,   873,     0,   873,     0,
     873,     0,     0,     0,     0,   873,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       1,     0,     0,     2,     0,     0,     0,     0,     0,   873,
       0,  1395,   873,     0,     0,     0,     0,     0,   873,     0,
       0,     0,     4,   873,   873,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     5,     6,     0,     0,
    1396,     0,  1670,  1671,     7,     0,     0,     0,     0,     8,
       9,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1397,     0,  1398,    10,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  -849,  -849,  1673,     0,
       0,     0,     0,     0,     0,    11,  -849,     0,     0,     0,
       0,     0,  1676,     0,     0,     0,     0,     0,  1677,  1678,
       0,     0,  1679,     0,     0,     0,     0,    12,     0,     0,
       0,     0,     0,     0,     0,     0,    13,    14,    15,     0,
    2495,     0,     0,     0,  2499,     0,  1681,     0,     0,    16,
      17,     0,     0,     0,     0,     0,  2495,     0,     0,   873,
    1648,     0,     0,     0,  1682,     0,     0,     0,     0,     0,
       0,     0,   873,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1687,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,    22,     0,     0,     0,
       0,    23,     0,     0,    24,     0,     0,     0,     0,     0,
       0,     0,     0,  1670,  1671,     0,     0,     0,     0,     0,
       0,     0,  2574,  2576,  2578,     0,     0,    25,     0,  3287,
      26,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3287,  3287,     0,     0,     0,     0,  2603,     0,  1673,
    1691,    27,     0,  1753,     0,     0,     0,  1692,     0,     0,
       0,     0,     0,  1676,     0,     0,  2611,     0,    28,  1677,
    1678,     0,    29,  1679,     0,  2616,     0,  2617,  1693,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3041,     0,     0,     0,     0,     0,  1681,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1648,     0,     0,     0,  1682,     0,  1754,  1755,  1756,
    1757,  1758,  1068,  1069,  1759,  1760,  1761,     0,  1762,  1763,
    1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,  1695,  1772,
    1773,     0,     0,     0,  1687,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1696,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,  2703,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,    32,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,     0,     0,     0,  3287,  3287,     0,     0,
       0,  1700,     0,    34,     0,  2743,     0,     0,     0,     0,
    1701,  1691,     0,     0,     0,     0,     0,     0,  1692,     0,
       0,     0,     0,     0,     0,    35,     0,     0,    36,     0,
      37,     0,     0,    38,     0,     0,     0,     0,     0,  1693,
       0,     0,     0,    39,    40,     0,     0,     0,   873,     0,
       0,   873,     0,    41,     0,    42,     0,  1070,  1071,     0,
       0,     0,     0,     0,    43,     0,     0,     0,     0,  2772,
      44,     0,     0,   873,   873,     0,   852,     0,    45,     0,
       0,     0,     0,    46,    47,    48,     0,     0,     0,  1706,
       0,     0,     0,     0,     0,   873,     0,     0,     0,  1695,
       0,     0,     0,     0,   873,     0,   873,     0,   873,     0,
       0,     0,     0,     0,     0,     0,    49,  1696,     0,     0,
       0,     0,     0,    50,     0,     0,     0,   873,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   873,
       0,     0,     0,     0,   873,     0,  1707,  1708,  1709,     0,
       0,     0,     0,  1710,     0,     0,     0,     0,     0,     0,
       0,  1670,  1671,     0,     0,     0,     0,    51,     0,     0,
    1711,     0,  1700,  1712,     0,     0,     0,     0,     0,    52,
       0,  1701,     0,    53,     0,     0,    54,     0,     0,     0,
       0,    55,     0,     0,   873,  -849,  -849,  1673,     0,     0,
       0,     0,     0,     0,   873,  -849,     0,     0,     0,  1714,
       0,  1676,     0,     0,     0,     0,     0,  1677,  1678,   873,
     873,  1679,    56,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      57,     0,     0,   873,   873,  1681,     0,     0,   873,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1648,
    1706,     0,     0,  1682,     0,     0,     0,     0,     0,  3042,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   873,     0,     0,     0,     0,
       0,  2970,  1687,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1707,  1708,  1709,
       0,     0,     0,     0,  1710,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1711,     0,     0,  1712,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3060,  1691,
       0,     0,     0,     0,     0,     0,  1692,  3063,  3064,     0,
    1714,   873,   873,     0,  3078,     0,     0,  3079,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1693,     0,     0,
    3086,  3087,     0,  3088,     0,     0,  3091,  3092,  3093,  3094,
    3095,     0,     0,     0,     0,     0,     0,     0,     0,  3287,
    3287,     0,  3099,     0,     0,     0,     0,     0,  3100,     0,
    3101,     0,  3102,  3103,     0,  3104,     0,     0,     0,     0,
    3107,  3108,  3109,     0,     0,     0,  3111,  3112,  3113,     0,
    3114,     0,  3116,   873,  3118,     0,  3120,  1695,  3121,     0,
    3333,  3334,     0,  3122,     0,     0,  3335,     0,  3336,     0,
    3337,  3338,     0,     0,     0,  1696,     0,   873,     0,   873,
       0,     0,   873,   873,     0,   873,     0,     0,  3339,     0,
       0,     0,     0,     0,   873,     0,  3156,     0,     0,   873,
       0,  2004,   873,     0,   873,   873,     0,  1666,     0,     0,
       0,     0,  1667,     0,  1668,     0,     0,  1669,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1670,  1671,     0,
    1700,     0,     0,     0,     0,     0,     0,     0,  3340,  1701,
     873,  3341,     0,     0,     0,     0,     0,     0,     0,  3342,
       0,     0,     0,     0,     0,     0,     0,     0,  1672,     0,
       0,  -849,  -849,  1673,  1674,     0,     0,     0,  3343,  1675,
       0,  -849,   873,     0,     0,     0,     0,  1676,     0,     0,
       0,     0,     0,  1677,  1678,  3344,     0,  1679,     0,     0,
       0,     0,     0,     0,     0,     0,  1680,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1681,     0,  3345,     0,  3346,     0,  2114,  1706,     0,
       0,     0,     0,     0,     0,  1648,     0,     0,     0,  1682,
    1515,  3347,  3348,     0,     0,     0,     0,  1683,  1684,     0,
       0,     0,     0,     0,  1685,     0,     0,     0,     0,     0,
       0,     0,  1686,     0,     0,     0,     0,     0,  1687,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1688,
       0,     0,     0,  3349,     0,  1707,  1708,  1709,     0,     0,
       0,     0,  1710,     0,     0,     0,     0,  3350,     0,     0,
       0,     0,  1689,     0,     0,     0,     0,     0,     0,  1711,
       0,     0,  1712,     0,     0,     0,  3351,     0,     0,     0,
       0,     0,     0,     0,     0,  3352,  3353,     0,  3354,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1690,     0,  1691,     0,     0,  1714,     0,
       0,     0,  1692,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3355,  3356,  3357,     0,     0,
       0,     0,     0,  1693,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3358,  3359,  3360,     0,     0,     0,
       0,  3361,     0,     0,  3362,     0,  1694,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3363,  3364,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1695,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3365,  3366,     0,     0,
       0,  1696,     0,     0,     0,  1697,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3367,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   873,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1698,     0,     0,     0,     0,     0,  1699,
     873,     0,     0,     0,     0,   873,  1700,     0,     0,   873,
       0,     0,     0,     0,     0,  1701,     0,     0,     0,  1666,
       0,     0,     0,     0,  1667,     0,  1668,     0,     0,  1669,
       0,     0,     0,     0,  3368,     0,     0,     0,  3369,  1670,
    1671,     0,     0,     0,     0,     0,  3461,  1702,     0,  3463,
    3370,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1703,  1704,  1705,     0,     0,     0,     0,     0,
    1672,  3484,  3485,     0,     0,  1673,  1674,     0,     0,     0,
       0,  1675,     0,     0,     0,     0,     0,     0,     0,  1676,
       0,     0,     0,  3508,  1706,  1677,  1678,     0,     0,  1679,
       0,     0,  3518,     0,  3520,     0,  3522,     0,  1680,     0,
    3371,     0,     0,  3372,     0,     0,  3373,  3374,  3375,  3376,
       0,     0,     0,  1681,     0,   852,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1648,   873,     0,
     873,  1682,     0,     0,     0,     0,     0,     0,     0,  1683,
    1684,  1707,  1708,  1709,     0,     0,  1685,     0,  1710,  3377,
    3378,     0,     0,     0,  1686,   873,     0,     0,     0,     0,
    1687,     0,     0,     0,     0,  1711,     0,     0,  1712,     0,
       0,  1688,     0,     0,     0,     0,     0,  3379,     0,     0,
       0,     0,   852,     0,     0,     0,     0,     0,     0,     0,
       0,  1713,  3612,     0,  1689,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1714,     0,     0,  2114,  3633,     0,
       0,  1715,     0,     0,     0,     0,     0,     0,  4235,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3646,  3647,     0,     0,  1690,  3612,  1691,  1716,     0,
       0,  1717,     0,     0,  1692,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1693,     0,     0,     0,     0,
       0,     0,     0,  3661,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1694,     0,
       0,     0,     0,     0,   873,   873,     0,     0,     0,     0,
       0,  4235,  4235,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   911,   989,     0,     0,     0,
       0,     0,     0,     0,     0,  1695,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   990,   622,  1696,     0,     0,     0,  1697,     0,     0,
       0,     0,   991,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3751,
    3752,     0,     0,     0,     0,     0,     0,   992,     0,   993,
       0,     0,     0,     0,     0,  1698,     0,     0,     0,   994,
       0,  1699,     0,     0,     0,     0,     0,     0,  1700,     0,
       0,     0,     0,     0,     0,     0,     0,  1701,     0,     0,
       0,     0,     0,     0,   873,     0,   873,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   873,     0,  4235,  4235,
       0,     0,     0,     0,     0,     0,     0, -1834,   995,  1702,
       0,  3809,     0,   996,     0,     0,   997,     0,     0,     0,
    4235,     0,     0,     0,  1703,  1704,  1705,     0,  4453,     0,
       0,     0,     0,     0,     0,  3819,     0,  2114,     0,     0,
    3824,  3825,     0,     0,     0,     0,     0,     0,   998,     0,
     999,     0,  3832,     0,     0,     0,  1706,  3834,     0,  1000,
    3835,  1001,  3836,  3837,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   873,     0,  4235,     0,
       0,     0,     0,     0,  1002,  1003,     0,     0,     0,     0,
       0,     0,     0,  4235,   873,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4235,
       0,     0,  1004,  1707,  1708,  1709,     0,     0,     0,     0,
    1710,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3612,     0,     0,  1005,     0,     0,     0,  1711,     0,     0,
    1712,     0,   873,  4235,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4235,  4235,     0,     0,     0,
       0,     0,     0,  1713,     0,     0,     0,  1006,   873,     0,
       0,     0,     0,     0,     0,     0,  1714,     0,     0,     0,
       0,     0,     0,  1715,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4235,     0,     0,     0,     0,     0,     0,
     873,     0,     0,  4235,     0,     0,     0,     0,  4235,     0,
    1716,     0,     0,  1717,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   873,     0,     0,     0,     0,     0,
       0,  4235,  1007,  4235,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   873,     0,     0,     0,
       0,  4235,     0,  4235,     0,  4235,     0,     0,     0,  1008,
       0,     0,     0,     0,     0,     0,     0,     0,  4235,     0,
    1009,  1010,     0,     0,  1011,  1012,     0,     0,     0,     0,
    4235,  4235,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1013,  4235,  4235,     0,     0,
       0,  4235,     0,     0,     0,     0,     0,   873,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   873,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1014,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1015,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -2430,     0,     0,     0,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3612,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2114,     0,
       0,     0,     0,  4084,     0,     0,     0,  4086,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -2430,     0,     0,     0,     0,
       0,     0,  1018,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2114,     0,  4155,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   907,  4324,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4409,     0,  4410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4418,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4489,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4533,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4573,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,  4590,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,  1935,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,  4656,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,  3612,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
     779,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,  1936,   291,     0,   780,   292,   293,
       0,     0,     0,     0,     0,   781,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,   782,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   783,   322,   323,   324,   325,
     784,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   785,   333,     0,     0,   786,   335,   787,   336,     0,
     337,   788,   789,   790,   791,   792,   342,   343,   344,   345,
     346,     0,   793,   347,   348,     0,     0,   349,   350,   351,
     352,   353,   794,   795,   796,   354,   355,     0,   797,   798,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,   799,   366,   367,   368,     0,   369,   370,
     800,   372,   373,   374,   375,   801,   802,   378,   803,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   804,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,   805,   806,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   807,     0,   808,   423,   424,   425,   426,   427,   428,
     809,   810,   431,   432,   433,   434,     0,   811,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
     812,   813,   466,   467,     0,     0,   468,   469,   814,   471,
     472,   473,   815,   816,   474,   475,   476,   477,   817,   478,
     479,     0,     0,   480,   481,   482,   483,     0,   818,   484,
     485,     0,   819,   820,   821,   822,     0,     0,     0,     0,
    1937,   490,   491,     0,   823,   824,   825,   493,   494,   495,
     826,   496,   497,   827,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   828,   506,
       0,     0,   829,   830,   831,   507,   832,   508,     0,     0,
     509,   833,     0,   834,   510,     0,   511,   512,   835,   836,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,     0,     0,   837,     0,   838,   839,
       0,     0,   840,   841,     0,     0,     0,     0,   843,   844,
       0,     0,   845,   846,     0,     0,   847,   848,   145,   146,
       0,   740,   148,   149,   150,   151,  1511,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   741,     0,   156,   157,
     158,   159,   742,   161,     0,   162,     0,     0,  1512,   163,
     744,   745,   746,   164,   747,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,   748,   749,   172,
     173,     0,   174,   175,   750,   751,   177,     0,   178,   179,
     180,   181,   752,   183,     0,   753,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   754,   203,     0,   755,
     756,   204,     0,     0,   205,   757,   206,   758,     0,   207,
     759,   760,     0,   208,   209,   210,   761,   762,   763,     0,
       0,     0,     0,   764,   213,   765,     0,     0,  1513,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,   767,     0,   241,   242,   243,   244,
     245,   768,   769,   246,   247,     0,   248,   249,   250,   251,
     252,   770,     0,   253,   254,     0,     0,     0,   771,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   772,   262,
     773,     0,   264,     0,   265,     0,   774,     0,   266,   267,
       0,   268,   775,     0,   269,   270,     0,     0,     0,   776,
     272,   273,   274,   777,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,   778,   279,   280,   281,   779,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,   780,   292,   293,     0,     0,
       0,     0,     0,   781,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,   782,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   783,   322,   323,   324,   325,   784,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   785,
     333,     0,     0,   786,   335,   787,   336,     0,   337,   788,
     789,   790,   791,   792,   342,   343,   344,   345,   346,     0,
     793,   347,   348,     0,     0,   349,   350,   351,   352,   353,
     794,   795,   796,   354,   355,     0,   797,   798,   356,     0,
     357,   358,  1514,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,   799,   366,   367,   368,     0,   369,   370,   800,   372,
     373,   374,   375,   801,   802,   378,   803,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   804,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,   805,
     806,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   807,
       0,   808,   423,   424,   425,   426,   427,   428,   809,   810,
     431,   432,   433,   434,     0,   811,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,   812,   813,
     466,   467,     0,     0,   468,   469,   814,   471,   472,   473,
     815,   816,   474,   475,   476,   477,   817,   478,   479,     0,
       0,   480,   481,   482,   483,     0,   818,   484,   485,     0,
     819,   820,   821,   822,     0,     0,     0,     0,     0,   490,
     491,     0,   823,   824,   825,   493,   494,   495,   826,   496,
     497,   827,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   828,   506,     0,     0,
     829,   830,   831,   507,   832,   508,     0,     0,   509,   833,
       0,   834,   510,     0,   511,   512,   835,   836,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,     0,     0,   837,     0,   838,   839,     0,     0,
     840,   841,     0,     0,     0,     0,   843,   844,     0,     0,
     845,   846,     0,     0,   847,   848,   145,   146,     0,   740,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   741,     0,   156,   157,   158,   159,
     742,   161,     0,   162,     0,     0,   743,   163,   744,   745,
     746,   164,   747,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,   748,   749,   172,   173,     0,
     174,   175,   750,   751,   177,     0,   178,   179,   180,   181,
     752,   183,     0,   753,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   754,   203,     0,   755,   756,   204,
       0,     0,   205,   757,   206,   758,     0,   207,   759,   760,
       0,   208,   209,   210,   761,   762,   763,     0,     0,     0,
       0,   764,   213,   765,     0,     0,   766,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,   767,     0,   241,   242,   243,   244,   245,   768,
     769,   246,   247,     0,   248,   249,   250,   251,   252,   770,
       0,   253,   254,     0,     0,     0,   771,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   772,   262,   773,     0,
     264,     0,   265,     0,   774,     0,   266,   267,     0,   268,
     775,     0,   269,   270,     0,     0,     0,   776,   272,   273,
     274,   777,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,   778,   279,   280,   281,   779,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,   780,   292,   293,     0,     0,     0,     0,
       0,   781,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,   782,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   783,   322,   323,   324,   325,   784,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   785,   333,     0,
       0,   786,   335,   787,   336,     0,   337,   788,   789,   790,
     791,   792,   342,   343,   344,   345,   346,     0,   793,   347,
     348,     0,     0,   349,   350,   351,   352,   353,   794,   795,
     796,   354,   355,     0,   797,   798,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,   799,
     366,   367,   368,     0,   369,   370,   800,   372,   373,   374,
     375,   801,   802,   378,   803,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   804,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,   805,   806,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   807,     0,   808,
     423,   424,   425,   426,   427,   428,   809,   810,   431,   432,
     433,   434,     0,   811,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,   812,   813,   466,   467,
       0,     0,   468,   469,   814,   471,   472,   473,   815,   816,
     474,   475,   476,   477,   817,   478,   479,     0,     0,   480,
     481,   482,   483,     0,   818,   484,   485,     0,   819,   820,
     821,   822,     0,     0,     0,     0,     0,   490,   491,     0,
     823,   824,   825,   493,   494,   495,   826,   496,   497,   827,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   828,   506,     0,     0,   829,   830,
     831,   507,   832,   508,     0,     0,   509,   833,     0,   834,
     510,     0,   511,   512,   835,   836,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
       0,     0,   837,     0,   838,   839,     0,     0,   840,   841,
     842,     0,     0,     0,   843,   844,     0,     0,   845,   846,
       0,     0,   847,   848,   145,   146,     0,   740,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   741,     0,   156,   157,   158,   159,   742,   161,
       0,   162,     0,     0,   743,   163,   744,   745,   746,   164,
     747,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,   748,   749,   172,   173,     0,   174,   175,
     750,   751,   177,     0,   178,   179,   180,   181,   752,   183,
       0,   753,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   754,   203,     0,   755,   756,   204,     0,     0,
     205,   757,   206,   758,     0,   207,   759,   760,     0,   208,
     209,   210,   761,   762,   763,     0,     0,     0,     0,   764,
     213,   765,     0,     0,   766,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
     767,     0,   241,   242,   243,   244,   245,   768,   769,   246,
     247,     0,   248,   249,   250,   251,   252,   770,     0,   253,
     254,     0,     0,     0,   771,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   772,   262,   773,     0,   264,     0,
     265,     0,   774,     0,   266,   267,     0,   268,   775,     0,
     269,   270,     0,     0,     0,   776,   272,   273,   274,   777,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
     778,   279,   280,   281,   779,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,   795,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,   838,   839,     0,     0,   840,   841,  2515,     0,
       0,     0,   843,   844,     0,     0,   845,   846,     0,     0,
     847,   848,   145,   146,     0,   740,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     741,     0,   156,   157,   158,   159,   742,   161,     0,   162,
       0,     0,   743,   163,   744,   745,   746,   164,   747,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,   748,   749,   172,   173,     0,   174,   175,   750,   751,
     177,     0,   178,   179,   180,   181,   752,   183,     0,   753,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     754,   203,     0,   755,   756,   204,     0,     0,   205,   757,
     206,   758,     0,   207,   759,   760,     0,   208,   209,   210,
     761,   762,   763,     0,     0,     0,     0,   764,   213,   765,
       0,     0,   766,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,   767,     0,
     241,   242,   243,   244,   245,   768,   769,   246,   247,     0,
     248,   249,   250,   251,   252,   770,     0,   253,   254,     0,
       0,     0,   771,   256,  2573,   257,     0,   258,     0,   259,
       0,   260,   772,   262,   773,     0,   264,     0,   265,     0,
     774,     0,   266,   267,     0,   268,   775,     0,   269,   270,
       0,     0,     0,   776,   272,   273,   274,   777,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,   778,   279,
     280,   281,   779,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,   780,
     292,   293,     0,     0,     0,     0,     0,   781,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,   782,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   783,   322,   323,
     324,   325,   784,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   785,   333,     0,     0,   786,   335,   787,
     336,     0,   337,   788,   789,   790,   791,   792,   342,   343,
     344,   345,   346,     0,   793,   347,   348,     0,     0,   349,
     350,   351,   352,   353,   794,   795,   796,   354,   355,     0,
     797,   798,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,   799,   366,   367,   368,     0,
     369,   370,   800,   372,   373,   374,   375,   801,   802,   378,
     803,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   804,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,   805,   806,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   807,     0,   808,   423,   424,   425,   426,
     427,   428,   809,   810,   431,   432,   433,   434,     0,   811,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,   812,   813,   466,   467,     0,     0,   468,   469,
     814,   471,   472,   473,   815,   816,   474,   475,   476,   477,
     817,   478,   479,     0,     0,   480,   481,   482,   483,     0,
     818,   484,   485,     0,   819,   820,   821,   822,     0,     0,
       0,     0,     0,   490,   491,     0,   823,   824,   825,   493,
     494,   495,   826,   496,   497,   827,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     828,   506,     0,     0,   829,   830,   831,   507,   832,   508,
       0,     0,   509,   833,     0,   834,   510,     0,   511,   512,
     835,   836,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,     0,     0,   837,     0,
     838,   839,     0,     0,   840,   841,     0,     0,     0,     0,
     843,   844,     0,     0,   845,   846,     0,     0,   847,   848,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,  2575,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
     779,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,   780,   292,   293,
       0,     0,     0,     0,     0,   781,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,   782,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   783,   322,   323,   324,   325,
     784,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   785,   333,     0,     0,   786,   335,   787,   336,     0,
     337,   788,   789,   790,   791,   792,   342,   343,   344,   345,
     346,     0,   793,   347,   348,     0,     0,   349,   350,   351,
     352,   353,   794,   795,   796,   354,   355,     0,   797,   798,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,   799,   366,   367,   368,     0,   369,   370,
     800,   372,   373,   374,   375,   801,   802,   378,   803,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   804,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,   805,   806,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   807,     0,   808,   423,   424,   425,   426,   427,   428,
     809,   810,   431,   432,   433,   434,     0,   811,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
     812,   813,   466,   467,     0,     0,   468,   469,   814,   471,
     472,   473,   815,   816,   474,   475,   476,   477,   817,   478,
     479,     0,     0,   480,   481,   482,   483,     0,   818,   484,
     485,     0,   819,   820,   821,   822,     0,     0,     0,     0,
       0,   490,   491,     0,   823,   824,   825,   493,   494,   495,
     826,   496,   497,   827,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   828,   506,
       0,     0,   829,   830,   831,   507,   832,   508,     0,     0,
     509,   833,     0,   834,   510,     0,   511,   512,   835,   836,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,     0,     0,   837,     0,   838,   839,
       0,     0,   840,   841,     0,     0,     0,     0,   843,   844,
       0,     0,   845,   846,     0,     0,   847,   848,   145,   146,
       0,   740,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   741,     0,   156,   157,
     158,   159,   742,   161,     0,   162,     0,     0,   743,   163,
     744,   745,   746,   164,   747,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,   748,   749,   172,
     173,     0,   174,   175,   750,   751,   177,     0,   178,   179,
     180,   181,   752,   183,     0,   753,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   754,   203,     0,   755,
     756,   204,     0,     0,   205,   757,   206,   758,     0,   207,
     759,   760,     0,   208,   209,   210,   761,   762,   763,     0,
       0,     0,     0,   764,   213,   765,     0,     0,   766,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,   767,     0,   241,   242,   243,   244,
     245,   768,   769,   246,   247,     0,   248,   249,   250,   251,
     252,   770,     0,   253,   254,     0,     0,     0,   771,   256,
    2577,   257,     0,   258,     0,   259,     0,   260,   772,   262,
     773,     0,   264,     0,   265,     0,   774,     0,   266,   267,
       0,   268,   775,     0,   269,   270,     0,     0,     0,   776,
     272,   273,   274,   777,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,   778,   279,   280,   281,   779,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,   780,   292,   293,     0,     0,
       0,     0,     0,   781,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,   782,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   783,   322,   323,   324,   325,   784,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   785,
     333,     0,     0,   786,   335,   787,   336,     0,   337,   788,
     789,   790,   791,   792,   342,   343,   344,   345,   346,     0,
     793,   347,   348,     0,     0,   349,   350,   351,   352,   353,
     794,   795,   796,   354,   355,     0,   797,   798,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,   799,   366,   367,   368,     0,   369,   370,   800,   372,
     373,   374,   375,   801,   802,   378,   803,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   804,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,   805,
     806,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   807,
       0,   808,   423,   424,   425,   426,   427,   428,   809,   810,
     431,   432,   433,   434,     0,   811,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,   812,   813,
     466,   467,     0,     0,   468,   469,   814,   471,   472,   473,
     815,   816,   474,   475,   476,   477,   817,   478,   479,     0,
       0,   480,   481,   482,   483,     0,   818,   484,   485,     0,
     819,   820,   821,   822,     0,     0,     0,     0,     0,   490,
     491,     0,   823,   824,   825,   493,   494,   495,   826,   496,
     497,   827,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   828,   506,     0,     0,
     829,   830,   831,   507,   832,   508,     0,     0,   509,   833,
       0,   834,   510,     0,   511,   512,   835,   836,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,     0,     0,   837,     0,   838,   839,     0,     0,
     840,   841,     0,     0,     0,     0,   843,   844,     0,     0,
     845,   846,     0,     0,   847,   848,   145,   146,     0,   740,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   741,     0,   156,   157,   158,   159,
     742,   161,     0,   162,     0,     0,   743,   163,   744,   745,
     746,   164,   747,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,   748,   749,   172,   173,     0,
     174,   175,   750,   751,   177,     0,   178,   179,   180,   181,
     752,   183,     0,   753,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   754,   203,     0,   755,   756,   204,
       0,     0,   205,   757,   206,   758,     0,   207,   759,   760,
       0,   208,   209,   210,   761,   762,   763,     0,     0,     0,
       0,   764,   213,   765,     0,     0,   766,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,   767,     0,   241,   242,   243,   244,   245,   768,
     769,   246,   247,     0,   248,   249,   250,   251,   252,   770,
       0,   253,   254,     0,     0,     0,   771,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   772,   262,   773,     0,
     264,     0,   265,     0,   774,     0,   266,   267,     0,   268,
     775,     0,   269,   270,     0,     0,     0,   776,   272,   273,
     274,   777,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,   778,   279,   280,   281,   779,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,   780,   292,   293,     0,     0,     0,     0,
       0,   781,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,   782,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   783,   322,   323,   324,   325,   784,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   785,   333,     0,
       0,   786,   335,   787,   336,     0,   337,   788,   789,   790,
     791,   792,   342,   343,   344,   345,   346,     0,   793,   347,
     348,     0,     0,   349,   350,   351,   352,   353,   794,   795,
     796,   354,   355,     0,   797,   798,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,   799,
     366,   367,   368,     0,   369,   370,   800,   372,   373,   374,
     375,   801,   802,   378,   803,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   804,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,   805,   806,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   807,     0,   808,
     423,   424,   425,   426,   427,   428,   809,   810,   431,   432,
     433,   434,     0,   811,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,   812,   813,   466,   467,
       0,     0,   468,   469,   814,   471,   472,   473,   815,   816,
     474,   475,   476,   477,   817,   478,   479,     0,     0,   480,
     481,   482,   483,     0,   818,   484,   485,     0,   819,   820,
     821,   822,     0,     0,     0,     0,     0,   490,   491,     0,
     823,   824,   825,   493,   494,   495,   826,   496,   497,   827,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   828,   506,     0,     0,   829,   830,
     831,   507,   832,   508,     0,     0,   509,   833,     0,   834,
     510,     0,   511,   512,   835,   836,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
       0,     0,   837,     0,   838,   839,     0,     0,   840,   841,
       0,     0,     0,     0,   843,   844,     0,     0,   845,   846,
       0,     0,   847,   848,   145,   146,     0,   740,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   741,     0,   156,   157,   158,   159,   742,   161,
       0,   162,     0,     0,   743,   163,   744,   745,   746,   164,
     747,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,   748,   749,   172,   173,     0,   174,   175,
     750,   751,   177,     0,   178,   179,   180,   181,   752,   183,
       0,   753,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   754,   203,     0,   755,   756,   204,     0,     0,
     205,   757,   206,   758,     0,   207,   759,   760,     0,   208,
     209,   210,   761,   762,   763,     0,     0,     0,     0,   764,
     213,   765,     0,     0,   766,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
     767,     0,   241,   242,   243,   244,   245,   768,   769,   246,
     247,     0,   248,   249,   250,   251,   252,   770,     0,   253,
     254,     0,     0,     0,   771,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   772,   262,   773,     0,   264,     0,
     265,     0,   774,     0,   266,   267,     0,   268,   775,     0,
     269,   270,     0,     0,     0,   776,   272,   273,   274,   777,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
     778,   279,   280,   281,   779,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,   795,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,   838,   839,     0,     0,   840,   841,     0,     0,
       0,     0,   843,  1210,     0,     0,   845,   846,     0,     0,
     847,   848,   145,   146,     0,   740,   148,   149,   150,   151,
    1973,     0,   152,   153,     0,     0,     0,  1974,     0,     0,
     741,     0,   156,   157,   158,   159,   742,   161,     0,   162,
       0,     0,   743,   163,   744,   745,   746,   164,   747,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,   748,   749,   172,   173,     0,   174,   175,   750,   751,
     177,     0,   178,   179,   180,   181,   752,   183,     0,   753,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     754,   203,     0,   755,   756,   204,     0,     0,   205,   757,
     206,   758,     0,   207,   759,   760,     0,   208,   209,   210,
     761,   762,   763,     0,     0,     0,     0,   764,   213,   765,
       0,     0,   766,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,   767,     0,
     241,   242,   243,   244,   245,   768,   769,   246,   247,     0,
     248,   249,   250,   251,   252,   770,     0,   253,   254,     0,
       0,     0,   771,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   772,   262,   773,     0,   264,     0,   265,     0,
     774,     0,   266,   267,     0,   268,   775,     0,   269,   270,
       0,     0,     0,   776,   272,   273,   274,   777,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,   778,   279,
     280,   281,   779,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,   780,
     292,   293,     0,     0,     0,     0,     0,   781,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,   782,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   783,   322,   323,
     324,   325,   784,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   785,   333,     0,     0,   786,   335,   787,
     336,     0,   337,   788,   789,   790,   791,   792,   342,   343,
     344,   345,   346,     0,   793,   347,   348,     0,     0,   349,
     350,   351,   352,   353,   794,     0,   796,   354,   355,     0,
     797,   798,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,   799,   366,   367,   368,     0,
     369,   370,   800,   372,   373,   374,   375,   801,   802,   378,
     803,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   804,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,   805,   806,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   807,     0,   808,   423,   424,   425,   426,
     427,   428,   809,   810,   431,   432,   433,   434,     0,   811,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,   812,   813,   466,   467,     0,     0,   468,   469,
     814,   471,   472,   473,   815,   816,   474,   475,   476,   477,
     817,   478,   479,     0,     0,   480,   481,   482,   483,     0,
     818,   484,   485,     0,   819,   820,   821,   822,     0,     0,
       0,     0,     0,   490,   491,     0,   823,   824,   825,   493,
     494,   495,   826,   496,   497,   827,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     828,   506,     0,     0,   829,   830,   831,   507,   832,   508,
       0,     0,   509,   833,     0,   834,   510,     0,   511,   512,
     835,   836,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,     0,     0,   837,     0,
     838,   839,     0,     0,   840,   841,     0,     0,     0,     0,
     843,   844,     0,     0,   845,   846,     0,     0,   847,   848,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
    3059,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,   780,   292,   293,
       0,     0,     0,     0,     0,   781,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,   782,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   783,   322,   323,   324,   325,
     784,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   785,   333,     0,     0,   786,   335,   787,   336,     0,
     337,   788,   789,   790,   791,   792,   342,   343,   344,   345,
     346,     0,   793,   347,   348,     0,     0,   349,   350,   351,
     352,   353,   794,   795,   796,   354,   355,     0,   797,   798,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,   799,   366,   367,   368,     0,   369,   370,
     800,   372,   373,   374,   375,   801,   802,   378,   803,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   804,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,   805,   806,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   807,     0,   808,   423,   424,   425,   426,   427,   428,
     809,   810,   431,   432,   433,   434,     0,   811,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
     812,   813,   466,   467,     0,     0,   468,   469,   814,   471,
     472,   473,   815,   816,   474,   475,   476,   477,   817,   478,
     479,     0,     0,   480,   481,   482,   483,     0,   818,   484,
     485,     0,   819,   820,   821,   822,     0,     0,     0,     0,
       0,   490,   491,     0,   823,   824,   825,   493,   494,   495,
     826,   496,   497,   827,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   828,   506,
       0,     0,   829,   830,   831,   507,   832,   508,     0,     0,
     509,   833,     0,   834,   510,     0,   511,   512,   835,   836,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,     0,     0,   837,     0,   838,   839,
       0,     0,   840,   841,     0,     0,     0,     0,   843,   844,
       0,     0,   845,   846,     0,     0,   847,   848,   145,   146,
       0,   740,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   741,     0,   156,   157,
     158,   159,   742,   161,     0,   162,     0,     0,   743,   163,
     744,   745,   746,   164,   747,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,   748,   749,   172,
     173,     0,   174,   175,   750,   751,   177,     0,   178,   179,
     180,   181,   752,   183,     0,   753,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   754,   203,     0,   755,
     756,   204,     0,     0,   205,   757,   206,   758,     0,   207,
     759,   760,     0,   208,   209,   210,   761,   762,   763,     0,
       0,     0,     0,   764,   213,   765,     0,     0,   766,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,   767,     0,   241,   242,   243,   244,
     245,   768,   769,   246,   247,     0,   248,   249,   250,   251,
     252,   770,     0,   253,   254,     0,     0,     0,   771,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   772,   262,
     773,     0,   264,     0,   265,     0,   774,     0,   266,   267,
       0,   268,   775,     0,   269,   270,     0,     0,     0,   776,
     272,   273,   274,   777,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,   778,   279,   280,   281,  3106,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,   780,   292,   293,     0,     0,
       0,     0,     0,   781,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,   782,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   783,   322,   323,   324,   325,   784,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   785,
     333,     0,     0,   786,   335,   787,   336,     0,   337,   788,
     789,   790,   791,   792,   342,   343,   344,   345,   346,     0,
     793,   347,   348,     0,     0,   349,   350,   351,   352,   353,
     794,   795,   796,   354,   355,     0,   797,   798,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,   799,   366,   367,   368,     0,   369,   370,   800,   372,
     373,   374,   375,   801,   802,   378,   803,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   804,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,   805,
     806,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   807,
       0,   808,   423,   424,   425,   426,   427,   428,   809,   810,
     431,   432,   433,   434,     0,   811,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,   812,   813,
     466,   467,     0,     0,   468,   469,   814,   471,   472,   473,
     815,   816,   474,   475,   476,   477,   817,   478,   479,     0,
       0,   480,   481,   482,   483,     0,   818,   484,   485,     0,
     819,   820,   821,   822,     0,     0,     0,     0,     0,   490,
     491,     0,   823,   824,   825,   493,   494,   495,   826,   496,
     497,   827,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   828,   506,     0,     0,
     829,   830,   831,   507,   832,   508,     0,     0,   509,   833,
       0,   834,   510,     0,   511,   512,   835,   836,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,     0,     0,   837,     0,   838,   839,     0,     0,
     840,   841,     0,     0,     0,     0,   843,   844,     0,     0,
     845,   846,     0,     0,   847,   848,   145,   146,     0,   740,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   741,     0,   156,   157,   158,   159,
     742,   161,     0,   162,     0,     0,   743,   163,   744,   745,
     746,   164,   747,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,   748,   749,   172,   173,     0,
     174,   175,   750,   751,   177,     0,   178,   179,   180,   181,
     752,   183,     0,   753,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   754,   203,     0,   755,   756,   204,
       0,     0,   205,   757,   206,   758,     0,   207,   759,   760,
       0,   208,   209,   210,   761,   762,   763,     0,     0,     0,
       0,   764,   213,   765,     0,     0,  3611,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,   767,     0,   241,   242,   243,   244,   245,   768,
     769,   246,   247,     0,   248,   249,   250,   251,   252,   770,
       0,   253,   254,     0,     0,     0,   771,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   772,   262,   773,     0,
     264,     0,   265,     0,   774,     0,   266,   267,     0,   268,
     775,     0,   269,   270,     0,     0,     0,   776,   272,   273,
     274,   777,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,   778,   279,   280,   281,   779,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,   780,   292,   293,     0,     0,     0,     0,
       0,   781,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,   782,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   783,   322,   323,   324,   325,   784,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   785,   333,     0,
       0,   786,   335,   787,   336,     0,   337,   788,   789,   790,
     791,   792,   342,   343,   344,   345,   346,     0,   793,   347,
     348,     0,     0,   349,   350,   351,   352,   353,   794,   795,
     796,   354,   355,     0,   797,   798,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,   799,
     366,   367,   368,     0,   369,   370,   800,   372,   373,   374,
     375,   801,   802,   378,   803,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   804,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,   805,   806,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   807,     0,   808,
     423,   424,   425,   426,   427,   428,   809,   810,   431,   432,
     433,   434,     0,   811,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,   812,   813,   466,   467,
       0,     0,   468,   469,   814,   471,   472,   473,   815,   816,
     474,   475,   476,   477,   817,   478,   479,     0,     0,   480,
     481,   482,   483,     0,   818,   484,   485,     0,   819,   820,
     821,   822,     0,     0,     0,     0,     0,   490,   491,     0,
     823,   824,   825,   493,   494,   495,   826,   496,   497,   827,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   828,   506,     0,     0,   829,   830,
     831,   507,   832,   508,     0,     0,   509,   833,     0,   834,
     510,     0,   511,   512,   835,   836,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
       0,     0,   837,     0,   838,   839,     0,     0,   840,   841,
       0,     0,     0,     0,   843,   844,     0,     0,   845,   846,
       0,     0,   847,   848,   145,   146,     0,   740,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   741,     0,   156,   157,   158,   159,   742,   161,
       0,   162,     0,     0,   743,   163,   744,   745,   746,   164,
     747,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,   748,   749,   172,   173,     0,   174,   175,
     750,   751,   177,     0,   178,   179,   180,   181,   752,   183,
       0,   753,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   754,   203,     0,   755,   756,   204,     0,     0,
     205,   757,   206,   758,     0,   207,   759,   760,     0,   208,
     209,   210,   761,   762,   763,     0,     0,     0,     0,   764,
     213,   765,     0,     0,   766,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
     767,     0,   241,   242,   243,   244,   245,   768,   769,   246,
     247,     0,   248,   249,   250,   251,   252,   770,     0,   253,
     254,     0,     0,     0,   771,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   772,   262,   773,     0,   264,     0,
     265,     0,   774,     0,   266,   267,     0,   268,   775,     0,
     269,   270,     0,     0,     0,   776,   272,   273,   274,   777,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
     778,   279,   280,   281,   779,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,   780,   292,   293,     0,     0,     0,     0,     0,   781,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
     782,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   783,
     322,   323,   324,   325,   784,   326,   327,  4553,     0,     0,
       0,   328,   329,   330,   331,   785,   333,     0,     0,   786,
     335,   787,   336,     0,   337,   788,   789,   790,   791,   792,
     342,   343,   344,   345,   346,     0,   793,   347,   348,     0,
       0,   349,   350,   351,   352,   353,   794,     0,   796,   354,
     355,     0,   797,   798,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,   799,   366,   367,
     368,     0,   369,   370,   800,   372,   373,   374,   375,   801,
     802,   378,   803,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   804,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,   805,   806,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   807,     0,   808,   423,   424,
     425,   426,   427,   428,   809,   810,   431,   432,   433,   434,
       0,   811,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,   812,   813,   466,   467,     0,     0,
     468,   469,   814,   471,   472,   473,   815,   816,   474,   475,
     476,   477,   817,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   818,   484,   485,     0,   819,   820,   821,   822,
       0,     0,     0,     0,     0,   490,   491,     0,   823,   824,
     825,   493,   494,   495,   826,   496,   497,   827,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   828,   506,     0,     0,   829,   830,   831,   507,
     832,   508,     0,     0,   509,   833,     0,   834,   510,     0,
     511,   512,   835,   836,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     837,     0,   838,   839,     0,     0,   840,   841,     0,     0,
       0,     0,   843,   844,     0,     0,   845,   846,     0,     0,
     847,   848,   145,   146,     0,   740,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     741,     0,   156,   157,   158,   159,   742,   161,     0,   162,
       0,     0,   743,   163,   744,   745,   746,   164,   747,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,   748,   749,   172,   173,     0,   174,   175,   750,   751,
     177,     0,   178,   179,   180,   181,   752,   183,     0,   753,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     754,   203,     0,   755,   756,   204,     0,     0,   205,   757,
     206,   758,     0,   207,   759,   760,     0,   208,   209,   210,
     761,   762,   763,     0,     0,     0,     0,   764,   213,   765,
       0,     0,   766,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,   767,     0,
     241,   242,   243,   244,   245,   768,   769,   246,   247,     0,
     248,   249,   250,   251,   252,   770,     0,   253,   254,     0,
       0,     0,   771,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   772,   262,   773,     0,   264,     0,   265,     0,
     774,     0,   266,   267,     0,   268,   775,     0,   269,   270,
       0,     0,     0,   776,   272,   273,   274,   777,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,   778,   279,
     280,   281,   779,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,   780,
     292,   293,     0,     0,     0,     0,     0,   781,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,   782,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   783,   322,   323,
     324,   325,   784,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   785,   333,     0,     0,   786,   335,   787,
     336,     0,   337,   788,   789,   790,   791,   792,   342,   343,
     344,   345,   346,     0,   793,   347,   348,     0,     0,   349,
     350,   351,   352,   353,   794,     0,   796,   354,   355,     0,
     797,   798,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,   799,   366,   367,   368,     0,
     369,   370,   800,   372,   373,   374,   375,   801,   802,   378,
     803,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   804,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,   805,   806,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   807,     0,   808,   423,   424,   425,   426,
     427,   428,   809,   810,   431,   432,   433,   434,     0,   811,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,   812,   813,   466,   467,     0,     0,   468,   469,
     814,   471,   472,   473,   815,   816,   474,   475,   476,   477,
     817,   478,   479,     0,     0,   480,   481,   482,   483,     0,
     818,   484,   485,     0,   819,   820,   821,   822,     0,     0,
       0,     0,     0,   490,   491,     0,   823,   824,   825,   493,
     494,   495,   826,   496,   497,   827,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     828,   506,     0,     0,   829,   830,   831,   507,   832,   508,
       0,     0,   509,   833,     0,   834,   510,     0,   511,   512,
     835,   836,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,     0,     0,   837,     0,
     838,   839,     0,     0,   840,   841,     0,     0,     0,     0,
     843,   844,     0,     0,   845,   846,     0,     0,   847,   848,
     145,   146,     0,   740,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   741,     0,
     156,   157,   158,   159,   742,   161,     0,   162,     0,     0,
     743,   163,   744,   745,   746,   164,   747,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,   748,
     749,   172,   173,     0,   174,   175,   750,   751,   177,     0,
     178,   179,   180,   181,   752,   183,     0,   753,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   754,   203,
       0,   755,   756,   204,     0,     0,   205,   757,   206,   758,
       0,   207,   759,   760,     0,   208,   209,   210,   761,   762,
     763,     0,     0,     0,     0,   764,   213,   765,     0,     0,
     766,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   767,     0,   241,   242,
     243,   244,   245,   768,   769,   246,   247,     0,   248,   249,
     250,   251,   252,   770,     0,   253,   254,     0,     0,     0,
     771,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     772,   262,   773,     0,   264,     0,   265,     0,   774,     0,
     266,   267,     0,   268,   775,     0,   269,   270,     0,     0,
       0,   776,   272,   273,   274,   777,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,   778,   279,   280,   281,
    1988,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,   780,   292,   293,
       0,     0,     0,     0,     0,   781,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,   782,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   783,   322,   323,   324,   325,
     784,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   785,   333,     0,     0,   786,   335,   787,   336,     0,
     337,   788,   789,   790,   791,   792,   342,   343,   344,   345,
     346,     0,   793,   347,   348,     0,     0,   349,   350,   351,
     352,   353,   794,     0,   796,   354,   355,     0,   797,   798,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,   799,   366,   367,   368,     0,   369,   370,
     800,   372,   373,   374,   375,   801,   802,   378,   803,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   804,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,   805,   806,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   807,     0,   808,   423,   424,   425,   426,   427,   428,
     809,   810,   431,   432,   433,   434,     0,   811,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
     812,   813,   466,   467,     0,     0,   468,   469,   814,   471,
     472,   473,   815,   816,   474,   475,   476,   477,   817,   478,
     479,     0,     0,   480,   481,   482,   483,     0,   818,   484,
     485,     0,   819,   820,   821,   822,     0,     0,     0,     0,
       0,   490,   491,     0,   823,   824,   825,   493,   494,   495,
     826,   496,   497,   827,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   828,   506,
       0,     0,   829,   830,   831,   507,   832,   508,     0,     0,
     509,   833,     0,   834,   510,     0,   511,   512,   835,   836,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,     0,     0,   837,     0,   838,   839,
       0,     0,   840,   841,     0,     0,     0,     0,   843,   844,
       0,     0,   845,   846,     0,     0,   847,   848,   145,   146,
       0,   740,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   741,     0,   156,   157,
     158,   159,   742,   161,     0,   162,     0,     0,   743,   163,
     744,   745,   746,   164,   747,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,   748,   749,   172,
     173,     0,   174,   175,   750,   751,   177,     0,   178,   179,
     180,   181,   752,   183,     0,   753,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   754,   203,     0,   755,
     756,   204,     0,     0,   205,   757,   206,   758,     0,   207,
     759,   760,     0,   208,   209,   210,   761,   762,   763,     0,
       0,     0,     0,   764,   213,   765,     0,     0,   766,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,   767,     0,   241,   242,   243,   244,
     245,   768,   769,   246,   247,     0,   248,   249,   250,   251,
     252,   770,     0,   253,   254,     0,     0,     0,   771,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   772,   262,
     773,     0,   264,     0,   265,     0,   774,     0,   266,   267,
       0,   268,   775,     0,   269,   270,     0,     0,     0,   776,
     272,   273,   274,   777,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,   778,   279,   280,   281,  1990,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,   780,   292,   293,     0,     0,
       0,     0,     0,   781,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,   782,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   783,   322,   323,   324,   325,   784,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   785,
     333,     0,     0,   786,   335,   787,   336,     0,   337,   788,
     789,   790,   791,   792,   342,   343,   344,   345,   346,     0,
     793,   347,   348,     0,     0,   349,   350,   351,   352,   353,
     794,     0,   796,   354,   355,     0,   797,   798,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,   799,   366,   367,   368,     0,   369,   370,   800,   372,
     373,   374,   375,   801,   802,   378,   803,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   804,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,   805,
     806,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   807,
       0,   808,   423,   424,   425,   426,   427,   428,   809,   810,
     431,   432,   433,   434,     0,   811,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,   812,   813,
     466,   467,     0,     0,   468,   469,   814,   471,   472,   473,
     815,   816,   474,   475,   476,   477,   817,   478,   479,     0,
       0,   480,   481,   482,   483,     0,   818,   484,   485,     0,
     819,   820,   821,   822,     0,     0,     0,     0,     0,   490,
     491,     0,   823,   824,   825,   493,   494,   495,   826,   496,
     497,   827,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   828,   506,     0,     0,
     829,   830,   831,   507,   832,   508,     0,     0,   509,   833,
       0,   834,   510,     0,   511,   512,   835,   836,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,     0,     0,   837,     0,   838,   839,     0,     0,
     840,   841,     0,     0,     0,     0,   843,   844,     0,     0,
     845,   846,     0,     0,   847,   848,   145,   146,     0,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,   744,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,  2032,     0,     0,     0,
       0,   212,   213,   765,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
     769,   246,   247,     0,   248,   249,   250,   251,   252,   770,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
     775,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,   782,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   793,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,   797,   798,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,   818,   484,   485,     0,  2033,   487,
     488,  2034,     0,     0,     0,     0,     0,   490,   491,     0,
       0,   824,   492,   493,   494,   495,   826,   496,   497,   827,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
       0,     0,   522,     0,     0,     0,   145,   146,     0,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,   847,   848,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
    2314,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
     537,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,  1743,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,  1744,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,  3445,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,  2387,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,  -517,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,   540,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
       0,     0,   522,     0,   145,   146,     0,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,  2394,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,  2314,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,   537,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,  1743,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,  1744,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,   540,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     522,     0,   145,   146,     0,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,  2394,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,  2125,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,  1581,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,     0,     0,   522,     0,
       0,     0,   145,   146,     0,   147,   148,   149,   150,   151,
       0,  1582,   152,   153,     0,  1583,     0,   154,     0,   578,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,  1581,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,     0,     0,   522,     0,
       0,     0,   145,   146,     0,   147,   148,   149,   150,   151,
       0,  1582,   152,   153,     0,  1583,     0,   154,     0,   578,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,  1581,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,     0,     0,   522,     0,
       0,     0,   145,   146,     0,   147,   148,   149,   150,   151,
       0,  1582,   152,   153,     0,     0,     0,   154,     0,   578,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,  2715,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,     0,     0,   522,     0,
     145,   146,     0,   147,   148,   149,   150,   151,     0,     0,
     152,   153,  3207,     0,     0,   154,     0,     0,   155,   848,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,     0,     0,   522,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   145,   146,
    4660,   147,   148,   149,   150,   151,  4661,   848,   152,   153,
       0,     0,     0,   154,     0,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,     0,     0,   522,     0,     0,     0,   145,   146,
       0,   147,   148,   149,   150,   151,     0,  1214,   152,   153,
       0,     0,     0,   154,     0,   848,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,     0,     0,   522,     0,     0,     0,   145,   146,
       0,   147,   148,   149,   150,   151,     0,  2393,   152,   153,
       0,     0,     0,   154,     0,  2394,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,     0,     0,   522,     0,     0,     0,     0,     0,
       0,     0,  3175,   145,   146,     0,   147,   148,   149,   150,
     151,     0,     0,   152,   153,   578,     0,     0,   154,     0,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,     0,     0,     0,   163,     0,     0,     0,   164,     0,
       0,   165,   166,   167,     0,   168,     0,   169,   170,     0,
       0,   171,     0,     0,   172,   173,     0,   174,   175,   176,
       0,   177,     0,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,     0,   204,     0,     0,   205,
       0,   206,     0,     0,   207,     0,     0,     0,   208,   209,
     210,     0,     0,   211,     0,     0,     0,     0,   212,   213,
       0,     0,     0,     0,   214,   215,     0,   216,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,     0,     0,
       0,   223,     0,     0,   224,   225,   226,     0,     0,     0,
     227,     0,   228,   229,     0,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,   238,   239,   240,     0,
       0,   241,   242,   243,   244,   245,     0,     0,   246,   247,
       0,   248,   249,   250,   251,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,     0,   257,     0,   258,     0,
     259,     0,   260,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,   266,   267,     0,   268,     0,     0,   269,
     270,     0,     0,     0,   271,   272,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,     0,     0,     0,     0,
     279,   280,   281,     0,     0,     0,   282,     0,     0,     0,
     283,   284,     0,   285,   286,     0,     0,     0,     0,   287,
       0,   288,     0,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,     0,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,     0,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,     0,     0,   522,
       0,     0,     0,   145,   146,     0,   147,   148,   149,   150,
     151,     0,     0,   152,   153,     0,     0,     0,   154,  4661,
     848,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,     0,     0,     0,   163,     0,     0,     0,   164,     0,
       0,   165,   166,   167,     0,   168,     0,   169,   170,     0,
       0,   171,     0,     0,   172,   173,     0,   174,   175,   176,
       0,   177,     0,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,     0,   204,     0,     0,   205,
       0,   206,     0,     0,   207,     0,     0,     0,   208,   209,
     210,     0,     0,   211,     0,     0,     0,     0,   212,   213,
       0,     0,     0,     0,   214,   215,     0,   216,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,     0,     0,
       0,   223,     0,     0,   224,   225,   226,     0,     0,     0,
     227,     0,   228,   229,     0,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,   238,   239,   240,     0,
       0,   241,   242,   243,   244,   245,     0,     0,   246,   247,
       0,   248,   249,   250,   251,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,     0,   257,     0,   258,     0,
     259,     0,   260,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,   266,   267,     0,   268,     0,     0,   269,
     270,     0,     0,     0,   271,   272,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,     0,     0,     0,     0,
     279,   280,   281,     0,     0,     0,   282,     0,     0,     0,
     283,   284,     0,   285,   286,     0,     0,     0,     0,   287,
       0,   288,     0,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,     0,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,     0,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,     0,     0,   522,
       0,   145,   146,     0,   147,   148,   149,   150,   151,     0,
       0,   152,   153,     0,     0,     0,   154,     0,     0,   155,
     578,   156,   157,   158,   159,   160,   161,     0,   162,     0,
       0,     0,   163,     0,     0,     0,   164,     0,     0,   165,
     166,   167,     0,   168,     0,   169,   170,     0,     0,   171,
       0,     0,   172,   173,     0,   174,   175,   176,     0,   177,
       0,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,     0,   204,     0,     0,   205,     0,   206,
       0,     0,   207,     0,     0,     0,   208,   209,   210,     0,
       0,   211,     0,     0,     0,     0,   212,   213,     0,     0,
       0,     0,   214,   215,     0,   216,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,     0,     0,     0,   223,
       0,     0,   224,   225,   226,     0,     0,     0,   227,     0,
     228,   229,     0,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,   238,   239,   240,     0,     0,   241,
     242,   243,   678,   245,     0,     0,   246,   247,     0,   248,
     249,   250,   251,   252,     0,     0,   253,   254,     0,     0,
       0,   679,   256,     0,   257,     0,   258,     0,   259,     0,
     260,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,   266,   267,     0,   268,     0,     0,   269,   270,     0,
       0,     0,   271,   272,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,     0,     0,     0,     0,   279,   280,
     281,     0,     0,     0,   282,     0,     0,     0,   283,   284,
       0,   285,   286,     0,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,     0,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,   354,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   680,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,     0,     0,   522,     0,   145,
     146,     0,   147,   148,   149,   150,   151,     0,     0,   152,
     153,     0,     0,     0,   154,     0,     0,   155,   578,   156,
     157,   158,   159,   160,   161,     0,   162,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,   169,   170,     0,     0,   171,     0,     0,
     172,   173,     0,   174,   175,   176,     0,   177,     0,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,   213,     0,     0,     0,     0,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,   223,     0,     0,
     224,   225,   226,     0,     0,     0,   227,     0,   228,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,   240,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,     0,   248,   249,   250,
     251,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,     0,   257,     0,   258,     0,   259,     0,   260,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,   266,
     267,     0,   268,     0,     0,   269,   270,     0,     0,     0,
     271,   272,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,   281,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,     0,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,   354,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,     0,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,   492,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   522,     0,   145,   146,     0,
     147,   148,   149,   150,   151,     0,     0,   152,   153,     0,
       0,     0,   154,     0,     0,   155,   848,   156,   157,   158,
     159,   160,   161,     0,   162,     0,     0,     0,   163,     0,
       0,     0,   164,     0,     0,   165,   166,   167,     0,   168,
       0,   169,   170,     0,     0,   171,     0,     0,   172,   173,
       0,   174,   175,   176,     0,   177,     0,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,     0,
     204,     0,     0,   205,     0,   206,     0,     0,   207,     0,
       0,     0,   208,   209,   210,     0,     0,   211,     0,     0,
       0,     0,   212,   213,     0,     0,     0,     0,   214,   215,
       0,   216,     0,     0,     0,   217,     0,   218,   219,   220,
     221,   222,     0,     0,     0,   223,     0,     0,   224,   225,
     226,     0,     0,     0,   227,     0,   228,   229,     0,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
     238,   239,   240,     0,     0,   241,   242,   243,   244,   245,
       0,     0,   246,   247,     0,   248,   249,   250,   251,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,     0,
     257,     0,   258,     0,   259,     0,   260,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,   266,   267,     0,
     268,     0,     0,   269,   270,     0,     0,     0,   271,   272,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
       0,     0,     0,     0,   279,   280,   281,     0,     0,     0,
     282,     0,     0,     0,   283,   284,     0,   285,   286,     0,
       0,     0,     0,   287,     0,   288,     0,     0,   289,   290,
       0,     0,   291,     0,     0,   292,   293,     0,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,     0,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,   354,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,   361,     0,     0,   362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,   364,   365,
       0,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,     0,   380,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
       0,   417,   418,     0,   419,   420,   421,     0,   422,     0,
       0,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,     0,     0,     0,   437,
     438,   439,   440,     0,     0,     0,   441,     0,     0,     0,
     442,     0,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,   461,   462,   463,   464,   465,     0,     0,   466,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,     0,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,   492,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,   500,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,     0,
       0,     0,     0,   515,   516,   517,     0,   518,   519,   520,
     521,     0,     0,   522,     0,   145,   146,     0,   147,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   155,  2394,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,  1465,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
       0,   287,     0,   288,     0,     0,   289,   290,     0,     0,
     291,     0,     0,   292,   293,   666,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,     0,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
     354,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,   361,     0,     0,   362,     0,     0,     0,     0,
       0,     0,     0,  1466,     0,   363,   364,   365,     0,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,     0,   380,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,   404,     0,   405,   406,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,     0,   417,
     418,     0,   419,   420,   421,     0,   422,     0,     0,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,     0,     0,   441,     0,     0,     0,   442,     0,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
     461,   462,   463,   464,   465,     0,     0,   466,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,   142,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,   492,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,   500,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,     0,     0,     0,     0,     0,
       0,   515,   516,   517,     0,   518,   519,   520,   521,     0,
       0,   522,   145,   146,     0,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,  1467,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   621,   622,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,   623,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   624,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     625,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     626,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   627,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,     0,     0,     0,   437,   438,   628,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   629,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,     0,     0,   522,   145,
     146,     0,   147,   148,   149,   150,   151,     0,     0,   152,
     153,     0,     0,     0,   154,     0,     0,   155,   630,   156,
     157,   158,   159,   160,   161,     0,   162,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,   169,   170,     0,     0,   171,     0,     0,
     172,   173,     0,   174,   175,   176,     0,   177,     0,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,   213,     0,     0,     0,     0,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,   223,     0,     0,
     224,   225,   226,     0,     0,     0,   227,     0,   228,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,   240,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,     0,   248,   249,   250,
     251,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,     0,   257,     0,   258,     0,   259,     0,   260,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,   266,
     267,     0,   268,     0,     0,   269,   270,     0,     0,     0,
     271,   272,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,   281,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,     0,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,   666,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,   354,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,   142,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,   492,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   522,   145,   146,     0,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,   974,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,   666,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,   142,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
       0,     0,   522,   145,   146,     0,   147,   148,   149,   150,
     151,     0,     0,   152,   153,     0,     0,     0,   154,     0,
       0,   155,  1278,   156,   157,   158,   159,   160,   161,     0,
     162,     0,     0,     0,   163,     0,     0,     0,   164,     0,
       0,   165,   166,   167,     0,   168,     0,   169,   170,     0,
       0,   171,     0,     0,   172,   173,     0,   174,   175,   621,
     622,   177,     0,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,     0,   204,     0,     0,   205,
       0,   206,     0,     0,   207,     0,     0,     0,   208,   209,
     210,     0,     0,   211,     0,     0,     0,     0,   212,   213,
       0,     0,     0,   623,   214,   215,     0,   216,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,     0,     0,
       0,   223,     0,     0,   224,   225,   226,     0,     0,     0,
     227,     0,   228,   229,     0,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,   238,   239,   240,     0,
       0,   241,   242,   243,   244,   245,     0,     0,   246,   247,
       0,   248,   249,   250,   251,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,     0,   257,     0,   258,     0,
     259,     0,   260,   261,   262,   263,     0,   624,     0,   265,
       0,     0,     0,   266,   267,     0,   268,     0,     0,   269,
     270,     0,     0,     0,   271,   272,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,     0,     0,     0,     0,
     279,   280,   281,     0,     0,     0,   282,     0,     0,     0,
     283,   284,     0,   285,   286,     0,     0,     0,     0,   287,
       0,   288,     0,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,     0,     0,     0,     0,     0,   294,   295,
       0,   625,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   626,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   628,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,     0,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,     0,     0,   522,
     145,   146,     0,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,   630,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
     666,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,   142,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,     0,     0,   522,   145,   146,     0,
     147,   148,   149,   150,   151,     0,     0,   152,   153,     0,
       0,     0,   154,     0,     0,   155,  1467,   156,   157,   158,
     159,   160,   161,     0,   162,     0,     0,     0,   163,     0,
       0,     0,   164,     0,     0,   165,   166,   167,     0,   168,
       0,   169,   170,     0,     0,   171,     0,     0,   172,   173,
       0,   174,   175,   176,     0,   177,     0,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,  1368,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,     0,
     204,     0,     0,   205,     0,   206,     0,     0,   207,     0,
       0,     0,   208,   209,   210,     0,     0,   211,     0,     0,
       0,     0,   212,   213,     0,     0,     0,     0,   214,   215,
       0,   216,     0,     0,     0,   217,     0,   218,   219,   220,
     221,   222,     0,     0,     0,   223,     0,     0,   224,   225,
     226,     0,     0,     0,   227,     0,   228,   229,     0,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
     238,   239,   240,     0,     0,   241,   242,   243,   244,   245,
       0,     0,   246,   247,     0,   248,   249,   250,   251,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,     0,
     257,     0,   258,     0,   259,     0,   260,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,   266,   267,     0,
     268,     0,     0,   269,   270,     0,     0,     0,   271,   272,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
       0,     0,     0,     0,   279,   280,   281,     0,     0,     0,
     282,     0,     0,     0,   283,   284,     0,   285,   286,     0,
       0,     0,     0,   287,     0,   288,     0,     0,   289,   290,
       0,     0,   291,     0,     0,   292,   293,     0,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,     0,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,   354,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,   361,     0,     0,   362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,   364,   365,
       0,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,     0,   380,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
       0,   417,   418,     0,   419,   420,   421,     0,   422,     0,
       0,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,     0,     0,     0,   437,
     438,   439,   440,     0,     0,     0,   441,     0,     0,     0,
     442,     0,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,   461,   462,   463,   464,   465,     0,     0,   466,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,     0,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,   492,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,   500,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,     0,
       0,     0,     0,   515,   516,   517,     0,   518,   519,   520,
     521,     0,     0,   522,   145,   146,     0,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,  1369,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,     0,
     522,   145,   146,     0,   147,   148,   149,   150,   151,     0,
       0,   152,   153,     0,     0,     0,   154,     0,     0,   155,
    1369,   156,   157,   158,   159,   160,   161,     0,   162,     0,
       0,     0,   163,     0,     0,     0,   164,     0,     0,   165,
     166,   167,     0,   168,     0,   169,   170,     0,     0,   171,
       0,     0,   172,   173,     0,   174,   175,   176,     0,   177,
       0,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,     0,   204,     0,     0,   205,     0,   206,
       0,     0,   207,     0,     0,     0,   208,   209,   210,     0,
       0,   211,     0,     0,     0,     0,   212,   213,     0,     0,
       0,     0,   214,   215,     0,   216,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,     0,     0,     0,   223,
       0,     0,   224,   225,   226,     0,     0,     0,   227,     0,
     228,   229,     0,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,   238,   239,   240,     0,     0,   241,
     242,   243,   244,   245,     0,     0,   246,   247,     0,   248,
     249,   250,   251,   252,     0,     0,   253,   254,     0,     0,
       0,   255,   256,     0,   257,     0,   258,     0,   259,     0,
     260,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,   266,   267,     0,   268,     0,     0,   269,   270,     0,
       0,     0,   271,   272,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,     0,     0,     0,     0,   279,   280,
     281,     0,     0,     0,   282,     0,     0,     0,   283,   284,
       0,   285,   286,     0,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,     0,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,     0,     0,     0,   354,   355,     0,     0,
       0,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,     0,     0,
       0,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,     0,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,   145,   146,   522,   147,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,  3407,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
       0,   287,     0,   288,     0,     0,   289,   290,     0,     0,
     291,     0,     0,   292,   293,     0,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,     0,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
     354,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,   361,     0,     0,   362,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   363,   364,   365,     0,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,     0,   380,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,   404,     0,   405,   406,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,     0,   417,
     418,     0,   419,   420,   421,     0,   422,     0,     0,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,     0,     0,   441,     0,     0,     0,   442,     0,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
     461,   462,   463,   464,   465,     0,     0,   466,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,     0,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,   492,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,   500,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,     0,     0,     0,     0,     0,
       0,   515,   516,   517,     0,   518,   519,   520,   521,     0,
     146,   522,   147,   148,   149,   150,   151,     0,     0,     0,
     153,     0,     0,     0,   154,  3411,     0,     0,     0,   156,
     157,   158,   159,   160,     0,     0,  -403,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,     0,     0,     0,     0,   171,  4208,     0,
     172,   173,     0,   174,   175,     0,     0,     0,     0,   178,
     179,   180,  4209,   182,   183,     0,   184,   185,     0,   186,
     187,     0,   189,     0,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,     0,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,     0,     0,     0,     0,     0,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,     0,     0,     0,
     224,   225,   226,     0,     0,     0,   227,     0,     0,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,     0,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,  4210,   248,   249,   250,
     251,   252,     0,     0,     0,     0,     0,     0,     0,     0,
     256,     0,   257,     0,   258,     0,   259,     0,     0,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,     0,
     267,     0,     0,     0,     0,     0,   270,     0,     0,     0,
     271,   272,   273,   274,  4211,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,     0,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,  4212,     0,     0,     0,   287,     0,   288,     0,     0,
       0,   290,     0,     0,   291,  4213,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,  -358,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,     0,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,  4214,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     364,   365,     0,     0,     0,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,     0,     0,     0,
       0,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,     0,     0,   405,     0,   407,
    -358,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,     0,     0,   417,     0,     0,   419,   420,   421,  4215,
     422,     0,     0,     0,   424,   425,   426,   427,   428,   429,
     430,   431,     0,   433,   434,     0,   435,     0,     0,     0,
       0,   437,   438,   439,     0,     0,     0,     0,   441,     0,
       0,     0,     0,     0,     0,   444,     0,   446,     0,   447,
       0,     0,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,     0,   462,   463,   464,   465,     0,
       0,     0,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,     0,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,     0,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,     0,     0,     0,     0,
     502,     0,     0,   503,     0,     0,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,  -358,     0,     0,     0,   515,   516,     0,     0,   518,
       0,   520,   521,   145,   146,   522,   147,   148,   149,   150,
     151,     0,     0,   152,   153,     0,     0,     0,   154,     0,
    4653,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,     0,     0,     0,   163,     0,     0,     0,   164,     0,
       0,   165,   166,   167,     0,   168,     0,   169,   170,     0,
       0,   171,     0,     0,   172,   173,     0,   174,   175,   176,
       0,   177,     0,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,     0,   204,     0,     0,   205,
       0,   206,     0,     0,   207,     0,     0,     0,   208,   209,
     210,     0,     0,   211,     0,     0,     0,     0,   212,   213,
       0,     0,     0,     0,   214,   215,     0,   216,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,     0,     0,
       0,   223,     0,     0,   224,   225,   226,     0,     0,     0,
     227,     0,   228,   229,     0,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,   238,   239,   240,     0,
       0,   241,   242,   243,   244,   245,     0,     0,   246,   247,
       0,   248,   249,   250,   251,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,     0,   257,     0,   258,     0,
     259,     0,   260,   261,   262,   263,     0,   264,     0,   265,
       0,     0,     0,   266,   267,     0,   268,     0,     0,   269,
     270,     0,     0,     0,   271,   272,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,     0,     0,     0,     0,
     279,   280,   281,     0,     0,     0,   282,     0,     0,     0,
     283,   284,     0,   285,   286,     0,     0,     0,     0,   287,
       0,   288,     0,     0,   289,   290,     0,     0,   291,     0,
       0,   292,   293,     0,     0,     0,     0,     0,   294,   295,
       0,   296,     0,   297,     0,   298,   299,     0,     0,     0,
       0,     0,     0,     0,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,     0,   322,
     323,   324,   325,     0,   326,   327,     0,     0,     0,     0,
     328,   329,   330,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,     0,   347,   348,     0,     0,
     349,   350,   351,   352,   353,     0,     0,     0,   354,   355,
       0,     0,     0,   356,     0,   357,   358,     0,   359,   360,
     361,     0,     0,   362,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   363,   364,   365,     0,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,     0,   380,   381,   382,     0,   383,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,     0,
       0,   392,     0,     0,     0,   393,   394,   395,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,   403,   404,
       0,   405,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,     0,   417,   418,     0,
     419,   420,   421,     0,   422,     0,     0,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,     0,     0,     0,   437,   438,   439,   440,     0,
       0,     0,   441,     0,     0,     0,   442,     0,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,     0,     0,
       0,     0,     0,   452,   453,   454,     0,   455,   456,     0,
     457,     0,     0,   458,     0,   459,     0,   460,   461,   462,
     463,   464,   465,     0,     0,   466,   467,     0,     0,   468,
     469,   470,   471,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   478,   479,     0,     0,   480,   481,   482,   483,
       0,     0,   484,   485,     0,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,     0,     0,     0,   492,
     493,   494,   495,     0,   496,   497,     0,   498,   499,     0,
     500,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,     0,     0,     0,     0,     0,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,     0,   511,
     512,   513,   514,     0,     0,     0,     0,     0,     0,   515,
     516,   517,     0,   518,   519,   520,   521,     0,     0,   522,
       0,     0,     0,     0,     0,   145,   146,  1826,   147,   148,
     149,   150,   151,     0,     0,   152,   153,     0,     0,     0,
     154,     0,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
       0,   287,     0,   288,     0,     0,   289,   290,     0,     0,
     291,     0,     0,   292,   293,     0,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,     0,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
     354,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,   361,     0,     0,   362,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   363,   364,   365,     0,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,     0,   380,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,   404,     0,   405,   406,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,     0,   417,
     418,     0,   419,   420,   421,     0,   422,     0,     0,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,     0,     0,   441,     0,     0,     0,   442,     0,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
     461,   462,   463,   464,   465,     0,     0,   466,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,     0,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,   492,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,   500,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,     0,     0,     0,     0,     0,
       0,   515,   516,   517,     0,   518,   519,   520,   521,     0,
       0,   522,     0,     0,     0,     0,     0,   145,   146,  2008,
     147,   148,   149,   150,   151,     0,     0,   152,   153,     0,
       0,     0,   154,     0,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,     0,     0,     0,   163,     0,
       0,     0,   164,     0,     0,   165,   166,   167,     0,   168,
       0,   169,   170,     0,     0,   171,     0,     0,   172,   173,
       0,   174,   175,   176,     0,   177,     0,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,     0,
     204,     0,     0,   205,     0,   206,     0,     0,   207,     0,
       0,     0,   208,   209,   210,     0,     0,   211,     0,     0,
       0,     0,   212,   213,     0,     0,     0,     0,   214,   215,
       0,   216,     0,     0,     0,   217,     0,   218,   219,   220,
     221,   222,     0,     0,     0,   223,     0,     0,   224,   225,
     226,     0,     0,     0,   227,     0,   228,   229,     0,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
     238,   239,   240,     0,     0,   241,   242,   243,   244,   245,
       0,     0,   246,   247,     0,   248,   249,   250,   251,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,     0,
     257,     0,   258,     0,   259,     0,   260,   261,   262,   263,
       0,   264,     0,   265,     0,     0,     0,   266,   267,     0,
     268,     0,     0,   269,   270,     0,     0,     0,   271,   272,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
       0,     0,     0,     0,   279,   280,   281,     0,     0,     0,
     282,     0,     0,     0,   283,   284,     0,   285,   286,     0,
       0,     0,     0,   287,     0,   288,     0,     0,   289,   290,
       0,     0,   291,     0,     0,   292,   293,     0,     0,     0,
       0,     0,   294,   295,     0,   296,     0,   297,     0,   298,
     299,     0,     0,     0,     0,     0,     0,     0,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,     0,   322,   323,   324,   325,     0,   326,   327,
       0,     0,     0,     0,   328,   329,   330,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,     0,
     347,   348,     0,     0,   349,   350,   351,   352,   353,     0,
       0,     0,   354,   355,     0,     0,     0,   356,     0,   357,
     358,     0,   359,   360,   361,     0,     0,   362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,   364,   365,
       0,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,     0,   380,   381,
     382,     0,   383,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,     0,     0,   392,     0,     0,     0,   393,
     394,   395,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
       0,   417,   418,     0,   419,   420,   421,     0,   422,     0,
       0,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,     0,     0,     0,   437,
     438,   439,   440,     0,     0,     0,   441,     0,     0,     0,
     442,     0,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,     0,     0,     0,     0,     0,   452,   453,   454,
       0,   455,   456,     0,   457,     0,     0,   458,     0,   459,
       0,   460,   461,   462,   463,   464,   465,     0,     0,   466,
     467,     0,     0,   468,   469,   470,   471,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   478,   479,     0,     0,
     480,   481,   482,   483,     0,     0,   484,   485,     0,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
       0,     0,     0,   492,   493,   494,   495,     0,   496,   497,
       0,   498,   499,     0,   500,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,     0,     0,     0,
       0,     0,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,     0,   511,   512,   513,   514,     0,     0,     0,
       0,     0,     0,   515,   516,   517,     0,   518,   519,   520,
     521,     0,     0,   522,     0,     0,     0,     0,     0,   145,
     146,  3161,   147,   148,   149,   150,   151,     0,     0,   152,
     153,     0,     0,     0,   154,     0,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,     0,     0,     0,
     163,     0,     0,     0,   164,     0,     0,   165,   166,   167,
       0,   168,     0,   169,   170,     0,     0,   171,     0,     0,
     172,   173,     0,   174,   175,   176,     0,   177,     0,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,     0,   204,     0,     0,   205,     0,   206,     0,     0,
     207,     0,     0,     0,   208,   209,   210,     0,     0,   211,
       0,     0,     0,     0,   212,   213,     0,     0,     0,     0,
     214,   215,     0,   216,     0,     0,     0,   217,     0,   218,
     219,   220,   221,   222,     0,     0,     0,   223,     0,     0,
     224,   225,   226,     0,     0,     0,   227,     0,   228,   229,
       0,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,   238,   239,   240,     0,     0,   241,   242,   243,
     244,   245,     0,     0,   246,   247,     0,   248,   249,   250,
     251,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,     0,   257,     0,   258,     0,   259,     0,   260,   261,
     262,   263,     0,   264,     0,   265,     0,     0,     0,   266,
     267,     0,   268,     0,     0,   269,   270,     0,     0,     0,
     271,   272,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,     0,     0,     0,     0,   279,   280,   281,     0,
       0,     0,   282,     0,     0,     0,   283,   284,     0,   285,
     286,     0,     0,     0,     0,   287,     0,   288,     0,     0,
     289,   290,     0,     0,   291,     0,     0,   292,   293,     0,
       0,     0,     0,     0,   294,   295,     0,   296,     0,   297,
       0,   298,   299,     0,     0,     0,     0,     0,     0,     0,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,     0,   322,   323,   324,   325,     0,
     326,   327,     0,     0,     0,     0,   328,   329,   330,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,     0,   347,   348,     0,     0,   349,   350,   351,   352,
     353,     0,     0,     0,   354,   355,     0,     0,     0,   356,
       0,   357,   358,     0,   359,   360,   361,     0,     0,   362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   363,
     364,   365,     0,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,     0,
     380,   381,   382,     0,   383,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,     0,     0,   392,     0,     0,
       0,   393,   394,   395,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,   403,   404,     0,   405,   406,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,     0,   417,   418,     0,   419,   420,   421,     0,
     422,     0,     0,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,     0,     0,
       0,   437,   438,   439,   440,     0,     0,     0,   441,     0,
       0,     0,   442,     0,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,     0,     0,     0,     0,     0,   452,
     453,   454,     0,   455,   456,     0,   457,     0,     0,   458,
       0,   459,     0,   460,   461,   462,   463,   464,   465,     0,
       0,   466,   467,     0,     0,   468,   469,   470,   471,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   478,   479,
       0,     0,   480,   481,   482,   483,     0,     0,   484,   485,
       0,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,     0,     0,     0,   492,   493,   494,   495,     0,
     496,   497,     0,   498,   499,     0,   500,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,     0,
       0,     0,     0,     0,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   511,   512,   513,   514,     0,
       0,     0,     0,     0,     0,   515,   516,   517,     0,   518,
     519,   520,   521,     0,     0,   522,     0,     0,     0,     0,
       0,   145,   146,  3860,   147,   148,   149,   150,   151,     0,
       0,   152,   153,     0,     0,     0,   154,     0,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,     0,
       0,     0,   163,     0,     0,     0,   164,     0,     0,   165,
     166,   167,     0,   168,     0,   169,   170,     0,     0,   171,
       0,     0,   172,   173,     0,   174,   175,   176,     0,   177,
       0,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,     0,   204,     0,     0,   205,     0,   206,
       0,     0,   207,     0,     0,     0,   208,   209,   210,     0,
       0,   211,     0,     0,     0,     0,   212,   213,  2249,     0,
       0,     0,   214,   215,     0,   216,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,     0,     0,     0,   223,
       0,     0,   224,   225,   226,     0,     0,     0,   227,     0,
     228,   229,     0,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,   238,   239,   240,     0,     0,   241,
     242,   243,   244,   245,     0,     0,   246,   247,     0,   248,
     249,   250,   251,   252,  2250,     0,   253,   254,     0,     0,
       0,   255,   256,     0,   257,     0,   258,     0,   259,     0,
     260,   261,   262,   263,     0,   264,     0,   265,     0,     0,
       0,   266,   267,     0,   268,  2251,     0,   269,   270,     0,
       0,     0,   271,   272,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,     0,     0,     0,     0,   279,   280,
     281,     0,     0,     0,   282,     0,     0,     0,   283,   284,
       0,   285,   286,     0,     0,     0,     0,   287,     0,   288,
       0,     0,   289,   290,     0,     0,   291,     0,     0,   292,
     293,     0,     0,     0,     0,     0,   294,   295,     0,   296,
       0,   297,     0,   298,   299,     0,     0,  2252,     0,     0,
       0,     0,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,     0,   322,   323,   324,
     325,     0,   326,   327,     0,     0,     0,     0,   328,   329,
     330,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,     0,   347,   348,     0,     0,   349,   350,
     351,   352,   353,  1131,  1132,     0,   354,   355,     0,     0,
    2253,   356,     0,   357,   358,     0,   359,   360,   361,     0,
       0,   362,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   363,   364,   365,     0,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,     0,   380,   381,   382,     0,   383,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,     0,     0,   392,
       0,     0,     0,   393,   394,   395,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,   403,   404,     0,   405,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,     0,   417,   418,     0,   419,   420,
     421,     0,   422,     0,     0,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
       0,     0,     0,   437,   438,   439,   440,     0,     0,     0,
     441,     0,     0,     0,   442,     0,   443,   444,   445,   446,
       0,   447,   448,   449,   450,   451,     0,     0,  4640,   610,
    4641,   452,   453,   454,     0,   455,   456,     0,   457,     0,
       0,   458,     0,   459,     0,   460,   461,   462,   463,   464,
     465,     0,     0,   466,   467,     0,     0,   468,   469,   470,
     471,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     478,   479,     0,     0,   480,   481,   482,   483,     0,     0,
     484,   485,     0,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,     0,     0,     0,   492,   493,   494,
     495,  2254,   496,   497,     0,   498,   499,     0,   500,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,     0,     0,     0,     0,     0,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   511,   512,   513,
     514,     0,     0,     0,     0,     0,     0,   515,   516,   517,
       0,   518,   519,   520,   521,   145,   146,   522,   147,   148,
     149,   150,   151,     0,     0,   152,   153,     0,  1283,  1284,
     154,  1285,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,     0,     0,     0,   163,     0,     0,     0,
     164,     0,     0,   165,   166,   167,     0,   168,     0,   169,
     170,     0,     0,   171,     0,     0,   172,   173,     0,   174,
     175,   176,     0,   177,     0,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,     0,   204,     0,
       0,   205,     0,   206,     0,     0,   207,     0,     0,     0,
     208,   209,   210,     0,     0,   211,     0,     0,     0,     0,
     212,   213,     0,     0,     0,     0,   214,   215,     0,   216,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
       0,     0,     0,   223,     0,     0,   224,   225,   226,     0,
       0,     0,   227,     0,   228,   229,     0,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,   238,   239,
     240,     0,     0,   241,   242,   243,   244,   245,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,     0,   257,     0,
     258,     0,   259,     0,   260,   261,   262,   263,     0,   264,
       0,   265,     0,     0,     0,   266,   267,     0,   268,     0,
       0,   269,   270,     0,     0,     0,   271,   272,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,     0,     0,
       0,     0,   279,   280,   281,     0,     0,     0,   282,     0,
       0,     0,   283,   284,     0,   285,   286,     0,     0,     0,
       0,   287,     0,   288,     0,     0,   289,   290,     0,     0,
     291,     0,     0,   292,   293,     0,     0,     0,     0,     0,
     294,   295,     0,   296,     0,   297,     0,   298,   299,     0,
       0,     0,     0,     0,     0,     0,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
       0,   322,   323,   324,   325,     0,   326,   327,     0,     0,
       0,     0,   328,   329,   330,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,     0,   347,   348,
       0,     0,   349,   350,   351,   352,   353,     0,     0,     0,
     354,   355,     0,     0,     0,   356,     0,   357,   358,     0,
     359,   360,   361,     0,     0,   362,     0,     0,  1286,     0,
       0,  1287,     0,     0,     0,   363,   364,   365,     0,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,     0,   380,   381,   382,     0,
     383,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,     0,     0,   392,     0,     0,     0,   393,   394,   395,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
     403,   404,     0,   405,   406,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,     0,   417,
     418,     0,   419,   420,   421,     0,   422,     0,     0,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,     0,     0,     0,   437,   438,   439,
     440,     0,     0,     0,   441,     0,     0,     0,   442,     0,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,   452,   453,   454,     0,   455,
     456,     0,   457,     0,     0,   458,     0,   459,     0,   460,
     461,   462,   463,   464,   465,     0,     0,   466,   467,     0,
       0,   468,   469,   470,   471,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   478,   479,     0,     0,   480,   481,
     482,   483,     0,   142,   484,   485,     0,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,     0,     0,
       0,   492,   493,   494,   495,     0,   496,   497,     0,   498,
     499,     0,   500,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,     0,     0,     0,     0,     0,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
       0,   511,   512,   513,   514,     0,     0,     0,     0,     0,
       0,   515,   516,   517,     0,   518,   519,   520,   521,  1288,
       0,   522,   145,   146,     0,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,   958,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,   959,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,   960,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,   666,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
     961,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
     142,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,   145,   146,   522,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,   976,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,   977,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,   666,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,   142,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
     145,   146,   522,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,  2117,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,  2118,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,   799,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
    2119,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,   145,   146,   522,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,   958,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,   959,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,   666,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   142,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,   145,   146,
     522,   147,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,   665,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,   666,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,   142,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   667,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,   145,   146,   522,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,   665,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,   666,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
     142,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,   145,   146,   522,   147,
     148,   149,   150,   151,  1531,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,   666,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,   142,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
     145,   146,   522,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,  1042,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,  1043,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,  1044,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,   145,   146,   522,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,  2132,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,   666,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,   142,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,   145,   146,
     522,   147,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,   958,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,   666,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,   142,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,   145,   146,   522,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,   666,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
     142,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,   145,   146,   522,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,  4575,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,  4576,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
     145,   146,   522,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,   610,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,   145,   146,   522,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   735,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,   145,   146,
     522,   147,   148,   149,   150,   151,     0,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,   623,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   982,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,   145,   146,   522,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
     142,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,   145,   146,   522,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,   623,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
     145,   146,   522,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
    2405,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,   145,   146,   522,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,  2864,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,   251,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,   145,   146,
     522,   147,   148,   149,   150,   151,  2872,     0,   152,   153,
       0,     0,     0,   154,     0,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,   169,   170,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,   176,     0,   177,     0,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,   213,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,   223,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,   228,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,   240,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
       0,   257,     0,   258,     0,   259,     0,   260,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,   266,   267,
       0,   268,     0,     0,   269,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,   281,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,   289,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,   354,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,   361,     0,     0,   362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   363,   364,
     365,     0,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,     0,   380,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,   404,     0,   405,   406,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,     0,   417,   418,     0,   419,   420,   421,     0,   422,
       0,     0,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,     0,     0,     0,
     437,   438,   439,   440,     0,     0,     0,   441,     0,     0,
       0,   442,     0,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,   461,   462,   463,   464,   465,     0,     0,
     466,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,   492,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,   500,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,   517,     0,   518,   519,
     520,   521,   145,   146,   522,   147,   148,   149,   150,   151,
       0,     0,   152,   153,     0,     0,     0,   154,     0,     0,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,   169,   170,     0,     0,
     171,     0,     0,   172,   173,     0,   174,   175,   176,     0,
     177,     0,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,   213,     0,
       0,     0,  2901,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
     223,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,   228,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,   240,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,     0,   257,     0,   258,     0,   259,
       0,   260,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,   266,   267,     0,   268,     0,     0,   269,   270,
       0,     0,     0,   271,   272,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,   281,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,     0,     0,     0,     0,   287,     0,
     288,     0,     0,   289,   290,     0,     0,   291,     0,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
       0,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,   354,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,   361,
       0,     0,   362,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   363,   364,   365,     0,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,     0,   380,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,   404,     0,
     405,   406,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,     0,   417,   418,     0,   419,
     420,   421,     0,   422,     0,     0,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,     0,     0,     0,   437,   438,   439,   440,     0,     0,
       0,   441,     0,     0,     0,   442,     0,   443,   444,   445,
     446,     0,   447,   448,   449,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,   461,   462,   463,
     464,   465,     0,     0,   466,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,   492,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,   500,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,     0,     0,     0,     0,   515,   516,
     517,     0,   518,   519,   520,   521,   145,   146,   522,   147,
     148,   149,   150,   151,     0,     0,   152,   153,     0,     0,
       0,   154,     0,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
     169,   170,     0,     0,   171,     0,     0,   172,   173,     0,
     174,   175,   176,     0,   177,     0,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,   213,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,   223,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,   228,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,   240,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,     0,   257,
       0,   258,     0,   259,     0,   260,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,   266,   267,     0,   268,
       0,     0,   269,   270,     0,     0,     0,   271,   272,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,   281,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,     0,     0,
       0,     0,   287,     0,   288,     0,     0,   289,   290,     0,
       0,   291,     0,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,     0,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,   354,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,   361,     0,     0,   362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,   364,   365,     0,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,     0,   380,   381,   382,
    2965,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,   404,     0,   405,   406,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,     0,
     417,   418,     0,   419,   420,   421,     0,   422,     0,     0,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,     0,     0,     0,   437,   438,
     439,   440,     0,     0,     0,   441,     0,     0,     0,   442,
       0,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,   461,   462,   463,   464,   465,     0,     0,   466,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,   492,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,   500,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,     0,     0,
       0,     0,   515,   516,   517,     0,   518,   519,   520,   521,
     145,   146,   522,   147,   148,   149,   150,   151,     0,     0,
     152,   153,     0,     0,     0,   154,     0,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,   169,   170,     0,     0,   171,     0,
       0,   172,   173,     0,   174,   175,   176,     0,   177,     0,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,   213,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,   223,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,   228,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,   240,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,     0,   248,   249,
     250,   251,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,     0,   257,     0,   258,     0,   259,     0,   260,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
     266,   267,     0,   268,     0,     0,   269,   270,     0,     0,
       0,   271,   272,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,   281,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,     0,     0,     0,     0,   287,     0,   288,     0,
       0,   289,   290,     0,     0,   291,     0,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,     0,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,   354,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,   361,     0,     0,
     362,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     363,   364,   365,     0,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
       0,   380,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,   404,     0,   405,   406,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,     0,   417,   418,     0,   419,   420,   421,
       0,   422,     0,     0,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,     0,
       0,     0,   437,   438,   439,   440,     0,     0,     0,   441,
       0,     0,     0,   442,     0,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,   461,   462,   463,   464,   465,
       0,     0,   466,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,   492,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,   500,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,     0,     0,     0,     0,   515,   516,   517,     0,
     518,   519,   520,   521,   145,   146,   522,   147,   148,   149,
     150,   151,     0,     0,   152,   153,     0,     0,     0,   154,
       0,     0,   155,     0,   156,   157,   158,   159,   160,   161,
       0,   162,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,   169,   170,
       0,     0,   171,     0,     0,   172,   173,     0,   174,   175,
     176,     0,   177,     0,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
     213,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,   223,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,   228,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,   240,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,     0,   248,   249,   250,  2065,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,     0,   257,     0,   258,
       0,   259,     0,   260,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,   266,   267,     0,   268,     0,     0,
     269,   270,     0,     0,     0,   271,   272,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,   281,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,     0,     0,     0,     0,
     287,     0,   288,     0,     0,   289,   290,     0,     0,   291,
       0,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,     0,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,  2066,   352,   353,     0,     0,     0,   354,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,   361,     0,     0,   362,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   363,   364,   365,     0,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,     0,   380,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
     404,     0,   405,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,     0,   417,   418,
       0,   419,   420,   421,     0,   422,     0,     0,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,     0,     0,     0,   437,   438,   439,   440,
       0,     0,     0,   441,     0,     0,     0,   442,     0,   443,
     444,   445,   446,     0,   447,   448,   449,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,   461,
     462,   463,   464,   465,     0,     0,   466,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
     492,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,   500,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,     0,     0,     0,     0,
     515,   516,   517,     0,   518,   519,   520,   521,     0,   146,
     522,   147,   148,   149,   150,   151,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,     0,     0,   156,   157,
     158,   159,   160,     0,     0,  -403,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,     0,     0,     0,     0,   171,  4208,     0,   172,
     173,     0,   174,   175,     0,     0,     0,     0,   178,   179,
     180,  4209,   182,   183,     0,   184,   185,     0,   186,   187,
       0,   189,     0,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,     0,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,     0,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,     0,     0,     0,   224,
     225,   226,     0,  -373,  -373,   227,     0,  -373,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,     0,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,  4210,   248,   249,   250,   251,
     252,     0,     0,     0,     0,     0,     0,     0,     0,   256,
       0,   257,     0,   258,     0,   259,     0,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   267,
       0,     0,     0,     0,     0,   270,     0,     0,     0,   271,
     272,   273,   274,  4211,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,     0,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
    4212,     0,     0,     0,   287,     0,   288,     0,     0,     0,
     290,     0,     0,   291,  4213,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,  -358,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,     0,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,  4214,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,     0,     0,     0,     0,     0,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,     0,     0,   405,     0,   407,  -358,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
       0,     0,   417,     0,     0,   419,   420,   421,  4215,   422,
       0,     0,     0,   424,   425,   426,   427,   428,   429,   430,
     431,     0,   433,   434,     0,   435,     0,     0,     0,     0,
     437,   438,   439,     0,     0,     0,     0,   441,     0,     0,
       0,     0,     0,     0,   444,     0,   446,     0,   447,     0,
       0,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,     0,   462,   463,   464,   465,     0,     0,
       0,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,     0,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,     0,     0,     0,     0,   502,
       0,     0,   503,     0,     0,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
    -358,     0,     0,     0,   515,   516,     0,     0,   518,     0,
     520,   521,     0,   146,   522,   147,   148,   149,   150,   151,
       0,     0,     0,   153,     0,     0,     0,   154,     0,     0,
       0,     0,   156,   157,   158,   159,   160,     0,     0,  -403,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,     0,     0,     0,     0,
     171,  4208,     0,   172,   173,     0,   174,   175,     0,     0,
       0,     0,   178,   179,   180,  4209,   182,   183,     0,   184,
     185,     0,   186,   187,     0,   189,     0,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
       0,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,     0,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
       0,     0,     0,   224,   225,   226,     0,  -394,     0,   227,
       0,  -394,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,     0,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,  4210,
     248,   249,   250,   251,   252,     0,     0,     0,     0,     0,
       0,     0,     0,   256,     0,   257,     0,   258,     0,   259,
       0,     0,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,     0,   267,     0,     0,     0,     0,     0,   270,
       0,     0,     0,   271,   272,   273,   274,  4211,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,     0,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,  4212,     0,     0,     0,   287,     0,
     288,     0,     0,     0,   290,     0,     0,   291,  4213,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
    -358,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,     0,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,  4214,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   364,   365,     0,     0,     0,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,     0,
       0,     0,     0,     0,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,     0,     0,
     405,     0,   407,  -358,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,     0,     0,   417,     0,     0,   419,
     420,   421,  4215,   422,     0,     0,     0,   424,   425,   426,
     427,   428,   429,   430,   431,     0,   433,   434,     0,   435,
       0,     0,     0,     0,   437,   438,   439,     0,     0,     0,
       0,   441,     0,     0,     0,     0,     0,     0,   444,     0,
     446,     0,   447,     0,     0,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,     0,   462,   463,
     464,   465,     0,     0,     0,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,     0,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,     0,
       0,     0,     0,   502,     0,     0,   503,     0,     0,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,  -394,     0,  -358,     0,     0,     0,   515,   516,
       0,     0,   518,     0,   520,   521,     0,   146,   522,   147,
     148,   149,   150,   151,     0,     0,     0,   153,     0,     0,
       0,   154,     0,     0,     0,     0,   156,   157,   158,   159,
     160,     0,     0,  -403,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
       0,     0,     0,     0,   171,  4208,     0,   172,   173,     0,
     174,   175,     0,     0,     0,     0,   178,   179,   180,  4209,
     182,   183,     0,   184,   185,     0,   186,   187,     0,   189,
       0,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,     0,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,     0,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,     0,     0,     0,   224,   225,   226,
       0,  -391,     0,   227,     0,  -391,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,     0,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,  4210,   248,   249,   250,   251,   252,     0,
       0,     0,     0,     0,     0,     0,     0,   256,     0,   257,
       0,   258,     0,   259,     0,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   267,     0,     0,
       0,     0,     0,   270,     0,     0,     0,   271,   272,   273,
     274,  4211,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,     0,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,  4212,     0,
       0,     0,   287,     0,   288,     0,     0,     0,   290,     0,
       0,   291,  4213,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,  -358,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,     0,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,  4214,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   364,   365,     0,
       0,     0,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,     0,     0,     0,     0,     0,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,     0,     0,   405,     0,   407,  -358,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,     0,     0,
     417,     0,     0,   419,   420,   421,  4215,   422,     0,     0,
       0,   424,   425,   426,   427,   428,   429,   430,   431,     0,
     433,   434,     0,   435,     0,     0,     0,     0,   437,   438,
     439,     0,     0,     0,     0,   441,     0,     0,     0,     0,
       0,     0,   444,     0,   446,     0,   447,     0,     0,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,     0,   462,   463,   464,   465,     0,     0,     0,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,     0,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,     0,     0,     0,     0,   502,     0,     0,
     503,     0,     0,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,  -391,     0,  -358,     0,
       0,     0,   515,   516,     0,     0,   518,     0,   520,   521,
       0,   146,   522,   147,   148,   149,   150,   151,     0,     0,
       0,   153,     0,     0,     0,   154,     0,     0,     0,     0,
     156,   157,   158,   159,   160,     0,     0,  -403,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,     0,     0,     0,     0,   171,  4208,
       0,   172,   173,     0,   174,   175,     0,     0,     0,     0,
     178,   179,   180,  4209,   182,   183,     0,   184,   185,     0,
     186,   187,     0,   189,     0,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,     0,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,     0,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,     0,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,  4490,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,     0,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,  4210,   248,   249,
     250,   251,   252,     0,     0,     0,     0,     0,     0,     0,
       0,   256,     0,   257,     0,   258,     0,   259,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   267,     0,     0,     0,     0,     0,   270,     0,     0,
       0,   271,   272,   273,   274,  4211,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,     0,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,  4212,     0,     0,     0,   287,     0,   288,     0,
       0,     0,   290,     0,     0,   291,  4213,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,  -358,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,     0,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,  4214,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   364,   365,     0,     0,     0,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,     0,     0,     0,
       0,     0,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,     0,     0,   405,     0,
     407,  -358,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,     0,     0,   417,     0,     0,   419,   420,   421,
    4215,   422,     0,     0,     0,   424,   425,   426,   427,   428,
     429,   430,   431,     0,   433,   434,     0,   435,     0,     0,
       0,     0,   437,   438,   439,     0,     0,     0,     0,   441,
       0,     0,     0,     0,     0,     0,   444,     0,   446,     0,
     447,     0,     0,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,     0,   462,   463,   464,   465,
       0,     0,     0,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,     0,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,     0,     0,     0,
       0,   502,     0,     0,   503,     0,     0,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,  -358,     0,     0,     0,   515,   516,     0,     0,
     518,     0,   520,   521,     0,   146,   522,   147,   148,   149,
     150,   151,     0,     0,     0,   153,     0,     0,     0,   154,
       0,     0,     0,     0,   156,   157,   158,   159,   160,     0,
       0,  -403,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,     0,     0,
       0,     0,   171,  4208,     0,   172,   173,     0,   174,   175,
       0,     0,     0,     0,   178,   179,   180,  4209,   182,   183,
       0,   184,   185,     0,   186,   187,     0,   189,     0,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,     0,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
       0,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,     0,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,  -396,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,     0,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,  4210,   248,   249,   250,   251,   252,     0,     0,     0,
       0,     0,     0,     0,     0,   256,     0,   257,     0,   258,
       0,   259,     0,     0,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,     0,   267,     0,     0,     0,     0,
       0,   270,     0,     0,     0,   271,   272,   273,   274,  4211,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,     0,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,  4212,     0,     0,     0,
     287,     0,   288,     0,     0,     0,   290,     0,     0,   291,
    4213,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,  -358,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,     0,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,  4214,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   364,   365,     0,     0,     0,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,     0,     0,     0,     0,     0,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
       0,     0,   405,     0,   407,  -358,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,     0,     0,   417,     0,
       0,   419,   420,   421,  4215,   422,     0,     0,     0,   424,
     425,   426,   427,   428,   429,   430,   431,     0,   433,   434,
       0,   435,     0,     0,     0,     0,   437,   438,   439,     0,
       0,     0,     0,   441,     0,     0,     0,     0,     0,     0,
     444,     0,   446,     0,   447,     0,     0,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,     0,
     462,   463,   464,   465,     0,     0,     0,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
       0,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,     0,     0,     0,     0,   502,     0,     0,   503,     0,
       0,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,  -358,     0,     0,     0,
     515,   516,     0,     0,   518,     0,   520,   521,     0,   146,
     522,   147,   148,   149,   150,   151,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,     0,     0,   156,   157,
     158,   159,   160,     0,     0,  -403,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,     0,     0,     0,     0,   171,  4208,     0,   172,
     173,     0,   174,   175,     0,     0,     0,     0,   178,   179,
     180,  4209,   182,   183,     0,   184,   185,     0,   186,   187,
       0,   189,     0,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,     0,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,     0,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,     0,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,  4580,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,     0,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,  4210,   248,   249,   250,   251,
     252,     0,     0,     0,     0,     0,     0,     0,     0,   256,
       0,   257,     0,   258,     0,   259,     0,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   267,
       0,     0,     0,     0,     0,   270,     0,     0,     0,   271,
     272,   273,   274,  4211,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,     0,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
    4212,     0,     0,     0,   287,     0,   288,     0,     0,     0,
     290,     0,     0,   291,  4213,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,  -358,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,     0,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,  4214,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,     0,     0,     0,     0,     0,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,     0,     0,   405,     0,   407,  -358,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
       0,     0,   417,     0,     0,   419,   420,   421,  4215,   422,
       0,     0,     0,   424,   425,   426,   427,   428,   429,   430,
     431,     0,   433,   434,     0,   435,     0,     0,     0,     0,
     437,   438,   439,     0,     0,     0,     0,   441,     0,     0,
       0,     0,     0,     0,   444,     0,   446,     0,   447,     0,
       0,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,     0,   462,   463,   464,   465,     0,     0,
       0,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,     0,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,     0,     0,     0,     0,   502,
       0,     0,   503,     0,     0,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
    -358,     0,     0,     0,   515,   516,     0,     0,   518,     0,
     520,   521,     0,   146,   522,   147,   148,   149,   150,   151,
       0,     0,     0,   153,     0,     0,     0,   154,     0,     0,
       0,     0,   156,   157,   158,   159,   160,     0,     0,  -403,
       0,     0,     0,   163,     0,     0,     0,   164,     0,     0,
     165,   166,   167,     0,   168,     0,     0,     0,     0,     0,
     171,  4208,     0,   172,   173,     0,   174,   175,     0,     0,
       0,     0,   178,   179,   180,  4209,   182,   183,     0,   184,
     185,     0,   186,   187,     0,   189,     0,   191,   192,   193,
     194,   195,   196,     0,   197,   198,     0,   199,   200,   201,
       0,   203,     0,     0,     0,   204,     0,     0,   205,     0,
     206,     0,     0,   207,     0,     0,     0,   208,   209,   210,
       0,     0,   211,     0,     0,     0,     0,   212,     0,     0,
       0,     0,     0,   214,   215,     0,   216,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,     0,     0,     0,
       0,     0,     0,   224,   225,   226,     0,     0,     0,   227,
       0,  4613,   229,     0,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,   238,   239,     0,     0,     0,
     241,   242,   243,   244,   245,     0,     0,   246,   247,  4210,
     248,   249,   250,   251,   252,     0,     0,     0,     0,     0,
       0,     0,     0,   256,     0,   257,     0,   258,     0,   259,
       0,     0,   261,   262,   263,     0,   264,     0,   265,     0,
       0,     0,     0,   267,     0,     0,     0,     0,     0,   270,
       0,     0,     0,   271,   272,   273,   274,  4211,     0,   275,
     276,   277,     0,     0,   278,     0,     0,     0,     0,   279,
     280,     0,     0,     0,     0,   282,     0,     0,     0,   283,
     284,     0,   285,   286,  4212,     0,     0,     0,   287,     0,
     288,     0,     0,     0,   290,     0,     0,   291,  4213,     0,
     292,   293,     0,     0,     0,     0,     0,   294,   295,     0,
     296,     0,   297,     0,   298,   299,     0,     0,     0,     0,
    -358,     0,     0,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,     0,   322,   323,
     324,   325,     0,   326,   327,     0,     0,     0,     0,   328,
     329,   330,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,     0,   347,   348,     0,     0,   349,
     350,   351,   352,   353,     0,     0,     0,     0,   355,     0,
       0,     0,   356,     0,   357,   358,     0,   359,   360,  4214,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   364,   365,     0,     0,     0,   368,     0,
     369,   370,   371,   372,   373,   374,   375,   376,   377,     0,
       0,     0,     0,     0,   381,   382,     0,   383,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,     0,     0,
     392,     0,     0,     0,   393,   394,   395,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,   403,     0,     0,
     405,     0,   407,  -358,     0,   408,   409,   410,   411,   412,
     413,   414,   415,     0,     0,     0,   417,     0,     0,   419,
     420,   421,  4215,   422,     0,     0,     0,   424,   425,   426,
     427,   428,   429,   430,   431,     0,   433,   434,     0,   435,
       0,     0,     0,     0,   437,   438,   439,     0,     0,     0,
       0,   441,     0,     0,     0,     0,     0,     0,   444,     0,
     446,     0,   447,     0,     0,   450,   451,     0,     0,     0,
       0,     0,   452,   453,   454,     0,   455,   456,     0,   457,
       0,     0,   458,     0,   459,     0,   460,     0,   462,   463,
     464,   465,     0,     0,     0,   467,     0,     0,   468,   469,
     470,   471,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   478,   479,     0,     0,   480,   481,   482,   483,     0,
       0,   484,   485,     0,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,     0,     0,     0,     0,   493,
     494,   495,     0,   496,   497,     0,   498,   499,     0,     0,
       0,     0,     0,   502,     0,     0,   503,     0,     0,     0,
     505,   506,     0,     0,     0,     0,     0,   507,     0,   508,
       0,     0,   509,     0,     0,     0,   510,     0,   511,   512,
     513,   514,     0,     0,  -358,     0,     0,     0,   515,   516,
       0,     0,   518,     0,   520,   521,     0,   146,   522,   147,
     148,   149,   150,   151,     0,     0,     0,   153,     0,     0,
       0,   154,     0,     0,     0,     0,   156,   157,   158,   159,
     160,     0,     0,  -403,     0,     0,     0,   163,     0,     0,
       0,   164,     0,     0,   165,   166,   167,     0,   168,     0,
       0,     0,     0,     0,   171,  4208,     0,   172,   173,     0,
     174,   175,     0,     0,     0,     0,   178,   179,   180,  4209,
     182,   183,     0,   184,   185,     0,   186,   187,     0,   189,
       0,   191,   192,   193,   194,   195,   196,     0,   197,   198,
       0,   199,   200,   201,     0,   203,     0,     0,     0,   204,
       0,     0,   205,     0,   206,     0,     0,   207,     0,     0,
       0,   208,   209,   210,     0,     0,   211,     0,     0,     0,
       0,   212,     0,     0,     0,     0,     0,   214,   215,     0,
     216,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,     0,     0,     0,     0,     0,     0,   224,   225,   226,
       0,     0,     0,   227,     0,  -377,   229,     0,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,   238,
     239,     0,     0,     0,   241,   242,   243,   244,   245,     0,
       0,   246,   247,  4210,   248,   249,   250,   251,   252,     0,
       0,     0,     0,     0,     0,     0,     0,   256,     0,   257,
       0,   258,     0,   259,     0,     0,   261,   262,   263,     0,
     264,     0,   265,     0,     0,     0,     0,   267,     0,     0,
       0,     0,     0,   270,     0,     0,     0,   271,   272,   273,
     274,  4211,     0,   275,   276,   277,     0,     0,   278,     0,
       0,     0,     0,   279,   280,     0,     0,     0,     0,   282,
       0,     0,     0,   283,   284,     0,   285,   286,  4212,     0,
       0,     0,   287,     0,   288,     0,     0,     0,   290,     0,
       0,   291,  4213,     0,   292,   293,     0,     0,     0,     0,
       0,   294,   295,     0,   296,     0,   297,     0,   298,   299,
       0,     0,     0,     0,  -358,     0,     0,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,     0,   322,   323,   324,   325,     0,   326,   327,     0,
       0,     0,     0,   328,   329,   330,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,     0,   347,
     348,     0,     0,   349,   350,   351,   352,   353,     0,     0,
       0,     0,   355,     0,     0,     0,   356,     0,   357,   358,
       0,   359,   360,  4214,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   364,   365,     0,
       0,     0,   368,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,     0,     0,     0,     0,     0,   381,   382,
       0,   383,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,     0,     0,   392,     0,     0,     0,   393,   394,
     395,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,   403,     0,     0,   405,     0,   407,  -358,     0,   408,
     409,   410,   411,   412,   413,   414,   415,     0,     0,     0,
     417,     0,     0,   419,   420,   421,  4215,   422,     0,     0,
       0,   424,   425,   426,   427,   428,   429,   430,   431,     0,
     433,   434,     0,   435,     0,     0,     0,     0,   437,   438,
     439,     0,     0,     0,     0,   441,     0,     0,     0,     0,
       0,     0,   444,     0,   446,     0,   447,     0,     0,   450,
     451,     0,     0,     0,     0,     0,   452,   453,   454,     0,
     455,   456,     0,   457,     0,     0,   458,     0,   459,     0,
     460,     0,   462,   463,   464,   465,     0,     0,     0,   467,
       0,     0,   468,   469,   470,   471,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   478,   479,     0,     0,   480,
     481,   482,   483,     0,     0,   484,   485,     0,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,     0,
       0,     0,     0,   493,   494,   495,     0,   496,   497,     0,
     498,   499,     0,     0,     0,     0,     0,   502,     0,     0,
     503,     0,     0,     0,   505,   506,     0,     0,     0,     0,
       0,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   511,   512,   513,   514,     0,     0,  -358,     0,
       0,     0,   515,   516,     0,     0,   518,     0,   520,   521,
       0,   146,   522,   147,   148,   149,   150,   151,     0,     0,
       0,   153,     0,     0,     0,   154,     0,     0,     0,     0,
     156,   157,   158,   159,   160,     0,     0,  -403,     0,     0,
       0,   163,     0,     0,     0,   164,     0,     0,   165,   166,
     167,     0,   168,     0,     0,     0,     0,     0,   171,  4208,
       0,   172,   173,     0,   174,   175,     0,     0,     0,     0,
     178,   179,   180,  4209,   182,   183,     0,   184,   185,     0,
     186,   187,     0,   189,     0,   191,   192,   193,   194,   195,
     196,     0,   197,   198,     0,   199,   200,   201,     0,   203,
       0,     0,     0,   204,     0,     0,   205,     0,   206,     0,
       0,   207,     0,     0,     0,   208,   209,   210,     0,     0,
     211,     0,     0,     0,     0,   212,     0,     0,     0,     0,
       0,   214,   215,     0,   216,     0,     0,     0,   217,     0,
     218,   219,   220,   221,   222,     0,     0,     0,     0,     0,
       0,   224,   225,   226,     0,     0,     0,   227,     0,     0,
     229,     0,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,   238,   239,     0,     0,     0,   241,   242,
     243,   244,   245,     0,     0,   246,   247,  4210,   248,   249,
     250,   251,   252,     0,     0,     0,     0,     0,     0,     0,
       0,   256,     0,   257,     0,   258,     0,   259,     0,     0,
     261,   262,   263,     0,   264,     0,   265,     0,     0,     0,
       0,   267,     0,     0,     0,     0,     0,   270,     0,     0,
       0,   271,   272,   273,   274,  4211,     0,   275,   276,   277,
       0,     0,   278,     0,     0,     0,     0,   279,   280,     0,
       0,     0,     0,   282,     0,     0,     0,   283,   284,     0,
     285,   286,  4212,     0,     0,     0,   287,     0,   288,     0,
       0,     0,   290,     0,     0,   291,  4213,     0,   292,   293,
       0,     0,     0,     0,     0,   294,   295,     0,   296,     0,
     297,     0,   298,   299,     0,     0,     0,     0,  -358,     0,
       0,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,     0,   322,   323,   324,   325,
       0,   326,   327,     0,     0,     0,     0,   328,   329,   330,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,     0,   347,   348,     0,     0,   349,   350,   351,
     352,   353,     0,     0,     0,     0,   355,     0,     0,     0,
     356,     0,   357,   358,     0,   359,   360,  4214,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   364,   365,     0,     0,     0,   368,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,     0,     0,     0,
       0,     0,   381,   382,     0,   383,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,     0,     0,   392,     0,
       0,     0,   393,   394,   395,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,   403,     0,     0,   405,     0,
     407,  -358,     0,   408,   409,   410,   411,   412,   413,   414,
     415,     0,     0,     0,   417,     0,     0,   419,   420,   421,
    4215,   422,     0,     0,     0,   424,   425,   426,   427,   428,
     429,   430,   431,     0,   433,   434,     0,   435,     0,     0,
       0,     0,   437,   438,   439,     0,     0,     0,     0,   441,
       0,     0,     0,     0,     0,     0,   444,     0,   446,     0,
     447,     0,     0,   450,   451,     0,     0,     0,     0,     0,
     452,   453,   454,     0,   455,   456,     0,   457,     0,     0,
     458,     0,   459,     0,   460,     0,   462,   463,   464,   465,
       0,     0,     0,   467,     0,     0,   468,   469,   470,   471,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   478,
     479,     0,     0,   480,   481,   482,   483,     0,     0,   484,
     485,     0,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,     0,     0,     0,     0,   493,   494,   495,
       0,   496,   497,     0,   498,   499,     0,     0,     0,     0,
       0,   502,     0,     0,   503,     0,     0,     0,   505,   506,
       0,     0,     0,     0,     0,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,     0,   511,   512,   513,   514,
       0,     0,  -358,     0,     0,     0,   515,   516,     0,     0,
     518,     0,   520,   521,     0,   146,   522,   147,   148,   149,
     150,   151,     0,     0,     0,   153,     0,     0,     0,   154,
       0,     0,     0,     0,   156,   157,   158,   159,   160,     0,
       0,  -403,     0,     0,     0,   163,     0,     0,     0,   164,
       0,     0,   165,   166,   167,     0,   168,     0,     0,     0,
       0,     0,   171,  4208,     0,   172,   173,     0,   174,   175,
       0,     0,     0,     0,   178,   179,   180,  4209,   182,   183,
       0,   184,   185,     0,   186,   187,     0,   189,     0,   191,
     192,   193,   194,   195,   196,     0,   197,   198,     0,   199,
     200,   201,     0,   203,     0,     0,     0,   204,     0,     0,
     205,     0,   206,     0,     0,   207,     0,     0,     0,   208,
     209,   210,     0,     0,   211,     0,     0,     0,     0,   212,
       0,     0,     0,     0,     0,   214,   215,     0,   216,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,     0,
       0,     0,     0,     0,     0,   224,   225,   226,     0,     0,
       0,   227,     0,     0,   229,     0,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,   238,   239,     0,
       0,     0,   241,   242,   243,   244,   245,     0,     0,   246,
     247,  4210,   248,   249,   250,   251,   252,     0,     0,     0,
       0,     0,     0,     0,     0,   256,     0,   257,     0,   258,
       0,   259,     0,     0,   261,   262,   263,     0,   264,     0,
     265,     0,     0,     0,     0,   267,     0,     0,     0,     0,
       0,   270,     0,     0,     0,   271,   272,   273,   274,  4211,
       0,   275,   276,   277,     0,     0,   278,     0,     0,     0,
       0,   279,   280,     0,     0,     0,     0,   282,     0,     0,
       0,   283,   284,     0,   285,   286,  4212,     0,     0,     0,
     287,     0,   288,     0,     0,     0,   290,     0,     0,   291,
    4213,     0,   292,   293,     0,     0,     0,     0,     0,   294,
     295,     0,   296,     0,   297,     0,   298,   299,     0,     0,
       0,     0,  -358,     0,     0,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,     0,
     322,   323,   324,   325,     0,   326,   327,     0,     0,     0,
       0,   328,   329,   330,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,     0,   347,   348,     0,
       0,   349,   350,   351,   352,   353,     0,     0,     0,     0,
     355,     0,     0,     0,   356,     0,   357,   358,     0,   359,
     360,  4214,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   364,   365,     0,     0,     0,
     368,     0,   369,   370,   371,   372,   373,   374,   375,   376,
     377,     0,     0,     0,     0,     0,   381,   382,     0,   383,
       0,   384,   385,   386,   387,   388,     0,   389,   390,   391,
       0,     0,   392,     0,     0,     0,   393,   394,   395,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,   403,
       0,     0,   405,     0,   407,  -358,     0,   408,   409,   410,
     411,   412,   413,   414,   415,     0,     0,     0,   417,     0,
       0,   419,   420,   421,  4215,   422,     0,     0,     0,   424,
     425,   426,   427,   428,   429,   430,   431,     0,   433,   434,
       0,   435,     0,     0,     0,     0,   437,   438,   439,     0,
       0,     0,     0,   441,     0,     0,     0,     0,     0,     0,
     444,     0,   446,     0,   447,     0,     0,   450,   451,     0,
       0,     0,     0,     0,   452,   453,   454,     0,   455,   456,
       0,   457,     0,     0,   458,     0,   459,     0,   460,     0,
     462,   463,   464,   465,     0,     0,     0,   467,     0,     0,
     468,   469,   470,   471,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   478,   479,     0,     0,   480,   481,   482,
     483,     0,     0,   484,   485,     0,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,     0,     0,     0,
       0,   493,   494,   495,     0,   496,   497,     0,   498,   499,
       0,     0,     0,     0,     0,   502,     0,     0,  4493,     0,
       0,     0,   505,   506,     0,     0,     0,     0,     0,   507,
       0,   508,     0,     0,   509,     0,     0,     0,   510,     0,
     511,   512,   513,   514,     0,     0,  -358,     0,     0,     0,
     515,   516,     0,     0,   518,     0,   520,   521,     0,   146,
     522,   147,   148,   149,   150,   151,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,     0,     0,   156,   157,
     158,   159,   160,     0,     0,     0,     0,     0,     0,   163,
       0,     0,     0,   164,     0,     0,   165,   166,   167,     0,
     168,     0,     0,     0,     0,     0,   171,     0,     0,   172,
     173,     0,   174,   175,     0,     0,     0,     0,   178,   179,
     180,     0,   182,   183,     0,   184,   185,     0,   186,   187,
       0,   189,     0,   191,   192,   193,   194,   195,   196,     0,
     197,   198,     0,   199,   200,   201,     0,   203,     0,     0,
       0,   204,     0,     0,   205,     0,   206,     0,     0,   207,
       0,     0,     0,   208,   209,   210,     0,     0,   211,     0,
       0,     0,     0,   212,     0,     0,     0,     0,     0,   214,
     215,     0,   216,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,     0,     0,     0,     0,     0,     0,   224,
     225,   226,     0,     0,     0,   227,     0,     0,   229,     0,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,   238,   239,     0,     0,     0,   241,   242,   243,   244,
     245,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,     0,     0,     0,     0,     0,     0,     0,     0,   256,
       0,   257,     0,   258,     0,   259,     0,     0,   261,   262,
     263,     0,   264,     0,   265,     0,     0,     0,     0,   267,
       0,     0,     0,     0,     0,   270,     0,     0,     0,   271,
     272,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,     0,     0,     0,     0,   279,   280,     0,     0,     0,
       0,   282,     0,     0,     0,   283,   284,     0,   285,   286,
       0,     0,     0,     0,   287,     0,   288,     0,     0,     0,
     290,     0,     0,   291,     0,     0,   292,   293,     0,     0,
       0,     0,     0,   294,   295,     0,   296,     0,   297,     0,
     298,   299,     0,     0,     0,     0,     0,     0,     0,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,     0,   322,   323,   324,   325,     0,   326,
     327,     0,     0,     0,     0,   328,   329,   330,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
       0,   347,   348,     0,     0,   349,   350,   351,   352,   353,
       0,     0,     0,     0,   355,     0,     0,     0,   356,     0,
     357,   358,     0,   359,   360,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   368,     0,   369,   370,   371,   372,
     373,   374,   375,   376,   377,     0,     0,     0,     0,     0,
     381,   382,     0,   383,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,     0,     0,   392,     0,     0,     0,
     393,   394,   395,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,   403,     0,     0,   405,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,     0,
       0,     0,   417,     0,     0,   419,   420,   421,     0,   422,
       0,     0,     0,   424,   425,   426,   427,   428,   429,   430,
     431,     0,   433,   434,     0,   435,     0,     0,     0,     0,
     437,   438,   439,     0,     0,     0,     0,   441,     0,     0,
       0,     0,     0,     0,   444,     0,   446,     0,   447,     0,
       0,   450,   451,     0,     0,     0,     0,     0,   452,   453,
     454,     0,   455,   456,     0,   457,     0,     0,   458,     0,
     459,     0,   460,     0,   462,   463,   464,   465,     0,     0,
       0,   467,     0,     0,   468,   469,   470,   471,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   478,   479,     0,
       0,   480,   481,   482,   483,     0,     0,   484,   485,     0,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,     0,     0,     0,     0,   493,   494,   495,     0,   496,
     497,     0,   498,   499,     0,     0,     0,     0,     0,   502,
       0,     0,   503,     0,     0,     0,   505,   506,     0,     0,
       0,     0,     0,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,     0,   511,   512,   513,   514,     0,     0,
       0,     0,     0,     0,   515,   516,     0,     0,   518,     0,
     520,   521,     0,     0,   522
};

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4051)))

#define yytable_value_is_error(Yytable_value) \
  YYID (0)

static const yytype_int16 yycheck[] =
{
       6,   626,   627,   618,    45,   637,   716,   658,  1081,   619,
    1082,   636,  1474,    19,  1056,  1103,  1436,    23,  1211,  1103,
    1263,  1233,  1368,  1139,  1263,   996,   783,    33,   994,  1806,
     687,   952,  1368,  2085,    40,     6,  1302,    43,  1560,    45,
    2630,   130,    48,  1473,  1747,  1164,  1165,  1018,    20,    55,
    2720,   743,  2486,  1019,  2435,  2505,  1730,  2740,    30,  2210,
      41,  2511,  1666,  2716,  3259,    37,  1086,  2719,  1416,    75,
    2830,  1201,  1423,  2477,  2909,  1466,   712,   713,  1086,  1666,
    1506,  1685,  2842,  2843,  1821,  2036,  2103,  1824,  1581,  2136,
    2137,  1303,  1304,     4,   100,  1307,  1308,  1309,  1310,  1703,
    1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  2311,  2345,
    1668,  1543,  1634,  3044,  1672,   544,    23,  1658,   124,  2319,
     126,   675,  2311,   129,   130,   131,   132,  1685,  2202,  1561,
    2719,   634,  2203,  2351,  2774,  2467,  3420,  1569,  1570,  1697,
    2211,  2467,  1649,  2741,  2742,   855,  1038,  3311,   840,   841,
    1341,   843,  3220,  1169,  1827,   126,    19,    35,   129,    18,
      19,    26,  3394,  3607,   856,  3659,  1670,  1671,    62,  1673,
    1590,  2596,  1676,  1677,  1678,  1679,    26,    21,  1682,     9,
      31,    77,    21,  1687,    22,    73,  2456,  1020,  1692,  1693,
    1694,  1695,  1696,   100,    52,  2303,  1700,  1701,    65,    29,
      18,    19,  1706,  1707,  1708,  1709,    36,  1711,  1712,   197,
    1714,   163,  2264,    18,    19,  1184,  1185,    18,    19,  2285,
      21,    18,    19,   197,    21,   132,   176,    64,   194,   109,
     150,  1658,    21,    48,   153,  1662,  1658,  1664,   150,   137,
    1662,    52,  1664,  2322,  1213,   164,   125,  3007,  3008,    18,
      19,    23,  1774,  1177,  1178,  1179,  1225,  1226,  1227,   916,
      67,  2209,  1803,  1232,  2467,  1189,  3207,   150,    18,    19,
     176,  3046,   167,   294,   130,    78,   328,   156,  2467,   222,
      68,   286,    47,    64,  4201,    37,  2957,   276,   156,    61,
      62,   144,  1629,   131,   160,  1219,    18,    19,  1222,   204,
    3724,   730,    18,    19,    57,   200,    18,    19,   158,   966,
     140,   125,   156,    64,   374,   389,   160,   379,  1242,  1243,
      44,   160,  1246,    74,    18,    19,  3669,   125,   194,   125,
      70,  2068,    12,  4249,  2842,  2843,   434,    26,    89,   279,
    1264,  1265,   156,   439,   258,  1269,  1270,   381,  3354,   317,
     975,  3357,   139,   545,   130,   255,   193,    22,   156,    85,
     985,   125,   128,   231,   197,    18,    19,   263,   494,    70,
    3376,   160,   237,    18,    19,   139,  1803,  3383,    18,    19,
     466,  1803,    23,    18,    19,    23,   317,   237,  3144,   256,
     277,    18,    19,    37,    35,    22,   235,    35,   141,    19,
     573,   111,    18,    19,   194,  2860,  2846,   197,    49,    42,
     544,    49,   235,   434,   434,    18,    19,   604,   197,  4150,
      61,    62,   616,    61,    62,   264,   549,    21,   197,    21,
     368,  4481,   616,   370,    86,   455,  1626,   402,  1628,    18,
      19,   264,   193,  1200,   564,    65,   624,   567,   199,   627,
     539,   216,   103,   105,   220,  4186,    48,  1214,   194,   324,
    1476,   429,  3468,    18,    19,   241,   131,   219,   387,   158,
     249,   665,   666,   274,   324,  1111,  4526,   497,   665,   417,
     430,   197,   666,  3767,   235,   197,   451,    18,    19,   160,
    3246,   625,  2328,   582,    18,    19,   286,  3016,   671,  3007,
    3008,  3141,   389,   599,   131,   294,  2028,   630,   141,    18,
      19,  2015,   449,   264,  4144,    18,    19,    18,    19,  1591,
      81,   371,  2358,  2359,   430,   235,   421,   458,   294,   388,
    3183,   364,   391,   539,   434,   541,   728,   626,   664,  3207,
     638,   630,   631,   483,   512,   192,   333,  3230,   237,   555,
    3974,   557,  3620,  3621,  3622,   561,  3648,  3185,   472,   565,
    4477,  4478,    18,    19,    77,   160,    18,    19,   294,   333,
     388,  1537,   578,   391,  1540,   219,   582,   373,  2100,  1545,
     666,   587,   419,   388,   231,  4501,   391,   388,  1298,   457,
     391,   388,   666,  3936,   391,   601,   637,    18,    19,   276,
     689,   544,   607,   346,   666,   665,   286,   512,    73,   203,
     644,  1368,   664,   471,  1306,    18,    19,   370,  4248,   388,
     626,   602,   391,   644,   630,   631,   725,   726,   634,  1649,
    1601,  1323,   356,  2784,   141,   324,   256,   503,   476,   534,
     646,  1649,  3046,  2846,     5,   434,   434,   636,  3319,   502,
    2070,   402,  2326,   572,    18,    19,  2330,  2846,   664,  2859,
     471,   442,  2862,  2863,   614,    71,   388,  3608,   419,   391,
    3430,  3431,   388,  2347,  2348,   391,   388,  3452,   666,   391,
     632,   687,   371,   689,  3016,   691,  2360,   554,  1345,  3884,
    3016,   194,   666,   588,   388,  2369,   702,   391,   548,  3705,
     666,   707,  4146,   709,  4198,   512,   712,   713,  3714,   160,
    1346,   717,   718,  1142,  3139,   635,   666,  2321,  2322,  2393,
     701,   584,   487,   635,  4008,  4009,   732,   733,   734,   735,
     624,   702,  3738,   584,  1567,   388,  2844,  3743,   391,  3009,
     570,   722,   638,   388,  2285,   584,   391,  2484,   388,   629,
     263,   391,   635,   388,   610,  2187,   391,  2103,   847,  2811,
     666,   388,  2266,  2267,   391,  2831,   596,  2103,   605,   520,
    2311,   576,   388,  1985,   604,   391,   664,   783,  2857,  2283,
    4012,   631,  1802,  1419,  1996,   388,   664,  1999,   391,  2393,
     649,   670,   881,   596,  1802,  3447,  2300,  2301,  3232,  1435,
     707,   666,   670,  1819,   544,   712,   713,  3490,   666,   388,
     669,   476,   391,  3016,  2487,    18,    19,   647,  3886,   657,
    1512,   573,  2013,   638,  3258,  2877,   670,  3016,   735,   727,
     602,   649,   503,   388,   610,  2339,   391,  2785,  2786,   346,
     846,   847,   848,   544,   649,  3300,   852,   936,   649,  1979,
    2354,  4015,   649,  3293,   605,   644,   670,   388,  2285,   548,
     391,  3459,  1487,  2285,   388,   666,  2214,   391,  2080,   875,
     876,   877,   670,   879,   880,   881,  2303,   883,  1847,   388,
     649,  2303,   391,   889,  1541,   388,   537,   388,   391,   895,
     391,  2228,  2229,  2230,  2231,    77,  1788,   666,   904,   649,
      18,    19,   638,   884,  4348,   876,   995,  1831,   503,   880,
     916,   917,   883,  3432,   920,  2456,   659,   660,   661,   662,
    2756,  1890,  3430,  3431,    18,    19,  2467,   649,   489,   573,
     936,   160,   388,   649,   554,   391,   388,   649,   648,   391,
    3608,   852,   631,  2450,   666,   986,   952,  2451,  2452,  2453,
    2454,   957,  3604,   665,  3006,   649,  3584,  2294,   423,   636,
     966,   602,  4246,  3603,   602,    18,    19,   388,   615,  4599,
     391,   665,   666,  2212,  1063,   981,  2679,   666,  1902,    35,
     986,   616,  1906,  1952,   390,   388,   627,   158,   391,   995,
      87,  1080,  2329,  4085,  2331,  4087,   649,   904,  1501,   910,
      12,   672,   176,  2340,   649,  1929,  1509,  4451,  2198,   649,
     917,  1110,   665,   920,   649,    18,    19,    18,    19,  2356,
    3609,   666,   649,   664,   388,   665,  2363,   391,   160,  2456,
    2767,   666,  1038,   649,  2456,  1041,   381,  2374,  2375,  2376,
    2467,    18,    19,  2380,   405,  2467,   649,   405,  3452,   665,
     666,   382,   503,  2790,   293,   237,    65,  1063,   888,   378,
    1066,  1160,   665,   666,    52,   277,   237,    71,    13,  3143,
     649,    18,    19,    25,  1080,   576,  1082,   672,  1632,  2416,
     593,  2418,  2419,    18,    19,  2422,  2423,   666,  3923,  3325,
    3293,  3309,  4023,  1522,   649,  2432,  2433,  3297,  3249,   564,
    3432,    77,  3253,   616,  3293,  1111,  3432,   356,   638,   865,
     665,   666,    18,    19,   402,   127,   231,   658,   649,  2362,
      18,    19,   587,  2362,   665,   649,  2635,    18,    19,   128,
     379,  1038,   474,  1139,   665,   666,   666,  1143,  1144,  1145,
     649,   665,   666,  1900,   231,    22,   649,  1153,   649,  3201,
     657,   658,   659,   660,   661,   662,  1162,   666,   204,    13,
    2202,   165,   665,  1169,  1170,  1171,    18,    19,   538,    11,
     200,   927,   127,  1144,  1145,   200,   239,   389,  3249,  2600,
     405,   198,  3253,   365,   334,   388,   249,  3234,   391,   371,
      18,    19,  3721,   649,  1200,   140,  4202,   649,  4204,   283,
     371,  3218,   572,   122,  1111,    18,    19,   294,  1214,  2175,
     666,  2182,  2886,   665,   666,   573,   168,   456,  3901,  3170,
    2186,   672,  2715,  2189,  2190,    18,    19,  2417,   649,  3432,
    2420,  2421,   494,  1322,  2424,  2425,  2426,  2427,  2428,  2429,
    2430,  2431,   191,  3432,  2434,   666,   649,   256,  3698,   718,
     403,   179,  2589,  2857,   131,  1162,   430,  1263,   440,    18,
      19,   317,   665,   666,   448,    18,    19,    18,    19,   188,
     388,    18,    19,   391,   503,   220,  1282,   565,  2199,  1285,
    1369,   573,    18,    19,   123,   649,   140,   263,   372,  2680,
    2831,    18,    19,   248,   388,   294,   197,   391,   156,   644,
     219,   665,   666,  2391,  2392,  2846,  1998,  2391,  2392,    18,
      19,  2741,  2742,   158,    18,    19,  1322,   235,    18,    19,
      18,    19,  1328,   402,  2536,   167,  1332,  2753,    33,   156,
     672,   394,   429,  2937,  2938,   388,  2768,  1426,   391,  1345,
    1346,   672,   457,   430,  2610,   246,  2103,   666,   573,  2700,
    2937,   535,    59,   375,  2775,    26,  4039,   366,   200,  4194,
      18,    19,  1368,  1369,    18,    19,   548,   616,  3042,    18,
      19,   503,   291,  4025,  1285,    18,    19,   548,  1467,   391,
    2938,  2890,   370,  2019,   401,   388,   390,   388,   391,   288,
     391,   421,   604,  3797,   642,  1484,   421,  2054,   637,  1405,
    3137,  1407,   664,  1409,  2831,  1411,    18,    19,   247,  2831,
     879,   388,   194,  1419,   391,    18,    19,  2844,   600,   277,
    1426,   571,  2844,  2616,  2617,  1332,    18,    19,  2776,  1435,
    2450,   209,   112,    18,    19,   115,  2093,  2094,  3042,  1346,
     614,   388,  2450,   672,   391,   373,   649,   597,  2105,   631,
     277,  3980,   351,   388,  1460,   374,   391,   122,  2795,   122,
     631,  1467,   212,   666,   486,   414,   512,  1473,  3009,   176,
    1476,    18,    19,   180,  3526,  3016,  2719,  2716,  1484,  2609,
    2719,  4676,   388,   471,  3187,   391,   565,   194,   389,  2619,
     388,  3642,  3643,   391,   511,  1501,  4148,   388,  3741,  1410,
     391,  3744,  1409,  1509,   286,   283,  2163,  3957,   258,  3013,
    3014,   664,  1419,  4166,   502,    18,    19,  1523,  1524,  1525,
    1526,  1527,  2147,  1529,    13,  1614,   371,   536,  1435,   258,
      26,   649,  1538,  1539,   658,  1541,   388,   567,  1544,   391,
     586,   665,   567,   272,   249,   554,    77,  1528,   666,  3930,
    3931,   371,  1523,  1524,  1525,   649,  1527,   125,  1564,   408,
     388,   405,  2531,   391,    18,    19,   237,    77,  1539,  1325,
    1326,   276,   666,  1544,  4244,   388,  1582,  1583,   391,   421,
     111,  2342,  3009,   528,   529,  4255,   531,  3009,   533,  3016,
    2559,  2352,     9,   573,  3016,   388,   649,   436,   391,    18,
      19,   216,   665,    18,    19,   550,  3658,  1518,  1614,    18,
      19,   567,  1653,   666,    18,    19,    18,    19,   488,  1526,
    2381,  4055,  1529,    18,    19,   332,   291,   158,   291,   388,
    4390,  4391,   391,  3307,  2971,   388,   645,   388,   391,   389,
     391,   388,    18,    19,   391,   544,   649,   122,   649,   264,
    3324,   140,   388,   324,   494,   391,  3330,  1564,  3262,  3263,
     100,   388,   590,   666,   391,   666,   127,  3532,  2592,    18,
      19,  3536,   649,    13,    18,    19,   595,   245,   606,   388,
     278,   237,   391,   281,   388,   665,   573,   391,   388,   666,
     388,   391,   534,   391,    53,   494,    18,    19,   494,   494,
     371,  2672,   649,   548,   235,    64,    18,    19,   494,   374,
     137,   374,   551,   188,   649,  1626,  3959,  1628,   665,  1630,
    1631,   499,  1633,   430,  1730,   152,  3330,   186,   548,   573,
     388,   666,  1738,   391,   388,  1741,  1742,   391,   443,   388,
      13,   237,   391,   649,   219,   388,   588,    13,   391,   478,
    1661,   649,  3293,   664,   264,    18,    19,   573,   649,   664,
     666,    18,    19,    18,    19,    18,    19,   672,   666,   186,
      18,    19,   216,   573,    74,   666,   388,   664,   636,   391,
      18,    19,  1788,    13,   408,   388,   631,   248,   391,   122,
      18,    19,   323,   197,   362,   130,   388,   649,   238,   391,
     140,  1807,  1808,   388,    18,    19,   391,   108,   267,   636,
     341,   631,   670,  1819,   666,   371,   291,  1823,   258,   593,
     264,   649,   621,   622,   664,     9,    18,    19,   324,   510,
    2734,  1738,   272,   431,   365,  1742,   649,  1808,   666,    18,
      19,   388,   616,   670,   391,  4212,  4213,    31,   664,    18,
      19,    18,    19,   666,   235,   188,   649,   367,   368,   194,
     294,   100,   122,   373,   664,   664,  3074,   140,   664,   664,
    1959,   179,  3218,   666,   140,   197,  2486,   548,   664,   249,
       0,  1788,  3218,   264,  4474,   388,  3589,   636,   391,  3155,
     649,  3432,    26,   193,  1900,  1901,   649,   577,   649,   374,
     580,    32,   649,   273,    18,    19,   241,   666,   416,   419,
     140,   370,   665,   649,   665,  2819,   356,   666,   665,    59,
     221,  2613,   649,    35,   283,   156,   239,   608,   188,   665,
     595,  2020,   595,   541,   388,   235,   249,   391,   665,   125,
     649,   609,    23,    77,  3183,   649,   301,   302,    79,   649,
      62,   649,    19,  1959,    35,  1961,   665,   565,   291,   666,
     631,   665,   148,  4460,   264,   665,  4463,   665,    49,   388,
     160,   652,   391,   388,  2631,   664,   391,    40,  2882,   388,
      61,    62,   391,   672,   388,    48,   388,   391,   160,   391,
     212,   649,   548,   388,   638,   649,   391,   641,  2004,   238,
     649,   187,   367,   368,  2010,  3432,   649,   665,  1097,  1098,
    3432,   665,   388,  2019,  2020,   391,   665,   548,  3257,   258,
     230,   402,   665,   154,  2113,  2031,   757,   758,   481,  3459,
    2036,   291,   167,   272,   565,  2041,   176,   649,   478,   388,
     180,   374,   391,   177,   388,   127,   649,   391,  2054,  1138,
     184,    61,    62,   665,   194,  4552,   672,   649,  3174,   367,
     368,    71,   665,    19,   649,   373,   388,  2073,   584,   391,
    2111,  2077,   185,   665,   141,   631,   388,    19,  3321,   391,
     665,   394,  3321,   230,  3861,  3862,  3863,  2093,  2094,  2095,
    2096,   446,   447,  2004,   395,   605,    13,  2103,   829,  2105,
     567,  3143,   649,   237,   405,  2720,  2867,  2113,   212,  2150,
     550,   412,  2019,   570,   374,  3637,   235,   356,   665,   419,
     595,   212,   457,   616,  2031,   388,   259,   260,   391,  4496,
    4497,   388,  3340,   388,   391,   388,   391,  4368,   391,  4370,
     388,  4372,   135,   391,  2150,  2906,   649,   235,   639,   640,
     388,  2157,  2913,   391,   158,   235,  2917,  2163,   382,   494,
     388,   130,   665,   391,  3372,  3373,  2073,  2792,    77,   231,
    2077,    35,   246,   666,   388,   666,   227,   391,   229,   672,
    2091,  3150,  2188,  3302,  3303,   141,   616,    48,  2095,  2096,
     324,   122,   332,  2199,   125,   649,   388,  2203,    62,   391,
    3537,   665,   666,  2964,  2210,  2211,  2212,  2213,   197,   388,
      12,   665,   391,   502,    77,   516,   246,  3138,   604,   388,
     502,   388,   391,   140,   391,   194,   665,   666,  4280,   669,
     649,   365,   622,   237,   649,   122,   666,   371,   125,   478,
     649,  2152,   672,   665,   666,   649,   665,   649,   112,   158,
     665,   115,   665,   666,   649,   564,   665,   188,   567,   123,
     672,  2350,   595,   665,   665,   666,   672,  3238,  3461,   666,
     665,  3242,   241,   649,   388,   610,    96,   391,  3244,   346,
    2191,  2188,   590,   665,  3205,   416,   122,  2198,   219,   665,
     430,  3484,  3485,   665,   666,   158,   796,  2338,   606,   670,
     649,   188,   664,   220,   613,   649,   108,   438,  2314,   665,
     666,   550,   613,  2319,   664,  3508,   665,   817,   228,  2325,
    2326,   665,  3668,   671,  2330,   127,  2332,   649,   237,   664,
     830,   831,   219,    18,    19,   595,  2342,   649,   228,  2345,
    4392,  2347,  2348,  2315,  2350,  2351,  2352,   160,   479,   613,
    2261,  2357,   188,   665,  2360,  2327,  2362,   672,  2269,  2055,
     291,  2333,  2058,  2369,  2370,  2061,  3609,   371,  2279,  2280,
    3609,    61,    62,  2379,   237,  2381,  2465,   611,  3724,  2290,
    2291,  2292,  2293,   385,  2295,  2296,   649,  2393,  2394,  2361,
     346,   171,   649,  2365,   649,   534,   649,   261,   200,  2371,
    2372,   649,   665,   664,   291,  2411,   665,   666,   665,   540,
     665,   649,   665,     7,   548,   193,  2505,   665,   457,  3491,
      12,   649,  2511,  2334,  2335,  2336,  2337,   665,  3765,   122,
     665,   666,    21,   665,   666,   649,   672,   665,   505,   506,
     666,   243,     7,   374,   664,   652,   653,   664,   655,   482,
     657,   665,   664,  2364,   672,   291,   365,   649,   130,  2465,
     664,  3218,   371,  2370,  3580,  3581,  3582,   664,  3556,   664,
     649,  3555,   573,   665,   379,  2481,  2482,  2483,    26,  2485,
     649,   664,   649,   664,   665,   287,   665,   374,   457,   122,
     665,   666,   125,    58,   358,   188,   665,   631,   665,  2505,
     665,   666,   365,    26,   664,  2511,  2417,   664,   371,  2420,
    2421,   100,   664,  2424,  2425,  2426,  2427,  2428,  2429,  2430,
    2431,   602,   194,  2434,   616,   494,   664,  3496,   664,    77,
     672,   440,   565,   517,   227,   649,   229,   570,   374,   664,
     122,  2630,   623,   624,   548,    50,  3203,   301,   302,   505,
     506,   665,   288,   141,    77,   188,  3803,  3804,  3805,  3752,
     665,   666,   664,  3220,   664,  3607,   664,   156,   664,   241,
     664,   160,   665,   666,  2481,  2482,  2483,   440,   664,   144,
     613,   664,  3551,    50,   108,   664,   219,   664,   655,   656,
     657,   658,   659,   660,   661,   662,   629,   665,   291,   665,
     666,    13,  3067,   192,   664,   194,   188,  3072,   665,   666,
     158,   528,   529,   530,   531,   532,   533,   120,   664,   421,
    2626,   664,  3232,   212,  2630,  2631,   664,   631,   217,   177,
     664,    43,   664,   550,    48,   158,   184,   219,   664,   548,
     664,   610,   231,   167,  2650,  2734,   510,   664,  3258,   238,
    2656,  2657,   664,  2659,   177,   664,    77,   246,   291,   665,
     666,   184,   666,  3634,   595,   665,   666,   122,  2674,   258,
     125,   666,    93,  3920,  3921,   277,   200,   664,  3925,  3926,
    2686,   374,    94,   272,  4188,   548,    98,   141,   277,   237,
     664,   600,   446,   447,   664,   664,    37,   286,   500,   655,
     656,   657,   658,   659,   660,   661,   662,   664,   595,   291,
    2716,   665,   666,  2719,   237,  4177,   580,  4054,   665,   666,
      74,   664,   631,   226,   494,  2731,  2732,  2733,  2734,  2818,
    2819,   664,   502,   188,   664,  2741,  2742,   600,   665,   666,
    2657,   374,  2659,   664,   608,   664,   494,   488,   210,  2656,
    2657,   664,  2659,   664,   502,   160,   161,   666,   346,   595,
      80,   664,    82,   565,   219,   567,   664,   356,   631,    64,
     664,   525,   526,   527,   115,   664,   324,   197,  2784,    74,
     664,   122,   664,  4287,   664,   457,  4290,  4291,  4292,  4293,
     379,   664,   374,  2882,    89,   664,   201,   665,   666,   664,
     389,   324,   664,   368,   664,   125,   665,   666,   664,   214,
     664,   613,  2818,  2819,  2731,  2732,  2733,   365,  3890,  3891,
     664,  3893,   494,   371,  2731,  2732,  2733,   664,   148,   141,
     665,   666,   421,   336,   665,   666,   291,   340,   179,   193,
     100,   253,   365,   664,   347,   266,   664,   188,   371,   254,
     108,   621,   622,  2859,  4066,   664,  2862,  2863,  4278,   321,
     322,  2867,    71,   268,   326,   327,    33,   187,   433,   664,
     435,  3336,   100,   621,   622,   664,  2882,   664,   219,  3951,
    2886,   235,   665,   666,  4388,  4389,   274,  2798,  2799,   478,
     295,  3963,   346,  4397,   664,    18,    19,   421,   193,   664,
    2906,   664,   595,  2814,   199,   664,  3371,  2913,   664,   167,
     264,  2917,  4374,   502,  3379,   664,   664,   505,   506,   374,
      21,   333,  3387,   344,    37,   428,   666,  4166,   665,   666,
    4151,  4152,   665,   666,  4271,  4272,  4273,  4274,   610,   666,
     235,   523,   200,   166,  2950,   665,   666,  2953,   664,   370,
     291,   194,  2958,   665,   666,   360,   665,   666,  2964,   665,
     666,   550,   595,  3620,  3621,  3622,   665,   666,   544,   264,
    4307,   564,  2883,   166,   141,  4196,  4197,   235,   238,   665,
     666,   665,   666,   544,  2895,   397,   288,  2993,   157,   492,
    2996,   666,   664,   116,   117,   118,   119,   120,   258,   100,
     548,    88,   115,   666,  4076,   194,  4078,  4079,   666,   122,
     238,   432,   272,   595,   380,   604,   357,   560,  3342,   647,
    3070,  3345,  3346,   665,  3030,   548,   615,   616,   369,   287,
     258,   156,   373,   374,   346,  3041,  3042,   638,  4259,  3363,
     665,   666,  4263,   567,   272,   665,  2953,   636,   402,   638,
     665,   505,   506,   665,   666,   156,   321,   322,    48,   160,
     160,   326,   327,   160,   588,   419,   179,   655,   656,   657,
     658,   659,   660,   661,   662,   188,   665,   666,   665,   666,
     669,   670,   249,   631,   665,   666,   665,   666,  2999,   613,
    3692,  3693,   160,   194,  3005,   160,   356,   665,   666,   160,
     223,   224,   225,   226,  4146,   629,   219,   519,   631,   276,
    3712,   212,   160,   534,   665,   666,   217,  3719,   666,   379,
     666,   441,    27,   160,   419,    77,   665,   666,   356,   405,
     633,  4203,  3138,   125,  3041,   665,   666,   238,   111,  3145,
     595,    93,   317,  3745,     7,   246,  3748,   664,   651,   561,
     110,   379,   665,   666,   665,   666,     4,   258,   416,   665,
     666,   150,   151,   421,  3170,   493,    71,   249,  3174,   629,
      75,   272,    77,   665,   666,   666,   277,  3183,   291,   346,
    3186,    57,   134,  2391,  2392,   286,  1250,  1251,   449,  4160,
     141,  4390,  4391,   505,   506,   171,  3202,  3203,   111,  3205,
     367,   368,   656,   657,   658,   659,   660,   661,   662,  4061,
    4062,   402,  3218,   336,  3220,   338,   339,   340,   478,   200,
     125,    71,    13,   665,   347,   520,   635,    10,   140,  3886,
     666,   672,   573,   665,   665,   665,   577,   503,   672,   580,
     664,   276,   500,  3249,   357,   672,   671,  3253,   666,   590,
     478,  3257,   158,    50,   595,   356,   288,   598,   288,   288,
     373,   374,   288,    35,   288,   388,   288,   666,   391,   666,
     160,   420,   482,   564,   386,    21,   443,  4340,   379,  3186,
     379,    27,   666,   379,  3334,  3335,   283,   666,   389,   403,
     550,  3297,  3342,   666,   584,  3345,  3346,  4509,   249,   666,
     584,  3307,    13,  3309,   666,   428,  4348,   565,   160,   379,
     605,   573,   570,  3363,   266,  3321,   657,   658,  3324,  3325,
     421,  3327,   550,   379,  3330,    71,   666,  3377,   636,    75,
     588,    77,   610,  3383,  3384,  3385,  3386,   664,   505,   506,
     249,   255,   434,   672,   666,   657,   658,   659,   660,   661,
     662,   518,   249,   672,   672,   613,   659,   141,   252,   264,
     562,   133,   181,  3274,   194,   666,    60,   515,   491,   492,
     502,   629,   666,   406,   194,  4587,   573,   478,   573,   125,
     160,   573,   126,   573,    87,   136,   158,   264,    74,  3395,
     162,   136,   344,  3399,   402,   346,   402,  3403,   402,   584,
     262,   502,   262,   402,   136,    48,   402,   402,  4651,  4451,
     404,   402,  4651,   620,  3420,   367,   368,   402,   370,   402,
    3327,  4484,  4665,  3429,  3395,   666,  4665,  4670,   666,   379,
     202,  4670,  4675,   620,   666,   664,  4675,  3443,   665,  3445,
     666,   160,   160,   160,   160,  4055,   160,   160,   160,   550,
     222,   160,  3458,  3459,   160,   160,   160,   203,   160,   160,
     573,   160,   367,   368,   577,   249,   666,   580,   373,   160,
     160,   160,   160,   160,   379,   160,   160,   590,   160,   160,
     432,   160,   595,   160,   160,   598,   160,   160,   655,   656,
     657,   658,   659,   660,   661,   662,   611,   643,   615,   664,
     379,     7,   664,   604,   379,   379,    12,   665,    14,  4572,
     633,  4574,   672,   665,   419,   616,   288,   197,   264,   666,
     665,    27,    28,   665,   665,   665,   649,   650,   651,  4592,
    3441,   665,   665,   604,   665,   636,  3443,   638,  3445,  4249,
    4172,   236,   666,   664,   657,   658,   557,  4619,   658,   665,
     573,    35,    58,   664,   505,   506,   665,    63,  4621,  4622,
    4633,   665,   346,   665,   665,   666,   573,   665,   669,   670,
    3576,    77,   666,  3579,  3580,  3581,  3582,    83,    84,   590,
     666,    87,   534,   666,   665,   665,   597,  4238,   665,  3595,
      96,   665,   664,   498,   459,   460,   461,   462,   463,   464,
     465,   664,   662,  3609,  3610,   111,   665,   573,   666,  3698,
     564,   666,   384,   666,  3620,  3621,  3622,   664,   664,   125,
     556,   367,   368,   129,    12,   666,   108,   373,   666,  4244,
     212,   137,  3721,   379,   504,   573,  3642,  3643,   144,   434,
    4255,   197,  3648,   548,   665,   258,   152,   429,   420,   133,
     258,   392,   158,   666,  3695,   573,   174,   429,  3664,   558,
     559,   560,   337,  4295,   563,   564,   160,  3673,   567,   568,
     569,   407,   444,   419,   158,   534,   354,  3683,   162,   534,
     534,   534,   493,   534,   264,   264,   192,   452,   672,   404,
     664,   287,  3698,   664,   664,   664,   664,   469,   474,   664,
     605,   664,   659,  3675,   655,   656,   657,   658,   659,   660,
     661,   662,   665,   154,   245,  3721,   665,   199,   202,   389,
     245,   505,   506,   665,   672,   665,   665,   672,   665,   235,
     665,   665,   743,   160,   160,   666,   242,   748,   222,   584,
     666,   513,   644,  3749,   283,   665,    48,   664,   664,   160,
     584,   160,   498,   235,   664,   210,   664,   263,   197,    73,
     186,  3767,    48,  3769,  3770,   217,  3673,   343,   779,   664,
     374,  4481,   544,    56,   665,   201,   379,   258,  3784,   258,
     286,   160,   111,    66,   795,   111,   664,   264,   214,   264,
     565,  4501,   564,    76,   666,   567,   638,  3803,  3804,  3805,
     666,   565,   548,   584,   288,   287,   664,    90,    91,    92,
     666,   584,  3723,   385,    56,   664,  4526,   323,   665,   665,
     212,   379,   666,   106,    66,   517,   379,   402,   277,   840,
     841,   664,   843,   844,    76,   341,   664,   664,    48,   345,
     247,   267,   268,  4361,   247,   856,  3757,   665,    90,    91,
      92,   665,   665,   665,   496,   664,   666,   672,   666,   605,
     665,  3772,   665,   665,   106,   665,   665,  3873,  3957,   295,
    3781,   655,   656,   657,   658,   659,   660,   661,   662,   672,
    3886,   379,   231,   389,   584,   664,   584,   584,   665,   278,
     396,  3980,   666,   402,   672,   666,   665,   386,   666,   405,
     384,  4419,   197,   197,   197,   279,   258,   258,   664,   120,
     664,   125,   125,   567,  3920,  3921,  4434,  4627,   415,  3925,
    3926,   664,   664,   672,   417,  4557,   379,    77,   379,    21,
     665,   664,  4450,   672,   517,   489,   420,   665,   364,   666,
     665,   952,   494,  4653,   664,   429,   452,   274,   476,   374,
     286,  3957,    12,   964,   664,   638,   664,   147,   665,   270,
     444,   434,   197,    48,    48,   153,    48,   616,   616,   665,
     194,    35,   665,   320,  3980,   627,    35,   988,   484,   610,
     627,   125,   264,   203,   264,   469,   373,   886,   659,    35,
     374,    81,   418,   665,  4000,   512,   665,   664,   666,   665,
     664,   664,  4008,  4009,   664,   143,   665,   664,   664,   194,
      21,   666,   665,  4019,   664,   666,  4534,   266,   500,   665,
     665,   665,   343,   429,   665,   665,  4544,   665,   665,   513,
     665,  4549,   665,   175,   666,   541,   542,   543,   520,   665,
     286,   666,   548,   210,   246,   264,   664,    48,  4673,   672,
      48,    48,   335,   421,   664,   664,   379,   664,   664,   565,
     544,   369,   568,   664,   246,   622,    15,    21,   666,   352,
     474,   149,   343,   374,   173,   665,  4594,   386,  4596,  4085,
     610,  4087,   567,   565,   621,   567,  4092,  4093,   570,   638,
     664,  4609,  4098,   335,    16,   246,    48,    48,   604,   374,
     664,   664,   539,   664,  4110,   611,  1117,   666,   485,   638,
     352,   555,   442,   155,   665,   665,   635,   665,   665,  4637,
    4638,   664,    32,   605,  4642,   665,   399,   665,   673,   665,
     494,   613,   638,   665,   386,   641,   136,   575,   664,   158,
     136,   374,     6,   379,   665,   379,   197,   635,    32,   665,
      64,    64,   665,   143,   386,   134,   664,   556,   665,   130,
    4166,  4167,  1173,  1174,  4170,   666,   246,   610,   154,   386,
     670,  1182,  1183,  1184,  1185,  1186,  1187,  1188,   386,   635,
     154,   664,   230,   293,  1195,  1196,   673,  1198,  1199,   124,
     473,   264,  1203,  1204,   670,   264,  1207,  1208,  1209,  1210,
     373,  1212,  1213,  4209,    54,   576,   143,   490,  4214,  1220,
    1221,   670,  1223,  1224,  1225,  1226,  1227,   483,   666,  1230,
    1231,  1232,  1233,  1234,  1235,  1236,  1237,  1238,  1239,   154,
    1241,   576,   666,  1244,  1245,    14,   666,   215,  1249,   670,
    4246,   228,  1253,  1254,  1255,   665,    54,   154,   490,    13,
      14,   194,   194,   194,    48,  1266,  1267,  1268,   576,   456,
    4167,   637,   125,   231,   664,   374,  1277,   196,   666,   552,
    4219,  1282,   502,  2637,  2445,  4364,  4187,  1288,  2439,  1290,
    1291,  3769,  2441,  3772,  3765,  2443,   569,  2436,  2841,  3776,
     726,  1302,  1303,  1304,  4247,  1306,  1307,  1308,  1309,  1310,
    3782,  1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  4138,
     552,  2808,  1323,  4445,  3793,  4446,  1327,  3784,  4018,  4653,
      99,  4617,    48,   638,  1094,  2102,  4332,   569,  2041,  3170,
    4129,  4623,  4531,  4412,  4129,    99,  4129,  4129,  4129,  4497,
    4531,  4438,  4437,  4129,  4129,  4129,  4129,  4129,  1136,  4129,
    1664,   130,  4129,  4147,  4129,  1723,  2935,  3872,  4364,  3197,
    3595,  1423,  4384,  4066,  4458,   144,   130,  3202,  4587,  3875,
    4517,  4557,  4295,  1802,   548,  3797,  1719,  3028,  4384,  3330,
     144,  3042,  1730,  2396,  3307,  4474,  3319,  4393,   167,  4526,
    3354,   170,  4205,  3354,    27,    28,  3388,  3949,  3732,  4457,
    2818,  3124,  3533,   167,   183,  3528,   170,  3536,    11,    11,
    2479,  4185,  1815,  4259,  4263,  4098,  4457,  3963,  4196,   183,
    4190,  3027,  2237,  2468,  4197,  2232,  4515,  2392,    61,    62,
      63,   210,  2392,  3935,   557,  1573,  2391,   643,    71,   648,
    1577,  3308,  3680,  2714,    77,  1798,   210,  2095,  3186,  1742,
      83,    84,  2679,  3590,    87,  1464,   235,  2598,   659,  1282,
     940,  1472,   241,   953,  2004,  2512,  1214,   590,  4474,  2624,
    2213,   235,  2625,  2597,   597,  1582,  4387,   241,   111,  4092,
    3653,   116,   117,   118,   119,   120,  3265,  3403,  4093,  3849,
    2620,  1502,   125,  3650,  3539,  1506,   129,  3321,  4269,  4476,
    2113,  1512,  4083,  4083,   735,   898,  3616,   286,  1519,  4515,
    1081,  1333,  1081,  3583,  1081,  3257,    54,  2673,   556,  2673,
    1532,  1081,   286,  2183,  1189,   158,   637,  1558,  2184,  1572,
    4536,  2030,  1439,  3327,  3593,  3627,  4585,  4543,  4604,  4675,
    3897,  4670,  3609,  3724,   984,  2150,  1170,    45,  1278,    45,
    1509,  1494,  1496,   982,  4465,  4466,  2077,  2106,   930,  1455,
    2227,  2063,  1066,  3576,  4275,   932,   616,  3143,   545,   545,
    4239,  4241,  4661,   726,   726,    -1,    -1,   726,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4593,   223,   224,
     225,   226,  4598,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,
      -1,  4522,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4627,    -1,    -1,    -1,   748,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   422,    -1,  4651,    -1,  4653,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4661,   779,    -1,   422,  4665,
      -1,    -1,   426,   442,  4670,    -1,    -1,    -1,    -1,  4675,
      -1,   450,   795,    -1,    -1,    -1,    -1,    -1,   442,   458,
      -1,    -1,    -1,    -1,    -1,    -1,   450,    -1,    -1,    -1,
     323,    -1,    -1,    -1,   458,    -1,    -1,    -1,    -1,    -1,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,   341,    -1,
      -1,    -1,   347,    -1,    -1,   494,    -1,    -1,    -1,    -1,
      -1,   844,    -1,    -1,    -1,    -1,    -1,    -1,   507,   508,
     494,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   507,   508,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   396,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   405,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     559,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   428,    -1,   559,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1833,    -1,   588,    -1,  1837,    14,    -1,   952,
      17,   610,    -1,   612,    -1,    -1,  1847,    -1,  1849,    -1,
      -1,   964,    -1,    -1,    -1,    32,   610,    -1,   612,    36,
      -1,   484,    -1,    -1,    -1,    -1,   491,   492,    -1,    -1,
      -1,    -1,    -1,    50,    51,   988,    -1,    -1,    -1,    -1,
      -1,    58,    -1,    -1,    -1,    -1,    63,    64,    -1,  1890,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   541,   542,
     543,    -1,    99,    -1,    -1,   548,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1935,  1936,  1937,    -1,    -1,    -1,
      -1,    -1,   565,    -1,   121,   568,    -1,    -1,    -1,    -1,
      -1,  1952,  4129,   130,   131,   132,    -1,    -1,    -1,  1960,
      -1,    -1,    -1,    -1,    -1,    -1,   143,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1979,   156,
      -1,   604,    -1,    -1,  1985,    -1,    -1,  1988,    -1,  1990,
      -1,    -1,    -1,   170,    -1,  1996,    -1,  1998,  1999,    -1,
      -1,    -1,    -1,    -1,  1117,    -1,    -1,    -1,   633,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   650,   651,    -1,    -1,    -1,
      -1,   208,    -1,   210,    -1,  4212,  4213,    -1,   215,    -1,
      -1,   218,    -1,   666,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1173,  1174,    -1,    -1,   241,    13,    14,   244,    -1,  1182,
    1183,    -1,    -1,  1186,  1187,  1188,    -1,    -1,    -1,  2080,
      -1,    -1,  1195,  1196,    -1,  1198,  1199,    -1,   265,  2090,
    1203,    -1,    -1,    -1,  1207,  1208,  1209,  1210,    -1,  1212,
      -1,    -1,    -1,    -1,    -1,   282,    -1,  1220,  1221,   286,
    1223,  1224,    -1,    -1,    -1,    -1,    -1,  1230,  1231,    -1,
      -1,  1234,  1235,  1236,  1237,  1238,  1239,  2128,  1241,    -1,
      -1,  1244,  1245,    -1,    -1,    -1,  1249,    -1,    -1,    -1,
    1253,  1254,  1255,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,  1266,  1267,  1268,    -1,    -1,    -1,    -1,
      -1,    -1,  4339,  4340,  1277,    -1,    -1,    -1,    -1,  1282,
      -1,    -1,    -1,    -1,    -1,  1288,    -1,  1290,  1291,    -1,
      -1,    -1,   130,    -1,  4361,    -1,    -1,    -1,    -1,    -1,
      -1,  2192,    -1,    -1,    -1,    -1,   144,    -1,  2199,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1327,    -1,    -1,    -1,    -1,   167,
      -1,    -1,   170,   400,    -1,   402,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   183,    -1,    -1,    -1,   416,
      -1,    -1,  4419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,    -1,    -1,  4434,    -1,    -1,
      -1,    -1,   210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   449,  4450,    -1,   452,    -1,   454,    -1,    -1,
     457,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,
     467,   468,    -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,    -1,  4484,    -1,    -1,
      -1,   488,    -1,    -1,    -1,    -1,    -1,   494,    -1,  4496,
    4497,    -1,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
     507,   508,   509,    -1,    -1,    -1,    -1,    -1,   286,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4534,    -1,  1472,
      -1,    -1,    -1,   540,    -1,    -1,    -1,  4544,    -1,    -1,
     547,    -1,  4549,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1502,
      -1,    -1,    -1,  1506,    -1,  4572,    -1,  4574,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1519,    -1,    -1,    -1,
      -1,    -1,    -1,  2414,   591,  4592,    -1,  4594,    -1,  4596,
      -1,    -1,    -1,    -1,    -1,    -1,   603,    -1,    -1,    -1,
     607,    -1,  4609,   610,    -1,    -1,    -1,    -1,   615,    -1,
      -1,    -1,    -1,    -1,  4621,  4622,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4637,  4638,    -1,    -1,    -1,  4642,    -1,    -1,    -1,   646,
      -1,    -1,    -1,    -1,   422,    -1,    -1,    -1,   426,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   664,    -1,    -1,
    2491,    -1,    -1,    -1,   442,    -1,    -1,    -1,    -1,  2500,
    2501,    -1,   450,    -1,    -1,    -1,  2507,    -1,    -1,  2510,
     458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2523,  2524,    -1,  2526,    -1,    -1,  2529,  2530,
    2531,  2532,  2533,    -1,    -1,  2536,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2545,    -1,   494,    -1,    -1,    -1,
    2551,    -1,  2553,    -1,  2555,  2556,    -1,  2558,  2559,   507,
     508,    -1,  2563,  2564,  2565,    -1,    -1,    -1,  2569,  2570,
    2571,    -1,  2573,    -1,  2575,    -1,  2577,    -1,  2579,    -1,
    2581,    -1,    -1,    -1,    -1,  2586,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      14,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,  2610,
      -1,   559,  2613,    -1,    -1,    -1,    -1,    -1,  2619,    -1,
      -1,    -1,    36,  2624,  2625,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    -1,
     588,    -1,    27,    28,    58,    -1,    -1,    -1,    -1,    63,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   610,    -1,   612,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    61,    62,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    71,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,   121,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   130,   131,   132,    -1,
    1833,    -1,    -1,    -1,  1837,    -1,   111,    -1,    -1,   143,
     144,    -1,    -1,    -1,    -1,    -1,  1849,    -1,    -1,  2740,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2753,    -1,    -1,    -1,   170,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,   210,    -1,    -1,    -1,
      -1,   215,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1935,  1936,  1937,    -1,    -1,   241,    -1,  2830,
     244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2842,  2843,    -1,    -1,    -1,    -1,  1960,    -1,    63,
     235,   265,    -1,   232,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,    -1,    77,    -1,    -1,  1979,    -1,   282,    83,
      84,    -1,   286,    87,    -1,  1988,    -1,  1990,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   276,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   125,    -1,    -1,    -1,   129,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   323,   318,
     319,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   341,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2090,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   400,    -1,   402,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   416,    -1,    -1,    -1,  3007,  3008,    -1,    -1,
      -1,   396,    -1,   427,    -1,  2128,    -1,    -1,    -1,    -1,
     405,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,   449,    -1,    -1,   452,    -1,
     454,    -1,    -1,   457,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,   467,   468,    -1,    -1,    -1,  3059,    -1,
      -1,  3062,    -1,   477,    -1,   479,    -1,   446,   447,    -1,
      -1,    -1,    -1,    -1,   488,    -1,    -1,    -1,    -1,  2192,
     494,    -1,    -1,  3084,  3085,    -1,  2199,    -1,   502,    -1,
      -1,    -1,    -1,   507,   508,   509,    -1,    -1,    -1,   484,
      -1,    -1,    -1,    -1,    -1,  3106,    -1,    -1,    -1,   323,
      -1,    -1,    -1,    -1,  3115,    -1,  3117,    -1,  3119,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   540,   341,    -1,    -1,
      -1,    -1,    -1,   547,    -1,    -1,    -1,  3138,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3150,
      -1,    -1,    -1,    -1,  3155,    -1,   541,   542,   543,    -1,
      -1,    -1,    -1,   548,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    27,    28,    -1,    -1,    -1,    -1,   591,    -1,    -1,
     565,    -1,   396,   568,    -1,    -1,    -1,    -1,    -1,   603,
      -1,   405,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
      -1,   615,    -1,    -1,  3205,    61,    62,    63,    -1,    -1,
      -1,    -1,    -1,    -1,  3215,    71,    -1,    -1,    -1,   604,
      -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,  3230,
    3231,    87,   646,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     664,    -1,    -1,  3254,  3255,   111,    -1,    -1,  3259,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,
     484,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,   664,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3296,    -1,    -1,    -1,    -1,
      -1,  2414,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   541,   542,   543,
      -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   565,    -1,    -1,   568,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2491,   235,
      -1,    -1,    -1,    -1,    -1,    -1,   242,  2500,  2501,    -1,
     604,  3392,  3393,    -1,  2507,    -1,    -1,  2510,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
    2523,  2524,    -1,  2526,    -1,    -1,  2529,  2530,  2531,  2532,
    2533,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3430,
    3431,    -1,  2545,    -1,    -1,    -1,    -1,    -1,  2551,    -1,
    2553,    -1,  2555,  2556,    -1,  2558,    -1,    -1,    -1,    -1,
    2563,  2564,  2565,    -1,    -1,    -1,  2569,  2570,  2571,    -1,
    2573,    -1,  2575,  3464,  2577,    -1,  2579,   323,  2581,    -1,
      34,    35,    -1,  2586,    -1,    -1,    40,    -1,    42,    -1,
      44,    45,    -1,    -1,    -1,   341,    -1,  3488,    -1,  3490,
      -1,    -1,  3493,  3494,    -1,  3496,    -1,    -1,    62,    -1,
      -1,    -1,    -1,    -1,  3505,    -1,  2619,    -1,    -1,  3510,
      -1,  2624,  3513,    -1,  3515,  3516,    -1,     7,    -1,    -1,
      -1,    -1,    12,    -1,    14,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,    28,    -1,
     396,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,   405,
    3551,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,
      -1,    61,    62,    63,    64,    -1,    -1,    -1,   142,    69,
      -1,    71,  3583,    -1,    -1,    -1,    -1,    77,    -1,    -1,
      -1,    -1,    -1,    83,    84,   159,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,   187,    -1,   189,    -1,  2740,   484,    -1,
      -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,
    2753,   205,   206,    -1,    -1,    -1,    -1,   137,   138,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,   158,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,
      -1,    -1,    -1,   247,    -1,   541,   542,   543,    -1,    -1,
      -1,    -1,   548,    -1,    -1,    -1,    -1,   261,    -1,    -1,
      -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,   565,
      -1,    -1,   568,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   289,   290,    -1,   292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,    -1,   235,    -1,    -1,   604,    -1,
      -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   329,   330,   331,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   348,   349,   350,    -1,    -1,    -1,
      -1,   355,    -1,    -1,   358,    -1,   286,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   376,   377,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   323,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   410,   411,    -1,    -1,
      -1,   341,    -1,    -1,    -1,   345,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3884,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,   389,
    3901,    -1,    -1,    -1,    -1,  3906,   396,    -1,    -1,  3910,
      -1,    -1,    -1,    -1,    -1,   405,    -1,    -1,    -1,     7,
      -1,    -1,    -1,    -1,    12,    -1,    14,    -1,    -1,    17,
      -1,    -1,    -1,    -1,   498,    -1,    -1,    -1,   502,    27,
      28,    -1,    -1,    -1,    -1,    -1,  3059,   437,    -1,  3062,
     514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   452,   453,   454,    -1,    -1,    -1,    -1,    -1,
      58,  3084,  3085,    -1,    -1,    63,    64,    -1,    -1,    -1,
      -1,    69,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      -1,    -1,    -1,  3106,   484,    83,    84,    -1,    -1,    87,
      -1,    -1,  3115,    -1,  3117,    -1,  3119,    -1,    96,    -1,
     574,    -1,    -1,   577,    -1,    -1,   580,   581,   582,   583,
      -1,    -1,    -1,   111,    -1,  3138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,  4039,    -1,
    4041,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   137,
     138,   541,   542,   543,    -1,    -1,   144,    -1,   548,   623,
     624,    -1,    -1,    -1,   152,  4066,    -1,    -1,    -1,    -1,
     158,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,    -1,
      -1,   169,    -1,    -1,    -1,    -1,    -1,   651,    -1,    -1,
      -1,    -1,  3205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   591,  3215,    -1,   192,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,  3230,  3231,    -1,
      -1,   611,    -1,    -1,    -1,    -1,    -1,    -1,  4129,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3254,  3255,    -1,    -1,   233,  3259,   235,   638,    -1,
      -1,   641,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3296,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1,
      -1,    -1,    -1,    -1,  4205,  4206,    -1,    -1,    -1,    -1,
      -1,  4212,  4213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    35,    36,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   323,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    61,    62,   341,    -1,    -1,    -1,   345,    -1,    -1,
      -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3392,
    3393,    -1,    -1,    -1,    -1,    -1,    -1,    97,    -1,    99,
      -1,    -1,    -1,    -1,    -1,   383,    -1,    -1,    -1,   109,
      -1,   389,    -1,    -1,    -1,    -1,    -1,    -1,   396,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   405,    -1,    -1,
      -1,    -1,    -1,    -1,  4325,    -1,  4327,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4337,    -1,  4339,  4340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,   158,   437,
      -1,  3464,    -1,   163,    -1,    -1,   166,    -1,    -1,    -1,
    4361,    -1,    -1,    -1,   452,   453,   454,    -1,  4369,    -1,
      -1,    -1,    -1,    -1,    -1,  3488,    -1,  3490,    -1,    -1,
    3493,  3494,    -1,    -1,    -1,    -1,    -1,    -1,   198,    -1,
     200,    -1,  3505,    -1,    -1,    -1,   484,  3510,    -1,   209,
    3513,   211,  3515,  3516,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4417,    -1,  4419,    -1,
      -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4434,  4435,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4450,
      -1,    -1,   262,   541,   542,   543,    -1,    -1,    -1,    -1,
     548,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3583,    -1,    -1,   283,    -1,    -1,    -1,   565,    -1,    -1,
     568,    -1,  4483,  4484,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4496,  4497,    -1,    -1,    -1,
      -1,    -1,    -1,   591,    -1,    -1,    -1,   317,  4509,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,    -1,
      -1,    -1,    -1,   611,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4534,    -1,    -1,    -1,    -1,    -1,    -1,
    4541,    -1,    -1,  4544,    -1,    -1,    -1,    -1,  4549,    -1,
     638,    -1,    -1,   641,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4565,    -1,    -1,    -1,    -1,    -1,
      -1,  4572,   382,  4574,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4587,    -1,    -1,    -1,
      -1,  4592,    -1,  4594,    -1,  4596,    -1,    -1,    -1,   409,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4609,    -1,
     420,   421,    -1,    -1,   424,   425,    -1,    -1,    -1,    -1,
    4621,  4622,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   445,  4637,  4638,    -1,    -1,
      -1,  4642,    -1,    -1,    -1,    -1,    -1,  4648,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4676,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   499,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   544,    -1,    -1,    -1,   548,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   567,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3884,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3901,    -1,
      -1,    -1,    -1,  3906,    -1,    -1,    -1,  3910,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   625,    -1,    -1,    -1,    -1,
      -1,    -1,   632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4039,    -1,  4041,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4205,  4206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4325,    -1,  4327,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4337,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4417,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4541,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,  4565,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,  4648,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,  4676,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,   269,   270,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,   291,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,    -1,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,   573,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
     585,   586,   587,    -1,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,   617,   618,   619,   620,   621,   622,    -1,    -1,
     625,   626,    -1,   628,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,    -1,    -1,   651,    -1,   653,   654,
      -1,    -1,   657,   658,    -1,    -1,    -1,    -1,   663,   664,
      -1,    -1,   667,   668,    -1,    -1,   671,   672,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,   101,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,   291,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,    -1,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,   573,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,   621,   622,    -1,    -1,   625,   626,
      -1,   628,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,    -1,   651,    -1,   653,   654,    -1,    -1,
     657,   658,    -1,    -1,    -1,    -1,   663,   664,    -1,    -1,
     667,   668,    -1,    -1,   671,   672,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,   101,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,   291,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,    -1,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,   573,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,   617,   618,
     619,   620,   621,   622,    -1,    -1,   625,   626,    -1,   628,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,    -1,   651,    -1,   653,   654,    -1,    -1,   657,   658,
     659,    -1,    -1,    -1,   663,   664,    -1,    -1,   667,   668,
      -1,    -1,   671,   672,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
     101,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
     291,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,    -1,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,   573,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,   617,   618,   619,   620,
     621,   622,    -1,    -1,   625,   626,    -1,   628,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,    -1,
     651,    -1,   653,   654,    -1,    -1,   657,   658,   659,    -1,
      -1,    -1,   663,   664,    -1,    -1,   667,   668,    -1,    -1,
     671,   672,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,   101,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,   291,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,    -1,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
     573,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,   617,   618,   619,   620,   621,   622,
      -1,    -1,   625,   626,    -1,   628,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,    -1,   651,    -1,
     653,   654,    -1,    -1,   657,   658,    -1,    -1,    -1,    -1,
     663,   664,    -1,    -1,   667,   668,    -1,    -1,   671,   672,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,   291,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,    -1,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,   573,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,   617,   618,   619,   620,   621,   622,    -1,    -1,
     625,   626,    -1,   628,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,    -1,    -1,   651,    -1,   653,   654,
      -1,    -1,   657,   658,    -1,    -1,    -1,    -1,   663,   664,
      -1,    -1,   667,   668,    -1,    -1,   671,   672,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,   101,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,   291,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,    -1,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,   573,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,   621,   622,    -1,    -1,   625,   626,
      -1,   628,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,    -1,   651,    -1,   653,   654,    -1,    -1,
     657,   658,    -1,    -1,    -1,    -1,   663,   664,    -1,    -1,
     667,   668,    -1,    -1,   671,   672,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,   101,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,   291,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,    -1,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,   573,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,   617,   618,
     619,   620,   621,   622,    -1,    -1,   625,   626,    -1,   628,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,    -1,   651,    -1,   653,   654,    -1,    -1,   657,   658,
      -1,    -1,    -1,    -1,   663,   664,    -1,    -1,   667,   668,
      -1,    -1,   671,   672,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
     101,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
     291,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,    -1,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,   573,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,   617,   618,   619,   620,
     621,   622,    -1,    -1,   625,   626,    -1,   628,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,    -1,
     651,    -1,   653,   654,    -1,    -1,   657,   658,    -1,    -1,
      -1,    -1,   663,   664,    -1,    -1,   667,   668,    -1,    -1,
     671,   672,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,   101,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,   291,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
     573,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,   617,   618,   619,   620,   621,   622,
      -1,    -1,   625,   626,    -1,   628,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,    -1,   651,    -1,
     653,   654,    -1,    -1,   657,   658,    -1,    -1,    -1,    -1,
     663,   664,    -1,    -1,   667,   668,    -1,    -1,   671,   672,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,   291,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,    -1,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,   573,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,   617,   618,   619,   620,   621,   622,    -1,    -1,
     625,   626,    -1,   628,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,    -1,    -1,   651,    -1,   653,   654,
      -1,    -1,   657,   658,    -1,    -1,    -1,    -1,   663,   664,
      -1,    -1,   667,   668,    -1,    -1,   671,   672,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,   101,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,   291,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,    -1,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,   573,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,   621,   622,    -1,    -1,   625,   626,
      -1,   628,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,    -1,   651,    -1,   653,   654,    -1,    -1,
     657,   658,    -1,    -1,    -1,    -1,   663,   664,    -1,    -1,
     667,   668,    -1,    -1,   671,   672,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,   101,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,   291,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,    -1,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,   573,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,   617,   618,
     619,   620,   621,   622,    -1,    -1,   625,   626,    -1,   628,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,    -1,   651,    -1,   653,   654,    -1,    -1,   657,   658,
      -1,    -1,    -1,    -1,   663,   664,    -1,    -1,   667,   668,
      -1,    -1,   671,   672,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
     101,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
     291,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,    -1,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,   573,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,   617,   618,   619,   620,
     621,   622,    -1,    -1,   625,   626,    -1,   628,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,    -1,
     651,    -1,   653,   654,    -1,    -1,   657,   658,    -1,    -1,
      -1,    -1,   663,   664,    -1,    -1,   667,   668,    -1,    -1,
     671,   672,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,   101,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,   291,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
     573,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,   617,   618,   619,   620,   621,   622,
      -1,    -1,   625,   626,    -1,   628,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,    -1,   651,    -1,
     653,   654,    -1,    -1,   657,   658,    -1,    -1,    -1,    -1,
     663,   664,    -1,    -1,   667,   668,    -1,    -1,   671,   672,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,   291,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,    -1,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,   573,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,   617,   618,   619,   620,   621,   622,    -1,    -1,
     625,   626,    -1,   628,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,    -1,    -1,   651,    -1,   653,   654,
      -1,    -1,   657,   658,    -1,    -1,    -1,    -1,   663,   664,
      -1,    -1,   667,   668,    -1,    -1,   671,   672,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,   101,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,   291,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,    -1,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,   573,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,   621,   622,    -1,    -1,   625,   626,
      -1,   628,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,    -1,   651,    -1,   653,   654,    -1,    -1,
     657,   658,    -1,    -1,    -1,    -1,   663,   664,    -1,    -1,
     667,   668,    -1,    -1,   671,   672,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,   291,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,   370,   371,    -1,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,    -1,    -1,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,   573,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,    -1,   651,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,   671,   672,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,   264,    -1,   266,   267,    -1,
      -1,   270,    -1,    -1,   273,   274,    -1,   276,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,   494,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,   520,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,    -1,    -1,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,    -1,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,    -1,   591,   592,   593,   594,    -1,   596,   597,    -1,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,    -1,   651,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,   672,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,   264,    -1,   266,   267,    -1,    -1,   270,
      -1,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,    -1,
     321,   322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,    -1,   343,    -1,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,    -1,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,   370,
     371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,   520,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,    -1,    -1,   559,   560,
     561,   562,    -1,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,    -1,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,
     591,   592,   593,   594,    -1,   596,   597,    -1,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,    -1,
     651,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,   672,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,   145,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,   494,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
      -1,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,    -1,   651,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,   664,    15,    16,    -1,   668,    -1,    20,    -1,   672,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,   494,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
      -1,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,    -1,   651,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,   664,    15,    16,    -1,   668,    -1,    20,    -1,   672,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,   494,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
      -1,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,    -1,   651,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,   664,    15,    16,    -1,    -1,    -1,    20,    -1,   672,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,   494,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
      -1,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,    -1,   651,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,   665,    -1,    -1,    20,    -1,    -1,    23,   672,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,    -1,   321,   322,   323,   324,
      -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,    -1,    -1,    -1,   370,   371,    -1,    -1,    -1,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,    -1,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
      -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,    -1,    -1,   559,   560,   561,   562,    -1,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,   594,
      -1,   596,   597,    -1,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,
     625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,    -1,    -1,   651,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,
     665,     8,     9,    10,    11,    12,   671,   672,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,    -1,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,    -1,    -1,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,    -1,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,    -1,   651,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,   664,    15,    16,
      -1,    -1,    -1,    20,    -1,   672,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,    -1,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,    -1,    -1,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,    -1,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,    -1,   651,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,   664,    15,    16,
      -1,    -1,    -1,    20,    -1,   672,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,    -1,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,    -1,    -1,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,    -1,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,    -1,   651,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   659,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,   672,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,
      -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,
      -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,    -1,   321,
     322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,
     332,   333,   334,   335,   336,   337,    -1,    -1,   340,   341,
      -1,   343,    -1,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,
     362,   363,   364,   365,   366,    -1,    -1,    -1,   370,   371,
      -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,
     382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,   401,
      -1,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
      -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,   441,
      -1,    -1,   444,   445,   446,   447,   448,    -1,   450,   451,
      -1,   453,   454,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,    -1,   467,    -1,   469,   470,    -1,
     472,   473,   474,    -1,   476,    -1,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,    -1,
     492,   493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,
      -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,
     512,   513,    -1,   515,   516,   517,   518,   519,    -1,    -1,
      -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,
     532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,
     552,   553,   554,   555,   556,    -1,    -1,   559,   560,   561,
     562,    -1,   564,   565,    -1,    -1,   568,   569,   570,   571,
      -1,    -1,   574,   575,    -1,   577,   578,   579,   580,    -1,
      -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,
     592,   593,   594,    -1,   596,   597,    -1,   599,   600,    -1,
     602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,
      -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,
     622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,
     632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,    -1,   651,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,   671,
     672,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,
      -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,
      -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,    -1,   321,
     322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,
     332,   333,   334,   335,   336,   337,    -1,    -1,   340,   341,
      -1,   343,    -1,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,
     362,   363,   364,   365,   366,    -1,    -1,    -1,   370,   371,
      -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,
     382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,   401,
      -1,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
      -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,   441,
      -1,    -1,   444,   445,   446,   447,   448,    -1,   450,   451,
      -1,   453,   454,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,    -1,   467,    -1,   469,   470,    -1,
     472,   473,   474,    -1,   476,    -1,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,    -1,
     492,   493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,
      -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,
     512,   513,    -1,   515,   516,   517,   518,   519,    -1,    -1,
      -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,
     532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,
     552,   553,   554,   555,   556,    -1,    -1,   559,   560,   561,
     562,    -1,   564,   565,    -1,    -1,   568,   569,   570,   571,
      -1,    -1,   574,   575,    -1,   577,   578,   579,   580,    -1,
      -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,
     592,   593,   594,    -1,   596,   597,    -1,   599,   600,    -1,
     602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,
      -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,
     622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,
     632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,    -1,   651,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
     672,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,
      -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,
     274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,    -1,   321,   322,   323,
     324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,
     334,   335,   336,   337,    -1,    -1,   340,   341,    -1,   343,
      -1,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,
     364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,    -1,
      -1,   375,    -1,   377,   378,    -1,   380,   381,   382,    -1,
      -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,   396,   397,    -1,   399,   400,   401,    -1,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,    -1,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
      -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,
     444,   445,   446,   447,   448,    -1,   450,   451,    -1,   453,
     454,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,    -1,   467,    -1,   469,   470,    -1,   472,   473,
     474,    -1,   476,    -1,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,    -1,   492,   493,
      -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,
     504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,
      -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,
      -1,   525,   526,   527,    -1,   529,   530,    -1,   532,    -1,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,   543,
     544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,
     554,   555,   556,    -1,    -1,   559,   560,   561,   562,    -1,
     564,   565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,
     574,   575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,
      -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,
     594,    -1,   596,   597,    -1,   599,   600,    -1,   602,   603,
      -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,
     614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,
      -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,
     634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,
      -1,   645,   646,   647,   648,    -1,    -1,   651,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,   672,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,
     266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,    -1,
      -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
      -1,   287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,    -1,   321,   322,   323,   324,    -1,
     326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,
     336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,   365,
     366,    -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,
      -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,   385,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,
     396,   397,    -1,   399,   400,   401,    -1,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,    -1,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,
      -1,   437,   438,   439,   440,   441,    -1,    -1,   444,   445,
     446,   447,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
      -1,   467,    -1,   469,   470,    -1,   472,   473,   474,    -1,
     476,    -1,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,    -1,   492,   493,    -1,    -1,
      -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,
      -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,   515,
     516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,
     526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,    -1,    -1,   551,   552,   553,   554,   555,
     556,    -1,    -1,   559,   560,   561,   562,    -1,   564,   565,
      -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,   575,
      -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,
     586,   587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,
     596,   597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,
     606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,
      -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,
      -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,
      -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,    -1,   651,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,   672,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,
      -1,    -1,   270,    -1,    -1,   273,   274,    -1,    -1,    -1,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,
     288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,    -1,   321,   322,   323,   324,    -1,   326,   327,
      -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,   337,
      -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,    -1,
     358,   359,    -1,    -1,   362,   363,   364,   365,   366,    -1,
      -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,
     378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,
      -1,   399,   400,   401,    -1,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,    -1,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,
     438,   439,   440,   441,    -1,    -1,   444,   445,   446,   447,
     448,    -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
      -1,   469,   470,    -1,   472,   473,   474,    -1,   476,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,
     498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,
     508,    -1,   510,   511,   512,   513,    -1,   515,   516,   517,
     518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,
      -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,   543,   544,    -1,    -1,   547,
     548,    -1,    -1,   551,   552,   553,   554,   555,   556,    -1,
      -1,   559,   560,   561,   562,    -1,   564,   565,    -1,    -1,
     568,   569,   570,   571,    -1,    -1,   574,   575,    -1,   577,
     578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,
      -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,   597,
      -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,
      -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,
      -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,
      -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,
      -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,    -1,   651,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,   672,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
      -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,
     270,    -1,    -1,   273,   274,   275,    -1,    -1,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
      -1,   321,   322,   323,   324,    -1,   326,   327,    -1,    -1,
      -1,    -1,   332,   333,   334,   335,   336,   337,    -1,    -1,
     340,   341,    -1,   343,    -1,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,    -1,   358,   359,
      -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,
     370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,
     380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,    -1,   395,   396,   397,    -1,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,    -1,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,   426,    -1,   428,   429,
     430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,
     440,   441,    -1,    -1,   444,   445,   446,   447,   448,    -1,
     450,   451,    -1,   453,   454,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,    -1,   467,    -1,   469,
     470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,
     500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,
     510,   511,   512,   513,    -1,   515,   516,   517,   518,   519,
      -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,
     530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,   543,   544,    -1,    -1,   547,   548,    -1,
      -1,   551,   552,   553,   554,   555,   556,    -1,    -1,   559,
     560,   561,   562,    -1,   564,   565,    -1,    -1,   568,   569,
     570,   571,    -1,   573,   574,   575,    -1,   577,   578,   579,
     580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,
      -1,   591,   592,   593,   594,    -1,   596,   597,    -1,   599,
     600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,
      -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,
     620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,
      -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
      -1,   651,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,   671,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
      -1,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,    -1,   651,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,   671,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,
     266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,   275,
      -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
      -1,   287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,    -1,   321,   322,   323,   324,    -1,
     326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,
     336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,   365,
     366,    -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,
      -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,   385,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,
     396,   397,    -1,   399,   400,   401,    -1,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,    -1,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,
      -1,   437,   438,   439,   440,   441,    -1,    -1,   444,   445,
     446,   447,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
      -1,   467,    -1,   469,   470,    -1,   472,   473,   474,    -1,
     476,    -1,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,    -1,   492,   493,    -1,    -1,
      -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,
      -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,   515,
     516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,
     526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,    -1,    -1,   551,   552,   553,   554,   555,
     556,    -1,    -1,   559,   560,   561,   562,    -1,   564,   565,
      -1,    -1,   568,   569,   570,   571,    -1,   573,   574,   575,
      -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,
     586,   587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,
     596,   597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,
     606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,
      -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,
      -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,
      -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,    -1,   651,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,   671,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,    -1,   273,   274,   275,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,    -1,    -1,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,   573,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,    -1,   591,   592,   593,   594,    -1,   596,   597,    -1,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,    -1,   651,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,   671,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,
      -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,
      -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,    -1,   321,
     322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,
     332,   333,   334,   335,   336,   337,    -1,    -1,   340,   341,
      -1,   343,    -1,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,
     362,   363,   364,   365,   366,    -1,    -1,    -1,   370,   371,
      -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,
     382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,   401,
      -1,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
      -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,   441,
      -1,    -1,   444,   445,   446,   447,   448,    -1,   450,   451,
      -1,   453,   454,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,    -1,   467,    -1,   469,   470,    -1,
     472,   473,   474,    -1,   476,    -1,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,    -1,
     492,   493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,
      -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,
     512,   513,    -1,   515,   516,   517,   518,   519,    -1,    -1,
      -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,
     532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,
     552,   553,   554,   555,   556,    -1,    -1,   559,   560,   561,
     562,    -1,   564,   565,    -1,    -1,   568,   569,   570,   571,
      -1,    -1,   574,   575,    -1,   577,   578,   579,   580,    -1,
      -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,
     592,   593,   594,    -1,   596,   597,    -1,   599,   600,    -1,
     602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,
      -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,
     622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,
     632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,    -1,   651,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,   671,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,
     275,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,    -1,   321,   322,   323,   324,
      -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,    -1,    -1,    -1,   370,   371,    -1,    -1,    -1,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,    -1,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
      -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,    -1,    -1,   559,   560,   561,   562,    -1,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,   573,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,   594,
      -1,   596,   597,    -1,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,
     625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,    -1,    -1,   651,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,   671,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,
      -1,    -1,   270,    -1,    -1,   273,   274,    -1,    -1,    -1,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,
     288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,    -1,   321,   322,   323,   324,    -1,   326,   327,
      -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,   337,
      -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,    -1,
     358,   359,    -1,    -1,   362,   363,   364,   365,   366,    -1,
      -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,
     378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,
      -1,   399,   400,   401,    -1,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,    -1,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,
     438,   439,   440,   441,    -1,    -1,   444,   445,   446,   447,
     448,    -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
      -1,   469,   470,    -1,   472,   473,   474,    -1,   476,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,
     498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,
     508,    -1,   510,   511,   512,   513,    -1,   515,   516,   517,
     518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,
      -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,   543,   544,    -1,    -1,   547,
     548,    -1,    -1,   551,   552,   553,   554,   555,   556,    -1,
      -1,   559,   560,   561,   562,    -1,   564,   565,    -1,    -1,
     568,   569,   570,   571,    -1,    -1,   574,   575,    -1,   577,
     578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,
      -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,   597,
      -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,
      -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,
      -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,
      -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,
      -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,    -1,   651,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,   671,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,
      -1,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,    -1,
     321,   322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,    -1,   343,    -1,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,    -1,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,   370,
     371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,    -1,    -1,   559,   560,
     561,   562,    -1,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,    -1,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,
     591,   592,   593,   594,    -1,   596,   597,    -1,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,    -1,
     651,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
     671,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,
      -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,
     274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,    -1,   321,   322,   323,
     324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,
     334,   335,   336,   337,    -1,    -1,   340,   341,    -1,   343,
      -1,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,
     364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,    -1,
      -1,   375,    -1,   377,   378,    -1,   380,   381,   382,    -1,
      -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,   396,   397,    -1,   399,   400,   401,    -1,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,    -1,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
      -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,
     444,   445,   446,   447,   448,    -1,   450,   451,    -1,   453,
     454,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,    -1,   467,    -1,   469,   470,    -1,   472,   473,
     474,    -1,   476,    -1,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,    -1,   492,   493,
      -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,
     504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,
      -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,
      -1,   525,   526,   527,    -1,   529,   530,    -1,   532,    -1,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,   543,
     544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,
     554,   555,   556,    -1,    -1,   559,   560,   561,   562,    -1,
     564,   565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,
     574,   575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,
      -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,
     594,    -1,   596,   597,    -1,   599,   600,    -1,   602,   603,
      -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,
     614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,
      -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,
     634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,
      -1,   645,   646,   647,   648,     5,     6,   651,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,   665,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
      -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,
     270,    -1,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
      -1,   321,   322,   323,   324,    -1,   326,   327,    -1,    -1,
      -1,    -1,   332,   333,   334,   335,   336,   337,    -1,    -1,
     340,   341,    -1,   343,    -1,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,    -1,   358,   359,
      -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,
     370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,
     380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,    -1,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,   426,    -1,   428,   429,
     430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,
     440,   441,    -1,    -1,   444,   445,   446,   447,   448,    -1,
     450,   451,    -1,   453,   454,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,    -1,   467,    -1,   469,
     470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,
     500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,
     510,   511,   512,   513,    -1,   515,   516,   517,   518,   519,
      -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,
     530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,   543,   544,    -1,    -1,   547,   548,    -1,
      -1,   551,   552,   553,   554,   555,   556,    -1,    -1,   559,
     560,   561,   562,    -1,   564,   565,    -1,    -1,   568,   569,
     570,   571,    -1,    -1,   574,   575,    -1,   577,   578,   579,
     580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,
      -1,   591,   592,   593,   594,    -1,   596,   597,    -1,   599,
     600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,
      -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,
     620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,
      -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
       6,   651,     8,     9,    10,    11,    12,    -1,    -1,    -1,
      16,    -1,    -1,    -1,    20,   665,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,    -1,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,   273,   274,    -1,
      -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
      -1,   287,   288,    -1,    -1,    -1,    -1,   293,    -1,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,    -1,   321,   322,   323,   324,    -1,
     326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,
     336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,   365,
     366,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,   375,
      -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     396,   397,    -1,    -1,    -1,   401,    -1,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
      -1,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,
      -1,   437,   438,   439,   440,   441,    -1,    -1,   444,   445,
     446,   447,   448,    -1,   450,    -1,    -1,   453,    -1,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
      -1,    -1,    -1,   469,    -1,    -1,   472,   473,   474,   475,
     476,    -1,    -1,    -1,   480,   481,   482,   483,   484,   485,
     486,   487,    -1,   489,   490,    -1,   492,    -1,    -1,    -1,
      -1,   497,   498,   499,    -1,    -1,    -1,    -1,   504,    -1,
      -1,    -1,    -1,    -1,    -1,   511,    -1,   513,    -1,   515,
      -1,    -1,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,
     526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,
      -1,   537,    -1,   539,    -1,   541,   542,   543,   544,    -1,
      -1,    -1,   548,    -1,    -1,   551,   552,   553,   554,   555,
     556,    -1,    -1,   559,   560,   561,   562,    -1,   564,   565,
      -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,   575,
      -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,
     586,   587,    -1,    -1,    -1,    -1,   592,   593,   594,    -1,
     596,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,
     606,    -1,    -1,   609,    -1,    -1,    -1,   613,   614,    -1,
      -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,
      -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,
      -1,   637,    -1,    -1,    -1,   641,   642,    -1,    -1,   645,
      -1,   647,   648,     5,     6,   651,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
     666,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,   133,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,
      -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,
      -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,    -1,   321,
     322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,
     332,   333,   334,   335,   336,   337,    -1,    -1,   340,   341,
      -1,   343,    -1,   345,    -1,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,
     362,   363,   364,   365,   366,    -1,    -1,    -1,   370,   371,
      -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,
     382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,   401,
      -1,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
      -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,   441,
      -1,    -1,   444,   445,   446,   447,   448,    -1,   450,   451,
      -1,   453,   454,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,    -1,   467,    -1,   469,   470,    -1,
     472,   473,   474,    -1,   476,    -1,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,    -1,
     492,   493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,
      -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,
     512,   513,    -1,   515,   516,   517,   518,   519,    -1,    -1,
      -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,
     532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,
     552,   553,   554,   555,   556,    -1,    -1,   559,   560,   561,
     562,    -1,   564,   565,    -1,    -1,   568,   569,   570,   571,
      -1,    -1,   574,   575,    -1,   577,   578,   579,   580,    -1,
      -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,
     592,   593,   594,    -1,   596,   597,    -1,   599,   600,    -1,
     602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,
      -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,
     622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,
     632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,    -1,   651,
      -1,    -1,    -1,    -1,    -1,     5,     6,   659,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
      -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,
     270,    -1,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
      -1,   321,   322,   323,   324,    -1,   326,   327,    -1,    -1,
      -1,    -1,   332,   333,   334,   335,   336,   337,    -1,    -1,
     340,   341,    -1,   343,    -1,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,    -1,   358,   359,
      -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,
     370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,
     380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,    -1,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,   426,    -1,   428,   429,
     430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,
     440,   441,    -1,    -1,   444,   445,   446,   447,   448,    -1,
     450,   451,    -1,   453,   454,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,    -1,   467,    -1,   469,
     470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,
     500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,
     510,   511,   512,   513,    -1,   515,   516,   517,   518,   519,
      -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,
     530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,   543,   544,    -1,    -1,   547,   548,    -1,
      -1,   551,   552,   553,   554,   555,   556,    -1,    -1,   559,
     560,   561,   562,    -1,   564,   565,    -1,    -1,   568,   569,
     570,   571,    -1,    -1,   574,   575,    -1,   577,   578,   579,
     580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,
      -1,   591,   592,   593,   594,    -1,   596,   597,    -1,   599,
     600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,
      -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,
     620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,
      -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
      -1,   651,    -1,    -1,    -1,    -1,    -1,     5,     6,   659,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,   200,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,
      -1,    -1,   270,    -1,    -1,   273,   274,    -1,    -1,    -1,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,
     288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,    -1,   321,   322,   323,   324,    -1,   326,   327,
      -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,   337,
      -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,    -1,
     358,   359,    -1,    -1,   362,   363,   364,   365,   366,    -1,
      -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,
     378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,
      -1,   399,   400,   401,    -1,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,    -1,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,
     438,   439,   440,   441,    -1,    -1,   444,   445,   446,   447,
     448,    -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,    -1,   467,
      -1,   469,   470,    -1,   472,   473,   474,    -1,   476,    -1,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,
     498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,
     508,    -1,   510,   511,   512,   513,    -1,   515,   516,   517,
     518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,
      -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,   543,   544,    -1,    -1,   547,
     548,    -1,    -1,   551,   552,   553,   554,   555,   556,    -1,
      -1,   559,   560,   561,   562,    -1,   564,   565,    -1,    -1,
     568,   569,   570,   571,    -1,    -1,   574,   575,    -1,   577,
     578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,
      -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,   597,
      -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,
      -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,
      -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,
      -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,
      -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,    -1,   651,    -1,    -1,    -1,    -1,    -1,     5,
       6,   659,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,
     266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,    -1,
      -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
      -1,   287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,    -1,   321,   322,   323,   324,    -1,
     326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,
     336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,
      -1,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,   365,
     366,    -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,
      -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,   385,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,
     396,   397,    -1,   399,   400,   401,    -1,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,    -1,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,
      -1,   437,   438,   439,   440,   441,    -1,    -1,   444,   445,
     446,   447,   448,    -1,   450,   451,    -1,   453,   454,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
      -1,   467,    -1,   469,   470,    -1,   472,   473,   474,    -1,
     476,    -1,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,    -1,   492,   493,    -1,    -1,
      -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,
      -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,   515,
     516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,
     526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,    -1,    -1,   551,   552,   553,   554,   555,
     556,    -1,    -1,   559,   560,   561,   562,    -1,   564,   565,
      -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,   575,
      -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,
     586,   587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,
     596,   597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,
     606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,
      -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,
      -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,
      -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,    -1,   651,    -1,    -1,    -1,    -1,
      -1,     5,     6,   659,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,
      -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,
     274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,    -1,   287,   288,    -1,    -1,   291,    -1,    -1,
      -1,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,    -1,   321,   322,   323,
     324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,
     334,   335,   336,   337,    -1,    -1,   340,   341,    -1,   343,
      -1,   345,    -1,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,    -1,    -1,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,    -1,
      -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,   396,   397,    -1,   399,   400,   401,    -1,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,    -1,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,    -1,    -1,   433,
      -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,
     444,   445,   446,   447,   448,    -1,   450,   451,    -1,   453,
     454,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,    -1,   467,    -1,   469,   470,    -1,   472,   473,
     474,    -1,   476,    -1,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,    -1,   492,   493,
      -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,
     504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,
      -1,   515,   516,   517,   518,   519,    -1,    -1,   522,   523,
     524,   525,   526,   527,    -1,   529,   530,    -1,   532,    -1,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,   543,
     544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,
     554,   555,   556,    -1,    -1,   559,   560,   561,   562,    -1,
     564,   565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,
     574,   575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,
      -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,
     594,   595,   596,   597,    -1,   599,   600,    -1,   602,   603,
      -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,
     614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,
      -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,
     634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,
      -1,   645,   646,   647,   648,     5,     6,   651,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    18,    19,
      20,    21,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
     200,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
      -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,
     270,    -1,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
      -1,   321,   322,   323,   324,    -1,   326,   327,    -1,    -1,
      -1,    -1,   332,   333,   334,   335,   336,   337,    -1,    -1,
     340,   341,    -1,   343,    -1,   345,    -1,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,    -1,   358,   359,
      -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,
     370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,
     380,   381,   382,    -1,    -1,   385,    -1,    -1,   388,    -1,
      -1,   391,    -1,    -1,    -1,   395,   396,   397,    -1,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,    -1,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,   426,    -1,   428,   429,
     430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,
     440,   441,    -1,    -1,   444,   445,   446,   447,   448,    -1,
     450,   451,    -1,   453,   454,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,    -1,   467,    -1,   469,
     470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,
     500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,
     510,   511,   512,   513,    -1,   515,   516,   517,   518,   519,
      -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,
     530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,   543,   544,    -1,    -1,   547,   548,    -1,
      -1,   551,   552,   553,   554,   555,   556,    -1,    -1,   559,
     560,   561,   562,    -1,   564,   565,    -1,    -1,   568,   569,
     570,   571,    -1,   573,   574,   575,    -1,   577,   578,   579,
     580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,
      -1,   591,   592,   593,   594,    -1,   596,   597,    -1,   599,
     600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,
      -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,
     620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,
      -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,   649,
      -1,   651,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,   275,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
     503,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
     573,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,     5,     6,   651,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,    -1,   273,   274,   275,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,    -1,    -1,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,   573,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,    -1,   591,   592,   593,   594,    -1,   596,   597,    -1,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
       5,     6,   651,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,   291,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,    -1,   321,   322,   323,   324,
      -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,    -1,    -1,    -1,   370,   371,    -1,    -1,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
      -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,    -1,    -1,   559,   560,   561,   562,    -1,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,   594,
     595,   596,   597,    -1,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,
     625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,     5,     6,   651,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,
      -1,    -1,   273,   274,   275,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,    -1,
     321,   322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,    -1,   343,    -1,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,    -1,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,   370,
     371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,    -1,    -1,   559,   560,
     561,   562,    -1,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,   573,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,
     591,   592,   593,   594,    -1,   596,   597,    -1,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,     5,     6,
     651,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,   104,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,    -1,   273,   274,   275,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,    -1,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,    -1,    -1,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,   573,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,     5,     6,   651,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,   275,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
     573,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,     5,     6,   651,     8,
       9,    10,    11,    12,    13,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,    -1,   273,   274,   275,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,    -1,    -1,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,   573,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,    -1,   591,   592,   593,   594,    -1,   596,   597,    -1,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
       5,     6,   651,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,    -1,   321,   322,   323,   324,
      -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,    -1,    -1,    -1,   370,   371,    -1,    -1,    -1,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,    -1,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
      -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,    -1,    -1,   559,   560,   561,   562,    -1,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,   573,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,   594,
      -1,   596,   597,    -1,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,
     625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,     5,     6,   651,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,
      -1,    -1,   273,   274,   275,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,    -1,
     321,   322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,    -1,   343,    -1,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,    -1,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,   370,
     371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,    -1,    -1,   559,   560,
     561,   562,    -1,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,   573,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,
     591,   592,   593,   594,    -1,   596,   597,    -1,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,     5,     6,
     651,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,    -1,   273,   274,   275,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,    -1,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,    -1,    -1,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,   573,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,     5,     6,   651,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,   275,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
     573,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,     5,     6,   651,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    95,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,    -1,    -1,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,    -1,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,    -1,   591,   592,   593,   594,    -1,   596,   597,    -1,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
       5,     6,   651,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,    -1,   321,   322,   323,   324,
      -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,    -1,    -1,    -1,   370,   371,    -1,    -1,    -1,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,    -1,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,   523,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
      -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,    -1,    -1,   559,   560,   561,   562,    -1,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,   594,
      -1,   596,   597,    -1,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,
     625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,     5,     6,   651,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,
      -1,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,    -1,
     321,   322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,    -1,   343,    -1,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,    -1,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,   370,
     371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,    -1,    -1,   559,   560,
     561,   562,    -1,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,    -1,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,
     591,   592,   593,   594,    -1,   596,   597,    -1,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,     5,     6,
     651,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,    -1,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,    -1,    -1,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,    -1,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,     5,     6,   651,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
     573,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,     5,     6,   651,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,    -1,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,    -1,    -1,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,    -1,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,    -1,   591,   592,   593,   594,    -1,   596,   597,    -1,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
       5,     6,   651,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,    -1,   321,   322,   323,   324,
      -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,    -1,    -1,    -1,   370,   371,    -1,    -1,    -1,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,    -1,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
      -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,    -1,    -1,   559,   560,   561,   562,    -1,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,   594,
      -1,   596,   597,    -1,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,
     625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,     5,     6,   651,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,
      -1,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,    -1,
     321,   322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,    -1,   343,    -1,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,    -1,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,   370,
     371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,    -1,    -1,   559,   560,
     561,   562,    -1,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,    -1,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,
     591,   592,   593,   594,    -1,   596,   597,    -1,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,     5,     6,
     651,     8,     9,    10,    11,    12,    13,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,   266,
     267,    -1,    -1,   270,    -1,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,   370,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
     397,    -1,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,    -1,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,   451,    -1,   453,   454,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
     467,    -1,   469,   470,    -1,   472,   473,   474,    -1,   476,
      -1,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,    -1,   492,   493,    -1,    -1,    -1,
     497,   498,   499,   500,    -1,    -1,    -1,   504,    -1,    -1,
      -1,   508,    -1,   510,   511,   512,   513,    -1,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,   543,   544,    -1,    -1,
     547,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,    -1,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,   591,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,   602,   603,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,     5,     6,   651,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,   266,   267,    -1,    -1,   270,    -1,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,   370,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,   397,    -1,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,    -1,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,   451,    -1,
     453,   454,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,   467,    -1,   469,   470,    -1,   472,
     473,   474,    -1,   476,    -1,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,    -1,    -1,    -1,   497,   498,   499,   500,    -1,    -1,
      -1,   504,    -1,    -1,    -1,   508,    -1,   510,   511,   512,
     513,    -1,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
     543,   544,    -1,    -1,   547,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
      -1,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,   591,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,   602,
     603,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,    -1,    -1,    -1,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,     5,     6,   651,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,   266,   267,    -1,
      -1,   270,    -1,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,   370,   371,    -1,    -1,    -1,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,   385,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,   397,    -1,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,    -1,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,   451,    -1,   453,   454,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,   467,    -1,
     469,   470,    -1,   472,   473,   474,    -1,   476,    -1,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,    -1,    -1,    -1,   497,   498,
     499,   500,    -1,    -1,    -1,   504,    -1,    -1,    -1,   508,
      -1,   510,   511,   512,   513,    -1,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,   543,   544,    -1,    -1,   547,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,    -1,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,    -1,   591,   592,   593,   594,    -1,   596,   597,    -1,
     599,   600,    -1,   602,   603,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,    -1,    -1,    -1,    -1,
      -1,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
       5,     6,   651,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,   200,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,   266,   267,    -1,    -1,   270,    -1,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,    -1,   321,   322,   323,   324,
      -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,    -1,    -1,    -1,   370,   371,    -1,    -1,    -1,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,   397,    -1,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
      -1,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,   451,    -1,   453,   454,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,   467,    -1,   469,   470,    -1,   472,   473,   474,
      -1,   476,    -1,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,    -1,   492,   493,    -1,
      -1,    -1,   497,   498,   499,   500,    -1,    -1,    -1,   504,
      -1,    -1,    -1,   508,    -1,   510,   511,   512,   513,    -1,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,   543,   544,
      -1,    -1,   547,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,    -1,    -1,   559,   560,   561,   562,    -1,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,    -1,    -1,   591,   592,   593,   594,
      -1,   596,   597,    -1,   599,   600,    -1,   602,   603,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,   613,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,
     625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,
      -1,    -1,    -1,    -1,    -1,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,     5,     6,   651,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,   266,   267,    -1,    -1,   270,
      -1,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,    -1,
     321,   322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,    -1,   343,    -1,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,    -1,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,   370,
     371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,   397,    -1,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,    -1,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
     451,    -1,   453,   454,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,   467,    -1,   469,   470,
      -1,   472,   473,   474,    -1,   476,    -1,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,    -1,    -1,    -1,   497,   498,   499,   500,
      -1,    -1,    -1,   504,    -1,    -1,    -1,   508,    -1,   510,
     511,   512,   513,    -1,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,   543,   544,    -1,    -1,   547,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,    -1,    -1,   559,   560,
     561,   562,    -1,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,    -1,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,
     591,   592,   593,   594,    -1,   596,   597,    -1,   599,   600,
      -1,   602,   603,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,
     631,   632,   633,   634,    -1,    -1,    -1,    -1,    -1,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,     6,
     651,     8,     9,    10,    11,    12,    -1,    -1,    -1,    16,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,   150,   151,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,   293,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   396,
     397,    -1,    -1,    -1,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,    -1,    -1,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
      -1,    -1,   469,    -1,    -1,   472,   473,   474,   475,   476,
      -1,    -1,    -1,   480,   481,   482,   483,   484,   485,   486,
     487,    -1,   489,   490,    -1,   492,    -1,    -1,    -1,    -1,
     497,   498,   499,    -1,    -1,    -1,    -1,   504,    -1,    -1,
      -1,    -1,    -1,    -1,   511,    -1,   513,    -1,   515,    -1,
      -1,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,    -1,   541,   542,   543,   544,    -1,    -1,
      -1,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,    -1,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,    -1,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,   606,
      -1,    -1,   609,    -1,    -1,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
     637,    -1,    -1,    -1,   641,   642,    -1,    -1,   645,    -1,
     647,   648,    -1,     6,   651,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
     293,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   396,   397,    -1,    -1,    -1,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,    -1,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,    -1,    -1,
     453,    -1,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,    -1,    -1,   469,    -1,    -1,   472,
     473,   474,   475,   476,    -1,    -1,    -1,   480,   481,   482,
     483,   484,   485,   486,   487,    -1,   489,   490,    -1,   492,
      -1,    -1,    -1,    -1,   497,   498,   499,    -1,    -1,    -1,
      -1,   504,    -1,    -1,    -1,    -1,    -1,    -1,   511,    -1,
     513,    -1,   515,    -1,    -1,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,    -1,   541,   542,
     543,   544,    -1,    -1,    -1,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
      -1,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,    -1,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,   606,    -1,    -1,   609,    -1,    -1,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,   635,    -1,   637,    -1,    -1,    -1,   641,   642,
      -1,    -1,   645,    -1,   647,   648,    -1,     6,   651,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,    -1,   267,    -1,
      -1,   270,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,    -1,    -1,   293,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   396,   397,    -1,
      -1,    -1,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,    -1,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,    -1,    -1,   453,    -1,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,    -1,    -1,
     469,    -1,    -1,   472,   473,   474,   475,   476,    -1,    -1,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,    -1,
     489,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,   498,
     499,    -1,    -1,    -1,    -1,   504,    -1,    -1,    -1,    -1,
      -1,    -1,   511,    -1,   513,    -1,   515,    -1,    -1,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,    -1,   541,   542,   543,   544,    -1,    -1,    -1,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,    -1,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,    -1,    -1,   592,   593,   594,    -1,   596,   597,    -1,
     599,   600,    -1,    -1,    -1,    -1,    -1,   606,    -1,    -1,
     609,    -1,    -1,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,   635,    -1,   637,    -1,
      -1,    -1,   641,   642,    -1,    -1,   645,    -1,   647,   648,
      -1,     6,   651,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    16,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,   198,    -1,   200,    -1,   202,    -1,    -1,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,    -1,   267,    -1,    -1,   270,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,    -1,    -1,   293,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,    -1,   321,   322,   323,   324,
      -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   396,   397,    -1,    -1,    -1,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,    -1,    -1,   453,    -1,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,    -1,    -1,   469,    -1,    -1,   472,   473,   474,
     475,   476,    -1,    -1,    -1,   480,   481,   482,   483,   484,
     485,   486,   487,    -1,   489,   490,    -1,   492,    -1,    -1,
      -1,    -1,   497,   498,   499,    -1,    -1,    -1,    -1,   504,
      -1,    -1,    -1,    -1,    -1,    -1,   511,    -1,   513,    -1,
     515,    -1,    -1,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,    -1,   541,   542,   543,   544,
      -1,    -1,    -1,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,    -1,    -1,   559,   560,   561,   562,    -1,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,    -1,    -1,    -1,   592,   593,   594,
      -1,   596,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,
      -1,   606,    -1,    -1,   609,    -1,    -1,    -1,   613,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,
     625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,
      -1,    -1,   637,    -1,    -1,    -1,   641,   642,    -1,    -1,
     645,    -1,   647,   648,    -1,     6,   651,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,    -1,   267,    -1,    -1,   270,
     271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
      -1,    -1,   293,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,    -1,
     321,   322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,    -1,   343,    -1,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,    -1,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   396,   397,    -1,    -1,    -1,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,    -1,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
      -1,    -1,   453,    -1,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,    -1,    -1,   469,    -1,
      -1,   472,   473,   474,   475,   476,    -1,    -1,    -1,   480,
     481,   482,   483,   484,   485,   486,   487,    -1,   489,   490,
      -1,   492,    -1,    -1,    -1,    -1,   497,   498,   499,    -1,
      -1,    -1,    -1,   504,    -1,    -1,    -1,    -1,    -1,    -1,
     511,    -1,   513,    -1,   515,    -1,    -1,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,    -1,
     541,   542,   543,   544,    -1,    -1,    -1,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,    -1,    -1,   559,   560,
     561,   562,    -1,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,    -1,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,
      -1,   592,   593,   594,    -1,   596,   597,    -1,   599,   600,
      -1,    -1,    -1,    -1,    -1,   606,    -1,    -1,   609,    -1,
      -1,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,
     631,   632,   633,   634,    -1,    -1,   637,    -1,    -1,    -1,
     641,   642,    -1,    -1,   645,    -1,   647,   648,    -1,     6,
     651,     8,     9,    10,    11,    12,    -1,    -1,    -1,    16,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,   293,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,   382,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   396,
     397,    -1,    -1,    -1,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,    -1,    -1,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
      -1,    -1,   469,    -1,    -1,   472,   473,   474,   475,   476,
      -1,    -1,    -1,   480,   481,   482,   483,   484,   485,   486,
     487,    -1,   489,   490,    -1,   492,    -1,    -1,    -1,    -1,
     497,   498,   499,    -1,    -1,    -1,    -1,   504,    -1,    -1,
      -1,    -1,    -1,    -1,   511,    -1,   513,    -1,   515,    -1,
      -1,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,    -1,   541,   542,   543,   544,    -1,    -1,
      -1,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,    -1,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,    -1,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,   606,
      -1,    -1,   609,    -1,    -1,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
     637,    -1,    -1,    -1,   641,   642,    -1,    -1,   645,    -1,
     647,   648,    -1,     6,   651,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
     133,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,   200,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,    -1,   261,    -1,
     263,    -1,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,    -1,   287,   288,    -1,    -1,    -1,    -1,
     293,    -1,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,    -1,   326,   327,    -1,    -1,    -1,    -1,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,    -1,
     343,    -1,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,    -1,   358,   359,    -1,    -1,   362,
     363,   364,   365,   366,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,   375,    -1,   377,   378,    -1,   380,   381,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   396,   397,    -1,    -1,    -1,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,    -1,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,    -1,    -1,
     433,    -1,    -1,    -1,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,    -1,   450,    -1,    -1,
     453,    -1,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,    -1,    -1,    -1,   469,    -1,    -1,   472,
     473,   474,   475,   476,    -1,    -1,    -1,   480,   481,   482,
     483,   484,   485,   486,   487,    -1,   489,   490,    -1,   492,
      -1,    -1,    -1,    -1,   497,   498,   499,    -1,    -1,    -1,
      -1,   504,    -1,    -1,    -1,    -1,    -1,    -1,   511,    -1,
     513,    -1,   515,    -1,    -1,   518,   519,    -1,    -1,    -1,
      -1,    -1,   525,   526,   527,    -1,   529,   530,    -1,   532,
      -1,    -1,   535,    -1,   537,    -1,   539,    -1,   541,   542,
     543,   544,    -1,    -1,    -1,   548,    -1,    -1,   551,   552,
     553,   554,   555,   556,    -1,    -1,   559,   560,   561,   562,
      -1,   564,   565,    -1,    -1,   568,   569,   570,   571,    -1,
      -1,   574,   575,    -1,   577,   578,   579,   580,    -1,    -1,
      -1,    -1,    -1,   586,   587,    -1,    -1,    -1,    -1,   592,
     593,   594,    -1,   596,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,   606,    -1,    -1,   609,    -1,    -1,    -1,
     613,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,   622,
      -1,    -1,   625,    -1,    -1,    -1,   629,    -1,   631,   632,
     633,   634,    -1,    -1,   637,    -1,    -1,    -1,   641,   642,
      -1,    -1,   645,    -1,   647,   648,    -1,     6,   651,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,   101,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,   133,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
      -1,   200,    -1,   202,    -1,    -1,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,    -1,   261,    -1,   263,    -1,    -1,    -1,   267,    -1,
      -1,   270,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,    -1,   287,   288,
      -1,    -1,    -1,    -1,   293,    -1,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,    -1,   321,   322,   323,   324,    -1,   326,   327,    -1,
      -1,    -1,    -1,   332,   333,   334,   335,   336,   337,    -1,
      -1,   340,   341,    -1,   343,    -1,   345,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,   364,   365,   366,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,   375,    -1,   377,   378,
      -1,   380,   381,   382,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   396,   397,    -1,
      -1,    -1,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,    -1,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,    -1,    -1,   433,    -1,    -1,    -1,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
      -1,   450,    -1,    -1,   453,    -1,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,    -1,    -1,
     469,    -1,    -1,   472,   473,   474,   475,   476,    -1,    -1,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,    -1,
     489,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,   498,
     499,    -1,    -1,    -1,    -1,   504,    -1,    -1,    -1,    -1,
      -1,    -1,   511,    -1,   513,    -1,   515,    -1,    -1,   518,
     519,    -1,    -1,    -1,    -1,    -1,   525,   526,   527,    -1,
     529,   530,    -1,   532,    -1,    -1,   535,    -1,   537,    -1,
     539,    -1,   541,   542,   543,   544,    -1,    -1,    -1,   548,
      -1,    -1,   551,   552,   553,   554,   555,   556,    -1,    -1,
     559,   560,   561,   562,    -1,   564,   565,    -1,    -1,   568,
     569,   570,   571,    -1,    -1,   574,   575,    -1,   577,   578,
     579,   580,    -1,    -1,    -1,    -1,    -1,   586,   587,    -1,
      -1,    -1,    -1,   592,   593,   594,    -1,   596,   597,    -1,
     599,   600,    -1,    -1,    -1,    -1,    -1,   606,    -1,    -1,
     609,    -1,    -1,    -1,   613,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,   622,    -1,    -1,   625,    -1,    -1,    -1,
     629,    -1,   631,   632,   633,   634,    -1,    -1,   637,    -1,
      -1,    -1,   641,   642,    -1,    -1,   645,    -1,   647,   648,
      -1,     6,   651,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    16,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,   133,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,   198,    -1,   200,    -1,   202,    -1,    -1,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,    -1,   261,    -1,   263,    -1,
      -1,    -1,   267,    -1,    -1,   270,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,    -1,   287,   288,    -1,    -1,    -1,    -1,   293,    -1,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,    -1,   321,   322,   323,   324,
      -1,   326,   327,    -1,    -1,    -1,    -1,   332,   333,   334,
     335,   336,   337,    -1,    -1,   340,   341,    -1,   343,    -1,
     345,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,    -1,   358,   359,    -1,    -1,   362,   363,   364,
     365,   366,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,
     375,    -1,   377,   378,    -1,   380,   381,   382,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   396,   397,    -1,    -1,    -1,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,    -1,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,    -1,    -1,   433,    -1,
      -1,    -1,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,    -1,   450,    -1,    -1,   453,    -1,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,    -1,    -1,   469,    -1,    -1,   472,   473,   474,
     475,   476,    -1,    -1,    -1,   480,   481,   482,   483,   484,
     485,   486,   487,    -1,   489,   490,    -1,   492,    -1,    -1,
      -1,    -1,   497,   498,   499,    -1,    -1,    -1,    -1,   504,
      -1,    -1,    -1,    -1,    -1,    -1,   511,    -1,   513,    -1,
     515,    -1,    -1,   518,   519,    -1,    -1,    -1,    -1,    -1,
     525,   526,   527,    -1,   529,   530,    -1,   532,    -1,    -1,
     535,    -1,   537,    -1,   539,    -1,   541,   542,   543,   544,
      -1,    -1,    -1,   548,    -1,    -1,   551,   552,   553,   554,
     555,   556,    -1,    -1,   559,   560,   561,   562,    -1,   564,
     565,    -1,    -1,   568,   569,   570,   571,    -1,    -1,   574,
     575,    -1,   577,   578,   579,   580,    -1,    -1,    -1,    -1,
      -1,   586,   587,    -1,    -1,    -1,    -1,   592,   593,   594,
      -1,   596,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,
      -1,   606,    -1,    -1,   609,    -1,    -1,    -1,   613,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   622,    -1,    -1,
     625,    -1,    -1,    -1,   629,    -1,   631,   632,   633,   634,
      -1,    -1,   637,    -1,    -1,    -1,   641,   642,    -1,    -1,
     645,    -1,   647,   648,    -1,     6,   651,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,   133,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,   200,
      -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,    -1,
     261,    -1,   263,    -1,    -1,    -1,   267,    -1,    -1,   270,
     271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,    -1,   287,   288,    -1,    -1,
      -1,    -1,   293,    -1,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,    -1,
     321,   322,   323,   324,    -1,   326,   327,    -1,    -1,    -1,
      -1,   332,   333,   334,   335,   336,   337,    -1,    -1,   340,
     341,    -1,   343,    -1,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,    -1,   358,   359,    -1,
      -1,   362,   363,   364,   365,   366,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,   375,    -1,   377,   378,    -1,   380,
     381,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   396,   397,    -1,    -1,    -1,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,    -1,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
      -1,    -1,   433,    -1,    -1,    -1,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,    -1,   450,
      -1,    -1,   453,    -1,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,    -1,    -1,   469,    -1,
      -1,   472,   473,   474,   475,   476,    -1,    -1,    -1,   480,
     481,   482,   483,   484,   485,   486,   487,    -1,   489,   490,
      -1,   492,    -1,    -1,    -1,    -1,   497,   498,   499,    -1,
      -1,    -1,    -1,   504,    -1,    -1,    -1,    -1,    -1,    -1,
     511,    -1,   513,    -1,   515,    -1,    -1,   518,   519,    -1,
      -1,    -1,    -1,    -1,   525,   526,   527,    -1,   529,   530,
      -1,   532,    -1,    -1,   535,    -1,   537,    -1,   539,    -1,
     541,   542,   543,   544,    -1,    -1,    -1,   548,    -1,    -1,
     551,   552,   553,   554,   555,   556,    -1,    -1,   559,   560,
     561,   562,    -1,   564,   565,    -1,    -1,   568,   569,   570,
     571,    -1,    -1,   574,   575,    -1,   577,   578,   579,   580,
      -1,    -1,    -1,    -1,    -1,   586,   587,    -1,    -1,    -1,
      -1,   592,   593,   594,    -1,   596,   597,    -1,   599,   600,
      -1,    -1,    -1,    -1,    -1,   606,    -1,    -1,   609,    -1,
      -1,    -1,   613,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,   622,    -1,    -1,   625,    -1,    -1,    -1,   629,    -1,
     631,   632,   633,   634,    -1,    -1,   637,    -1,    -1,    -1,
     641,   642,    -1,    -1,   645,    -1,   647,   648,    -1,     6,
     651,     8,     9,    10,    11,    12,    -1,    -1,    -1,    16,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,   101,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,   133,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,   198,    -1,   200,    -1,   202,    -1,    -1,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,    -1,   261,    -1,   263,    -1,    -1,    -1,
     267,    -1,    -1,   270,    -1,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,   283,    -1,   285,    -1,
     287,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,    -1,   321,   322,   323,   324,    -1,   326,
     327,    -1,    -1,    -1,    -1,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,    -1,   343,    -1,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
      -1,   358,   359,    -1,    -1,   362,   363,   364,   365,   366,
      -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,   375,    -1,
     377,   378,    -1,   380,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   396,
     397,    -1,    -1,    -1,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,    -1,    -1,   433,    -1,    -1,    -1,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,    -1,   450,    -1,    -1,   453,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
      -1,    -1,   469,    -1,    -1,   472,   473,   474,    -1,   476,
      -1,    -1,    -1,   480,   481,   482,   483,   484,   485,   486,
     487,    -1,   489,   490,    -1,   492,    -1,    -1,    -1,    -1,
     497,   498,   499,    -1,    -1,    -1,    -1,   504,    -1,    -1,
      -1,    -1,    -1,    -1,   511,    -1,   513,    -1,   515,    -1,
      -1,   518,   519,    -1,    -1,    -1,    -1,    -1,   525,   526,
     527,    -1,   529,   530,    -1,   532,    -1,    -1,   535,    -1,
     537,    -1,   539,    -1,   541,   542,   543,   544,    -1,    -1,
      -1,   548,    -1,    -1,   551,   552,   553,   554,   555,   556,
      -1,    -1,   559,   560,   561,   562,    -1,   564,   565,    -1,
      -1,   568,   569,   570,   571,    -1,    -1,   574,   575,    -1,
     577,   578,   579,   580,    -1,    -1,    -1,    -1,    -1,   586,
     587,    -1,    -1,    -1,    -1,   592,   593,   594,    -1,   596,
     597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,   606,
      -1,    -1,   609,    -1,    -1,    -1,   613,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,   622,    -1,    -1,   625,    -1,
      -1,    -1,   629,    -1,   631,   632,   633,   634,    -1,    -1,
      -1,    -1,    -1,    -1,   641,   642,    -1,    -1,   645,    -1,
     647,   648,    -1,    -1,   651
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   130,   131,   132,   143,   144,   156,   170,
     190,   208,   210,   215,   218,   241,   244,   265,   282,   286,
     383,   400,   402,   416,   427,   449,   452,   454,   457,   467,
     468,   477,   479,   488,   494,   502,   507,   508,   509,   540,
     547,   591,   603,   607,   610,   615,   646,   664,   675,   678,
     679,   680,   681,   682,   684,   689,   691,   713,   746,   773,
     780,   781,   900,   983,  1071,  1079,  1127,  1128,  1129,  1132,
    1146,  1149,  1154,  1156,  1157,  1162,  1165,  1170,  1177,  1188,
    1189,  1307,  1309,  1322,  1323,  1341,  1345,  1349,  1356,  1371,
    1375,  1378,  1388,  1394,  1398,  1400,  1401,  1454,  1475,  1481,
    1483,  1484,  1486,  1493,  1496,  1523,  1529,  1530,  1531,  1532,
    1586,  1593,  1594,    12,   108,   127,   200,   243,   287,   421,
     500,   565,   567,   613,  1550,  1551,  1552,  1555,   283,   372,
    1164,  1524,   573,  1445,   235,     5,     6,     8,     9,    10,
      11,    12,    15,    16,    20,    23,    25,    26,    27,    28,
      29,    30,    32,    36,    40,    43,    44,    45,    47,    49,
      50,    53,    56,    57,    59,    60,    61,    63,    65,    66,
      67,    68,    69,    70,    72,    73,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    87,    88,    90,
      91,    92,    93,    94,    98,   101,   103,   106,   110,   111,
     112,   115,   120,   121,   126,   127,   129,   133,   135,   136,
     137,   138,   139,   143,   146,   147,   148,   152,   154,   155,
     157,   158,   159,   162,   163,   165,   166,   167,   168,   169,
     170,   173,   174,   175,   176,   177,   180,   181,   183,   184,
     185,   186,   187,   190,   191,   195,   196,   198,   200,   202,
     204,   205,   206,   207,   209,   211,   215,   216,   218,   221,
     222,   226,   227,   228,   229,   232,   233,   234,   237,   242,
     243,   244,   248,   252,   253,   255,   256,   261,   263,   266,
     267,   270,   273,   274,   280,   281,   283,   285,   287,   288,
     296,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   317,
     318,   319,   321,   322,   323,   324,   326,   327,   332,   333,
     334,   335,   336,   337,   340,   341,   343,   345,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   358,   359,   362,
     363,   364,   365,   366,   370,   371,   375,   377,   378,   380,
     381,   382,   385,   395,   396,   397,   399,   400,   401,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   414,
     416,   417,   418,   420,   422,   423,   424,   425,   426,   428,
     429,   430,   433,   437,   438,   439,   440,   441,   444,   445,
     446,   447,   448,   450,   451,   453,   454,   455,   458,   459,
     460,   461,   462,   463,   464,   465,   467,   469,   470,   472,
     473,   474,   476,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   492,   493,   497,   498,   499,
     500,   504,   508,   510,   511,   512,   513,   515,   516,   517,
     518,   519,   525,   526,   527,   529,   530,   532,   535,   537,
     539,   540,   541,   542,   543,   544,   547,   548,   551,   552,
     553,   554,   555,   556,   559,   560,   561,   562,   564,   565,
     568,   569,   570,   571,   574,   575,   577,   578,   579,   580,
     586,   587,   591,   592,   593,   594,   596,   597,   599,   600,
     602,   603,   606,   609,   611,   613,   614,   620,   622,   625,
     629,   631,   632,   633,   634,   641,   642,   643,   645,   646,
     647,   648,   651,   740,  1442,  1448,  1452,  1453,   317,   458,
     564,   567,  1477,  1477,   642,  1525,   108,   199,   287,   500,
     520,   565,   570,   605,   613,   722,   950,   951,   952,  1049,
    1050,  1051,   231,   294,   430,  1347,  1348,  1308,   108,   167,
     200,   235,   287,   421,   500,   565,   570,   588,   613,   629,
    1318,  1448,  1164,   103,   537,   782,   738,   739,   672,  1439,
    1441,  1448,   690,   128,   220,   294,  1324,   408,    87,   429,
    1399,   111,   235,   648,  1406,  1477,  1164,   664,   901,  1448,
    1395,   488,   613,  1477,  1164,   128,   294,  1325,  1344,  1389,
     523,   770,   774,   775,  1448,   738,  1525,  1448,  1192,  1193,
    1194,    61,    62,   125,   209,   283,   353,   405,   499,   586,
     671,  1011,  1448,  1455,  1460,  1464,  1465,  1357,   774,   204,
     512,   586,   204,   512,   567,  1351,   408,  1482,  1344,  1448,
      32,    79,   154,   416,   438,   479,   540,  1589,   494,   664,
    1190,     0,   156,   676,   416,   104,   275,   613,  1087,  1445,
    1448,  1450,  1451,  1513,  1514,   609,  1130,  1144,   176,   195,
     403,  1376,  1439,  1448,   160,  1091,  1448,   160,   740,   481,
    1485,   212,   740,  1450,   848,   849,   852,   875,  1448,  1439,
     230,  1317,   167,  1077,  1550,  1477,  1525,  1171,   747,   672,
     584,   185,  1147,  1158,    19,  1526,   230,   953,   212,  1450,
     850,   875,   953,   391,  1547,  1551,  1552,  1553,  1554,  1555,
     567,   951,   235,   235,   235,   197,  1316,  1440,  1448,  1347,
       8,    23,    29,    35,    37,    38,    39,    41,    54,    55,
      61,    62,    69,    72,    93,    96,    97,   102,   104,   107,
     108,   113,   114,   115,   120,   122,   125,   171,   178,   179,
     188,   195,   205,   207,   213,   219,   226,   230,   241,   245,
     272,   280,   291,   320,   325,   336,   340,   342,   346,   347,
     348,   349,   350,   357,   367,   368,   369,   373,   374,   398,
     405,   410,   411,   413,   428,   456,   457,   476,   478,   485,
     486,   492,   545,   546,   553,   557,   558,   563,   573,   577,
     578,   579,   580,   589,   590,   591,   595,   598,   613,   617,
     618,   619,   621,   626,   628,   633,   634,   651,   653,   654,
     657,   658,   659,   663,   664,   667,   668,   671,   672,  1009,
    1203,  1204,  1207,  1208,  1209,  1210,  1214,  1217,  1218,  1219,
    1220,  1221,  1222,  1229,  1230,  1425,  1427,  1429,  1430,  1431,
    1433,  1435,  1437,  1442,  1448,  1317,  1317,  1317,  1448,   212,
    1317,  1317,   875,  1317,  1317,  1317,  1477,   685,  1379,   135,
    1497,  1448,   382,    68,   434,   672,  1450,   231,  1123,  1448,
    1207,  1448,   246,  1402,  1476,  1477,   984,  1207,    48,   902,
     197,    35,   317,  1362,  1396,  1448,   738,  1166,  1477,   246,
    1326,   317,   429,   512,  1390,  1391,   622,   771,   502,   776,
    1494,   584,  1526,   604,  1533,  1534,   246,   389,  1284,  1285,
    1304,  1305,    13,   140,   220,   528,   529,   530,   531,   532,
     533,   550,  1199,  1200,  1201,  1546,   502,   672,    35,   125,
     160,   503,  1012,  1013,  1334,  1450,   194,  1334,   255,   434,
    1466,  1467,  1469,  1471,   671,  1450,    35,   125,  1015,  1016,
    1450,   672,   586,  1456,  1463,  1465,   666,  1457,  1334,    36,
      61,    72,    97,    99,   109,   158,   163,   166,   198,   200,
     209,   211,   234,   235,   262,   283,   317,   382,   409,   420,
     421,   424,   425,   445,   499,   512,   548,   567,   632,  1011,
    1048,  1358,  1362,  1363,  1365,  1461,   776,   448,   535,  1141,
    1142,  1143,   434,   638,  1133,  1134,  1135,  1141,  1350,  1448,
    1477,  1123,    37,   219,   573,  1426,  1446,  1588,  1588,  1588,
      96,  1587,  1588,  1588,  1192,  1190,   665,   670,  1448,   664,
    1206,   664,   228,   671,   228,   466,   666,  1518,   301,   302,
     446,   447,   525,   526,   527,   711,  1145,   613,  1136,  1137,
     160,  1373,  1372,   334,   571,   597,  1073,   611,  1451,  1075,
    1450,   854,   876,  1448,  1074,   385,     7,    58,   144,   368,
     433,   435,   877,  1072,   171,   738,   740,   534,  1556,  1557,
    1076,  1155,  1172,  1173,  1174,  1175,  1439,   664,   748,  1448,
     692,   693,  1314,  1315,  1439,  1314,    57,   370,   370,   449,
    1527,   367,   368,  1213,  1448,   853,   876,   193,     7,   738,
     457,    11,   167,   200,   421,   588,   725,  1549,  1557,  1572,
    1574,  1575,  1581,   200,   725,  1548,  1557,  1572,  1575,  1581,
    1550,  1555,   953,  1448,  1448,  1448,  1316,  1439,  1448,   197,
     666,   672,  1346,   664,   664,   664,  1217,   664,   664,   664,
    1207,  1242,   664,   664,   664,   664,   664,   664,   664,   664,
    1206,  1206,   664,   998,   664,   664,   664,   573,   664,   664,
     664,   664,   664,   664,   664,   664,   664,   664,   664,   664,
     664,  1207,   664,   664,   664,  1240,  1241,  1435,  1448,   664,
     664,   664,   664,   664,   664,   664,   664,   664,  1207,   998,
     664,   664,   664,   664,   664,   664,   664,   664,   664,   664,
     664,   664,   664,   664,   664,   664,   664,   998,   573,   664,
     664,   664,   573,   664,   664,   664,    37,   219,   573,   664,
    1206,   998,   998,   664,   664,   664,   664,   664,   664,   664,
     664,  1217,  1217,  1217,  1207,  1542,  1543,  1448,   671,  1231,
    1450,  1448,   666,    18,    19,    21,   388,   391,   649,  1205,
    1211,  1212,  1445,  1448,   160,   161,   201,   214,   254,   268,
     295,   360,  1215,    33,   141,   249,   276,   346,   443,   505,
     506,   518,   655,   656,   657,   658,   659,   660,   661,   662,
    1213,  1217,    71,   390,  1446,   259,   260,   664,   672,  1448,
     740,  1448,   379,   876,   740,  1450,   371,   631,   886,   888,
    1319,  1320,  1321,  1363,   740,   738,  1313,  1317,   616,   686,
      35,   133,   158,   162,   202,   222,   288,   384,   420,   429,
     444,   469,   513,   544,  1380,  1385,  1386,  1477,    86,   671,
     783,   784,   785,   786,  1448,    13,    14,    99,   130,   144,
     167,   170,   183,   210,   235,   241,   286,   422,   426,   442,
     450,   458,   494,   507,   508,   559,   588,   610,   612,  1498,
    1500,  1502,  1503,    21,   160,  1272,  1273,  1487,  1448,  1326,
     517,   672,    50,    85,   294,  1408,  1439,  1478,  1479,  1163,
     665,   278,   281,   431,   903,   905,   671,   683,  1445,   288,
    1167,  1451,  1168,  1169,  1439,  1150,  1439,    50,  1392,   666,
    1446,    56,    66,    76,    90,    91,    92,   106,   335,   352,
     490,   552,   569,   777,   779,    13,   426,  1495,  1500,   488,
    1528,  1527,    13,   140,  1539,   146,   393,   671,  1302,  1303,
    1306,  1450,    48,   277,  1288,  1289,   197,  1196,   194,   286,
    1202,  1203,  1201,  1448,    71,  1018,  1207,  1451,   405,   573,
    1473,   274,   381,   644,   666,  1470,   666,  1468,   209,   283,
     499,  1462,  1334,  1448,  1466,  1457,  1334,  1458,  1459,  1460,
    1464,    13,    35,   125,   379,  1207,  1474,   166,   276,   636,
    1369,   664,   108,   167,   200,   421,   567,   588,   613,   629,
    1369,    13,   962,  1450,  1288,   197,   249,  1364,  1366,    70,
     544,   194,   544,   564,    70,   544,    13,    43,    94,    98,
     253,   333,   397,   519,   561,  1352,  1353,  1354,   166,   222,
     544,   544,  1288,  1369,  1366,   288,   157,    73,   423,   564,
     587,   544,   625,   666,   381,   644,    88,   666,   194,   712,
    1315,   494,   664,   668,  1245,  1246,  1247,  1248,  1249,  1253,
    1439,   666,   380,  1591,   560,  1592,   647,   258,   472,  1590,
     665,  1285,  1289,  1534,  1535,  1537,  1538,   156,   677,   665,
     665,    48,  1450,    48,   638,    65,   256,   366,   536,   554,
     645,  1509,  1510,  1514,   638,  1084,   160,   160,   160,   160,
     160,   160,   666,   160,  1131,   405,  1138,  1450,   194,  1188,
    1322,  1323,  1341,  1345,  1374,  1377,  1426,  1448,   125,   948,
     949,   959,   960,  1021,   111,   741,   317,     7,   855,   741,
     664,   110,   872,   872,   872,     4,     7,    12,    14,    17,
      27,    28,    58,    63,    64,    69,    77,    83,    84,    87,
      96,   111,   129,   137,   138,   144,   152,   158,   169,   192,
     233,   235,   242,   263,   286,   323,   341,   345,   383,   389,
     396,   405,   437,   452,   453,   454,   484,   541,   542,   543,
     548,   565,   568,   591,   604,   611,   638,   641,   955,   957,
     959,   960,  1092,  1093,  1094,  1099,  1102,  1105,  1111,  1112,
    1113,  1114,  1118,  1120,  1121,  1281,  1078,   493,   629,  1557,
    1314,   249,   666,   235,   264,   402,  1046,  1183,  1185,  1186,
     749,   750,  1207,   232,   296,   297,   298,   299,   300,   303,
     304,   305,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   318,   319,   707,   708,   711,   459,   460,   461,
     462,   463,   464,   465,   694,   695,   176,   430,   666,  1148,
      59,   176,   180,   194,   332,   430,  1159,  1160,  1161,    57,
     449,   171,   721,   855,   111,   872,  1513,   200,   953,   740,
    1448,   740,   740,  1557,  1439,  1052,  1053,  1052,  1052,   616,
     402,  1251,  1252,   672,  1246,  1440,   659,  1448,  1207,  1207,
      13,   140,  1236,  1274,  1236,  1236,  1236,   635,  1244,  1207,
    1207,  1207,  1239,  1239,  1207,  1207,  1207,   140,  1236,  1274,
     374,   665,   665,  1207,  1207,  1207,  1207,  1435,  1542,   116,
     117,   118,   119,   120,   223,   224,   225,   226,   336,   338,
     339,   340,   347,   428,   491,   492,   633,   650,   651,  1269,
    1270,  1207,  1238,  1239,   112,   115,   577,   580,  1271,   140,
    1232,  1207,  1207,  1207,  1207,  1269,  1207,  1239,  1241,    10,
     666,   672,   140,  1236,  1207,  1207,   140,  1236,  1207,  1207,
    1239,  1239,  1239,  1207,  1207,  1239,  1210,  1207,  1207,  1207,
    1207,  1207,  1207,   665,  1207,  1236,  1236,  1207,  1207,   140,
    1236,  1207,  1270,  1270,  1207,    46,   269,   585,  1207,  1207,
     665,  1436,  1437,  1448,  1236,  1236,  1207,  1207,  1207,  1236,
    1236,   665,   666,   665,   494,   664,  1540,  1541,  1207,  1462,
     503,   672,  1204,  1445,  1448,  1207,  1207,  1207,   179,   373,
     590,   606,  1213,    13,    20,  1209,  1216,  1210,  1210,   664,
    1217,  1210,  1210,  1210,  1210,   276,  1210,  1210,   245,  1210,
     245,  1210,  1210,  1210,  1210,  1210,    33,   249,   276,   443,
    1450,  1217,  1446,  1446,  1207,  1226,  1227,  1228,   659,  1448,
     672,  1439,  1319,   666,  1321,   158,  1451,  1512,  1314,  1310,
     671,   687,   688,   288,   288,   288,   288,    50,   288,   288,
     666,  1381,   115,   577,   580,   778,   788,  1230,  1429,  1435,
    1450,   666,   160,   420,  1501,   482,   482,   565,   570,   613,
     629,   386,  1505,   564,   379,  1507,    67,   512,  1504,   109,
     629,  1506,   379,   666,  1448,   186,   364,  1448,  1488,  1489,
    1439,  1445,  1448,  1178,   283,  1407,  1273,   666,  1314,    73,
     664,   910,   911,   910,   911,   403,   913,   216,   264,  1450,
      31,   584,  1397,   666,   584,   666,   584,  1314,  1251,    13,
    1393,  1391,   666,   160,  1501,   379,   379,  1448,  1189,   573,
    1447,  1447,  1450,   666,  1207,  1286,  1434,   291,   374,   595,
    1290,  1291,  1427,  1448,  1202,   145,  1198,  1246,   636,  1275,
     610,   249,   125,  1017,  1020,  1450,  1334,   664,   434,   455,
     497,  1472,  1469,  1467,   672,   672,   672,  1465,  1207,  1474,
     666,  1463,   249,  1367,  1445,  1207,   659,   953,   740,   740,
     740,  1439,   740,   738,  1439,   288,   351,   544,  1361,  1361,
    1369,  1448,   740,  1369,  1451,  1364,   740,  1369,   252,   562,
     181,   194,  1355,   666,  1367,   712,  1364,  1439,  1366,  1364,
    1364,   276,   636,  1370,  1370,  1143,   515,  1135,    60,  1199,
    1248,  1254,  1257,  1448,   100,   238,   258,   272,   356,   478,
     550,  1250,   502,   666,  1251,  1426,   406,   194,  1288,   573,
     405,   573,  1450,   573,   573,   573,    19,  1508,   321,   322,
     326,   327,  1085,  1086,     5,   405,  1080,  1081,  1082,  1083,
    1443,  1445,   122,   188,   291,   374,   595,  1295,  1443,   122,
     188,   219,   291,   374,   595,  1293,  1445,  1445,   711,  1445,
     712,   160,   126,  1139,    87,   949,    71,  1011,   136,    77,
      93,   266,   344,   370,   432,   534,   743,   745,   264,   439,
     599,   873,   874,   237,   869,   870,   871,   878,   886,   888,
     108,   221,   395,   405,   412,   516,   613,   723,   724,  1445,
      26,   324,   863,   864,   865,   878,   879,   880,   886,   888,
     856,   857,   863,    74,    89,   402,   970,   973,   974,  1044,
    1046,  1050,  1051,  1122,  1334,  1335,  1122,   402,  1335,  1335,
    1122,  1335,   402,   402,  1335,  1335,  1335,  1335,   584,   136,
    1335,   262,   402,   565,   193,   402,   419,  1046,  1122,   262,
    1335,   402,   402,   565,   136,  1335,  1335,  1335,  1335,  1335,
    1122,   402,    48,  1335,  1335,   402,    21,   160,   584,  1046,
    1126,   402,   402,  1335,  1335,  1335,  1335,   139,   333,  1335,
    1335,   402,  1335,   404,   620,   620,   955,   402,   451,   898,
    1100,   666,   666,   664,   672,   969,   975,  1438,  1448,   379,
     733,  1088,   127,   248,  1439,   125,  1176,  1448,  1174,  1439,
    1184,   664,  1185,   665,   666,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   666,   712,   160,   160,
     160,   160,   160,   160,   160,   666,  1315,   611,  1160,   947,
     948,    77,   365,   440,   600,   866,   867,   868,   878,   882,
     883,   884,   885,   886,   888,   643,   615,   851,  1518,  1448,
     740,   664,   474,  1582,     9,    31,   846,   714,   593,   616,
    1060,   379,   379,   379,  1246,   664,  1275,  1448,  1275,   672,
    1346,   666,   665,  1236,   665,  1207,   665,   665,   665,  1207,
     150,   635,  1243,    21,   665,   616,   665,   666,   665,   665,
     666,   616,   666,  1239,   665,   659,   665,   666,   666,   665,
     665,   665,   665,   197,   666,   665,   666,  1239,   665,   666,
     666,   666,   658,   666,   665,   665,   664,  1435,  1448,  1236,
     665,   665,   665,  1236,   665,   666,   665,   665,   665,   665,
     665,   666,   665,   249,   665,   666,   666,   665,   666,   666,
     665,   665,   665,   666,   197,   666,  1236,   665,   665,   666,
     666,   666,   665,   197,  1207,   197,  1207,   197,  1207,   197,
     665,   666,   665,   665,   665,   665,   666,    21,   274,   666,
    1036,   665,   666,   665,  1239,  1255,  1256,   494,   664,  1191,
     604,   669,  1450,  1207,  1448,   179,   373,   590,   606,   664,
      19,  1207,  1542,   165,  1277,  1210,  1207,  1207,  1210,   664,
    1217,  1210,  1205,   665,   666,   664,   672,  1448,  1311,  1321,
    1335,   666,    52,   471,  1124,  1314,  1450,   666,   712,  1386,
    1314,  1387,   786,   789,   790,   785,   375,   486,   787,   564,
     664,  1515,  1451,  1515,  1515,  1515,   200,   421,   567,  1499,
    1503,   160,   186,   201,   214,   267,   268,   295,   364,   418,
    1490,  1492,  1275,  1251,   672,  1179,  1180,  1181,  1182,  1439,
     236,   294,   434,   644,  1480,  1479,   664,   919,  1210,   122,
     188,   219,   291,   374,   595,  1294,  1297,  1298,   556,   914,
     904,    12,   906,  1207,  1445,  1451,  1451,  1169,  1439,   176,
     430,   614,  1151,  1152,  1153,   494,   502,   621,   622,   664,
     945,  1327,  1328,  1330,  1331,  1332,   712,   779,   778,   666,
    1451,   200,   421,  1499,  1011,  1014,  1303,    22,   131,  1287,
     666,   378,   666,  1207,   212,  1278,   504,   405,  1473,  1473,
      78,   596,   434,  1334,  1459,  1445,   197,  1368,   665,  1448,
    1451,  1369,   429,  1288,  1354,  1368,  1369,  1364,  1439,  1369,
    1369,  1445,  1207,  1443,  1203,   604,   665,  1536,  1537,  1245,
     258,   258,   392,  1258,   258,   272,   478,  1258,  1253,  1245,
    1342,  1343,  1436,  1247,  1273,   666,   337,   573,    21,    48,
    1509,  1293,  1293,  1293,  1293,  1086,   286,   607,   174,  1082,
     125,   245,   362,  1445,   160,   407,  1140,  1294,  1335,  1335,
     354,  1445,   534,   534,   534,   534,   534,   493,  1445,  1445,
    1335,   666,   871,  1445,  1445,  1445,  1445,  1293,  1445,  1445,
     665,   666,  1335,  1335,   666,   865,   858,   859,   878,   879,
     880,  1068,  1438,  1164,    64,   193,   419,   605,   972,  1045,
    1068,  1046,  1047,  1047,   125,  1448,  1438,  1164,  1295,  1293,
    1438,  1293,    13,  1101,  1109,  1110,  1448,  1164,  1445,  1445,
    1445,  1445,  1011,  1335,  1293,  1101,   264,  1109,   264,  1438,
    1438,   961,  1450,  1110,  1101,  1335,   186,   267,   370,   964,
    1293,   125,  1448,  1295,  1295,  1438,  1164,  1282,  1283,  1436,
     125,  1293,  1445,  1164,  1438,  1439,  1164,  1164,    80,    82,
     125,   148,   187,   441,   963,   125,  1293,   125,  1293,   125,
    1293,  1448,  1293,  1101,   958,   899,   404,     7,   144,  1114,
    1118,  1094,  1111,  1118,   966,   967,   968,   969,   970,  1448,
       9,   186,  1125,   442,   971,   972,  1038,   976,   672,    81,
     489,   452,  1089,  1558,   664,   419,  1265,  1266,  1267,  1448,
    1207,   664,  1293,  1443,  1293,  1293,  1443,  1443,  1293,  1293,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1293,  1293,
    1443,  1430,   708,   664,   696,   696,   664,   701,   701,   664,
     704,   704,   664,   699,   695,  1335,  1335,  1335,  1335,   666,
     868,  1450,   287,   177,   184,   860,   861,   862,   878,   879,
     880,   881,   884,   885,   886,   887,   888,  1084,   474,   726,
    1576,   123,   247,   436,   551,   965,   664,   130,   241,   610,
     847,   276,   664,   890,   954,   956,   957,    47,   216,   487,
    1065,  1065,  1439,  1439,  1439,  1275,  1268,  1448,  1284,   245,
    1207,   665,   576,  1207,  1207,   154,    35,    62,   112,   115,
     123,   261,   358,   510,   580,   608,  1237,  1012,  1207,  1207,
    1012,  1237,   665,   665,   245,   245,  1207,  1207,  1207,   389,
    1234,  1207,  1207,  1207,  1207,  1207,  1210,   665,   665,  1207,
    1207,  1207,  1207,  1207,  1207,  1239,   245,  1207,  1207,  1207,
     665,  1207,  1207,  1207,  1207,   197,  1207,   197,  1207,   197,
    1207,  1207,  1207,    35,    62,  1031,  1032,  1033,  1034,  1035,
    1294,  1293,   665,  1236,   665,  1195,  1196,  1197,  1544,  1545,
    1546,  1255,  1191,   665,  1539,   672,  1069,  1542,  1209,   665,
     666,   665,  1217,  1269,  1269,    19,  1207,  1542,  1277,  1228,
    1238,   659,  1448,  1312,   961,  1451,  1124,   688,  1382,   160,
     666,  1448,  1516,  1517,   584,   659,  1439,  1448,  1511,  1511,
    1511,  1491,  1288,   502,  1327,  1328,   666,  1183,  1185,  1447,
     644,   283,   907,   908,   909,  1448,   665,    48,   664,   921,
     911,   160,   664,   584,  1152,  1199,  1342,   665,   945,  1329,
    1432,  1433,  1436,  1448,  1533,   664,  1333,  1336,   160,   210,
     197,  1511,  1511,  1511,  1013,    73,  1410,  1434,  1291,  1291,
      48,   217,  1276,   343,   664,   665,  1474,  1295,  1359,   163,
     632,   374,  1360,  1275,  1364,  1195,  1539,  1273,   669,   258,
    1253,  1258,  1258,   258,   379,   379,   616,   666,  1275,  1334,
     192,   231,   615,  1260,  1261,  1262,  1263,  1264,  1293,  1445,
    1445,   739,  1294,  1445,   160,  1020,  1013,   111,   111,   127,
     248,   291,   374,   595,   889,  1296,  1297,  1442,   871,   724,
     889,   889,   865,   666,   859,  1103,   664,   264,   264,  1047,
    1068,  1053,  1068,  1068,   144,   502,  1101,  1115,  1096,   666,
    1294,  1013,  1445,   565,  1438,  1124,   638,   565,  1445,  1116,
    1101,   666,  1287,  1101,   584,  1106,  1101,   664,   902,   665,
     666,  1448,  1439,    34,    35,    40,    42,    44,    45,    62,
     112,   115,   123,   142,   159,   187,   189,   205,   206,   247,
     261,   280,   289,   290,   292,   329,   330,   331,   348,   349,
     350,   355,   358,   376,   377,   410,   411,   436,   498,   502,
     514,   574,   577,   580,   581,   582,   583,   623,   624,   651,
     977,   985,   988,   989,   990,   991,   992,   993,   994,  1448,
     368,   417,    25,   168,   727,   584,   137,   152,   729,   664,
    1559,  1101,   665,   666,   709,   710,  1293,   665,   697,   698,
    1448,   665,   702,   703,  1448,   665,   705,   706,  1443,  1444,
     664,   665,   700,  1445,  1294,   889,   889,   868,   385,   212,
    1335,  1335,   666,   862,  1080,   965,   379,   751,   752,   754,
    1448,   517,  1583,   379,  1439,   276,   891,   896,   897,   898,
     966,   896,   666,   956,   715,   717,   719,   665,   666,   277,
    1292,  1207,   665,  1207,   576,   664,  1002,  1003,  1003,   664,
     997,   664,   995,   996,  1002,  1003,   247,   997,   247,   665,
     665,   665,   665,   665,  1207,  1207,   665,   665,   666,   665,
      48,   496,  1233,   666,   666,   665,   666,   665,   249,  1223,
    1224,   665,   665,   665,   665,   666,   665,   665,  1207,   665,
     194,   665,   665,   666,   665,   666,   666,   665,  1207,   665,
    1207,   665,  1207,   665,   665,   665,   664,  1026,  1026,    22,
     131,   476,   657,  1028,  1029,  1030,   666,   666,   665,  1275,
    1203,  1546,  1195,   665,  1536,  1540,  1448,   665,  1239,  1209,
     665,   666,   665,   665,  1119,  1120,  1121,   194,   638,  1383,
      56,    66,    76,    90,    91,    92,   106,   335,   352,   473,
     490,   552,   569,   791,   790,   665,   666,  1513,   672,   672,
     584,   584,   584,   664,  1342,   379,  1340,  1340,  1181,  1439,
    1185,   231,  1187,  1403,   665,   666,   905,   402,   922,   923,
    1294,   907,  1451,  1203,   664,  1330,  1331,   665,   665,   666,
     672,   125,  1207,  1337,  1338,  1339,   666,   778,   386,  1512,
     197,   197,   197,   153,   164,   387,   572,  1411,  1412,   279,
    1413,  1279,  1434,  1207,  1284,  1473,  1288,  1288,  1369,  1540,
    1245,  1253,   258,   258,  1245,  1253,  1207,  1207,   664,  1343,
    1284,  1339,  1046,  1046,  1261,   120,  1445,   859,   403,   664,
    1104,  1207,  1068,  1053,   664,  1052,  1052,   125,   125,   975,
    1159,  1110,  1018,   567,   977,  1095,  1283,  1438,  1107,  1109,
    1097,  1387,   968,   664,  1039,  1002,  1002,  1003,   997,   995,
     415,   986,   995,   995,    23,    35,    49,   602,  1011,  1022,
    1023,  1024,    62,   623,   989,   991,  1024,  1024,    62,   624,
     624,   627,   995,   987,  1003,   997,   997,  1024,  1002,  1003,
      27,    71,    75,    77,   125,   373,   379,   419,   498,   548,
     605,  1005,  1006,  1007,  1019,  1037,  1213,   627,  1002,  1024,
      35,  1002,  1025,  1002,  1002,  1003,   664,   996,  1004,   672,
     417,  1207,  1207,   379,   733,   740,   379,    77,   734,  1448,
    1560,    21,   665,  1266,   665,   666,   665,   666,   665,   666,
     672,   665,   666,   698,   665,   666,   664,  1448,   889,   889,
     862,   517,   489,   665,   666,   753,  1445,   239,   249,   394,
     755,   756,   757,   758,  1439,  1439,   945,   665,   231,   457,
     893,  1409,   956,   664,   664,   664,  1448,  1291,  1269,  1207,
     122,   291,   374,   595,  1024,   374,   374,  1269,  1269,  1207,
    1235,  1434,  1426,   665,  1207,  1207,  1239,    44,   356,   665,
     638,  1225,  1207,  1269,  1207,  1207,  1207,  1207,   665,   665,
     665,  1294,   665,  1036,  1031,  1029,  1031,  1032,  1293,  1278,
     665,  1239,  1121,  1120,  1384,   434,  1517,   638,  1520,   659,
     659,  1513,  1513,  1513,  1338,  1340,   147,  1187,   270,  1409,
     909,   216,   264,   924,   665,   666,   665,  1195,  1535,  1330,
    1331,  1432,  1448,   665,   666,  1336,   197,  1512,  1512,  1512,
      48,    48,   153,    48,  1412,   538,   572,  1414,  1415,   639,
     640,   666,  1280,  1288,   665,   712,   379,   616,  1253,  1253,
     379,   616,  1268,  1292,   194,  1259,  1259,  1294,   922,   665,
     664,   664,  1066,  1067,  1448,   664,   664,   115,   577,   580,
     657,   658,  1428,  1429,  1125,  1439,  1117,  1164,  1108,  1151,
     665,  1040,  1448,   320,  1041,   510,   608,   652,   999,  1000,
    1001,   664,   999,   999,    35,    23,   602,  1011,    35,  1012,
    1024,   627,   999,   664,  1024,   999,  1017,   125,   148,   187,
    1445,  1009,  1010,  1428,   610,   125,   125,   139,   333,   264,
      71,  1007,   203,   978,   264,   373,  1024,  1025,  1024,  1025,
     999,   374,   999,  1448,  1269,   512,  1445,   143,  1090,   665,
     666,  1561,  1562,   710,   698,   703,  1448,   706,   666,   664,
     723,  1445,   727,  1577,   754,   985,  1008,   665,   666,   753,
     194,   665,   665,   954,    21,   946,  1066,  1066,  1066,   665,
     665,   665,   665,   665,   665,   666,   665,   665,   665,   666,
     665,   666,   665,   343,   266,   429,   665,   665,   665,   665,
     665,   665,  1027,   665,   666,  1276,   665,   175,   286,   210,
    1518,  1518,  1518,   665,   264,   246,   664,   912,   906,   925,
    1448,   923,  1339,  1512,  1426,  1426,    48,  1426,    48,    48,
    1415,  1434,   421,  1299,  1207,   664,  1207,   664,   665,   212,
     258,   389,   664,   664,   665,  1066,  1066,   665,   666,  1287,
     664,  1066,  1066,  1430,  1430,  1098,  1099,  1125,   246,   665,
     666,   198,   401,   511,   379,  1042,  1001,  1070,  1426,  1012,
    1025,  1070,  1009,   622,  1017,    15,    21,   728,   735,   736,
    1448,   494,   664,  1563,  1567,   698,   698,   665,   732,   733,
     474,  1018,  1584,   757,  1448,   149,   892,   896,   664,   945,
     665,   665,   665,   374,  1434,  1207,   343,   173,   665,  1293,
    1284,   386,   638,  1519,  1519,  1519,   610,   567,   919,   915,
     664,   621,   926,  1426,  1426,  1426,    16,  1304,  1305,  1268,
    1268,    48,    48,  1265,  1267,   665,   665,    77,   263,  1054,
    1057,  1060,  1061,  1062,  1067,   374,   665,   665,   664,  1448,
     130,   610,   665,   666,   665,   664,   539,   730,    54,    68,
     182,   230,   257,   271,   382,   475,   737,   796,   798,   799,
     800,   802,   803,   804,   805,   806,   807,   809,   817,   818,
     821,   832,   835,   837,   838,  1442,  1449,  1453,  1568,   664,
    1565,  1566,   638,  1569,  1564,   665,   666,   729,  1578,   742,
    1008,   485,  1535,   893,   945,   894,  1054,   638,  1055,  1059,
    1061,  1064,  1056,  1058,  1061,  1063,   665,   665,   665,  1288,
     210,   321,   322,   326,   327,  1521,  1522,  1342,  1439,   665,
     555,   920,   917,   918,  1448,   249,   273,    77,   111,   235,
     323,   341,   365,   565,   942,   943,   944,  1363,   664,  1202,
     665,   665,   665,   665,  1038,  1054,  1445,  1335,  1062,  1287,
     665,  1055,  1056,   922,    52,   370,   471,   502,  1043,  1043,
    1024,  1426,  1024,   984,  1207,   155,   731,   819,   822,  1448,
     197,   364,   810,   797,  1449,  1449,  1448,   801,   679,   293,
     456,   637,   841,    32,   839,   673,  1192,  1565,   665,  1567,
      53,    64,   283,  1533,   698,   734,  1008,   134,   743,   744,
    1213,  1585,   191,   414,  1570,  1571,   665,  1533,   716,   399,
     718,  1064,   720,  1063,  1299,   386,  1293,  1293,  1293,  1293,
    1522,  1251,  1294,   665,   666,   928,   575,  1335,   136,   136,
    1335,  1335,  1335,  1335,   664,   937,   944,   158,   374,  1300,
    1301,  1293,   665,     6,   125,   373,   379,   379,   665,  1207,
    1207,   635,   824,   828,   197,  1448,   812,   813,  1207,   760,
     795,   796,   798,   800,   802,   804,   805,   806,   807,   809,
     817,   832,   835,   837,   760,   842,   840,   833,   836,   665,
    1535,    64,   386,    64,   665,   143,  1579,   134,   795,  1450,
    1573,   895,  1119,  1442,  1119,  1119,  1202,  1404,   916,   918,
     664,   930,   932,   927,  1445,  1335,  1335,  1296,  1296,  1294,
    1448,   556,   938,   939,  1335,   665,   666,   610,   130,   549,
     630,   982,   820,   829,   150,   828,   831,   246,   154,  1207,
     154,   795,   670,   609,  1207,   761,   841,   839,   386,   386,
     735,   742,   795,  1535,  1014,   920,   664,   931,   932,   933,
     328,   929,   932,  1445,  1445,   940,   665,   666,   961,  1301,
    1043,  1043,    77,   373,   605,   979,   980,   981,  1037,  1213,
     635,   823,   825,  1207,   760,   154,   808,   230,   814,   293,
     670,   844,   843,   124,   759,   762,   834,  1449,   834,  1580,
    1405,   665,   666,   328,   935,   936,  1210,   941,  1450,   939,
    1445,   264,   981,   264,   373,   826,   825,   831,   830,    54,
     811,  1448,   576,  1207,   143,    95,   172,   766,   792,  1448,
     154,   795,   670,   795,   483,  1416,   932,   666,   934,   942,
    1207,   154,   576,   666,   760,   845,   760,   215,   666,   763,
      86,   105,   670,   228,  1410,   936,   665,   827,    54,   760,
    1448,   815,   154,   154,   194,  1448,  1008,   194,   194,    48,
    1413,   576,   150,   151,   816,   456,   637,   764,   125,   793,
     769,   770,  1293,   765,  1426,   231,  1417,   760,   760,   812,
     522,   524,   767,   768,   769,   772,  1213,  1448,   794,  1188,
     374,   664,  1419,   666,   795,   196,  1207,   279,   483,  1418,
     665,   671,  1420,  1421,  1436,   502,  1422,   768,  1450,   665,
     666,  1423,  1424,  1436,  1421,   666,  1334,  1424,  1339
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  However,
   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
   discussed.  */

#define YYFAIL		goto yyerrlab
#if defined YYFAIL
  /* This is here to suppress warnings from the GCC cpp's
     -Wunused-macros.  Normally we don't worry about that warning, but
     some users do, and we want to make it easy for users to remove
     YYFAIL uses, which will produce warnings from Bison 2.5.  */
#endif

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))

/* Error token number */
#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (YYID (N))                                                     \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (YYID (0))
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

__attribute__((__unused__))
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
#else
static unsigned
yy_location_print_ (yyo, yylocp)
    FILE *yyo;
    YYLTYPE const * const yylocp;
#endif
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += fprintf (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += fprintf (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += fprintf (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += fprintf (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += fprintf (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */
#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, YYTHD)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, YYTHD); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (YYTHD);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
        break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, YYTHD)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    class THD *YYTHD;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , YYTHD);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, YYTHD); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULL;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - Assume YYFAIL is not used.  It's too flawed to consider.  See
       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
       for details.  YYERROR is fine as it does not invoke this
       function.
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, YYTHD)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    class THD *YYTHD;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
        break;
    }
}




/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (class THD *YYTHD)
#else
int
yyparse (YYTHD)
    class THD *YYTHD;
#endif
#endif
{
/* The lookahead symbol.  */
int yychar;


#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
static YYSTYPE yyval_default;
# define YY_INITIAL_VALUE(Value) = Value
#endif
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc = yyloc_default;


    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
/* Line 1792 of yacc.c  */
#line 1599 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
                !thd->m_parser_state->has_comment())
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:
/* Line 1792 of yacc.c  */
#line 1611 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:
/* Line 1792 of yacc.c  */
#line 1636 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 20:
/* Line 1792 of yacc.c  */
#line 1664 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {  MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 22:
/* Line 1792 of yacc.c  */
#line 1666 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 31:
/* Line 1792 of yacc.c  */
#line 1675 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 46:
/* Line 1792 of yacc.c  */
#line 1690 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 52:
/* Line 1792 of yacc.c  */
#line 1696 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 53:
/* Line 1792 of yacc.c  */
#line 1697 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].set)); }
    break;

  case 56:
/* Line 1792 of yacc.c  */
#line 1700 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 62:
/* Line 1792 of yacc.c  */
#line 1706 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 65:
/* Line 1792 of yacc.c  */
#line 1713 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 68:
/* Line 1792 of yacc.c  */
#line 1728 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (4)].lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
    break;

  case 69:
/* Line 1792 of yacc.c  */
#line 1748 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 70:
/* Line 1792 of yacc.c  */
#line 1755 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 71:
/* Line 1792 of yacc.c  */
#line 1765 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 72:
/* Line 1792 of yacc.c  */
#line 1772 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 77:
/* Line 1792 of yacc.c  */
#line 1787 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 78:
/* Line 1792 of yacc.c  */
#line 1799 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 79:
/* Line 1792 of yacc.c  */
#line 1807 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 80:
/* Line 1792 of yacc.c  */
#line 1818 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
    break;

  case 81:
/* Line 1792 of yacc.c  */
#line 1829 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 82:
/* Line 1792 of yacc.c  */
#line 1831 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 83:
/* Line 1792 of yacc.c  */
#line 1841 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 86:
/* Line 1792 of yacc.c  */
#line 1850 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_DB);
          }
    break;

  case 87:
/* Line 1792 of yacc.c  */
#line 1857 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_DB);
          }
    break;

  case 88:
/* Line 1792 of yacc.c  */
#line 1864 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_TABLE);
          }
    break;

  case 89:
/* Line 1792 of yacc.c  */
#line 1871 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
    break;

  case 90:
/* Line 1792 of yacc.c  */
#line 1878 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
    break;

  case 91:
/* Line 1792 of yacc.c  */
#line 1885 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
    break;

  case 92:
/* Line 1792 of yacc.c  */
#line 1893 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_REWRITE_DB);
          }
    break;

  case 93:
/* Line 1792 of yacc.c  */
#line 1902 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 94:
/* Line 1792 of yacc.c  */
#line 1908 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 95:
/* Line 1792 of yacc.c  */
#line 1915 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 96:
/* Line 1792 of yacc.c  */
#line 1922 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 97:
/* Line 1792 of yacc.c  */
#line 1930 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *db_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                           (yyvsp[(1) - (1)].lex_str).length,
                                                           thd->charset());
            (yyval.item)= db_item;
          }
    break;

  case 98:
/* Line 1792 of yacc.c  */
#line 1940 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 99:
/* Line 1792 of yacc.c  */
#line 1946 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 100:
/* Line 1792 of yacc.c  */
#line 1952 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (5)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (5)].item));
          }
    break;

  case 101:
/* Line 1792 of yacc.c  */
#line 1960 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(4) - (7)].item));
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(6) - (7)].item));
            (yyval.item_list)= (yyvsp[(1) - (7)].item_list);
          }
    break;

  case 102:
/* Line 1792 of yacc.c  */
#line 1968 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 103:
/* Line 1792 of yacc.c  */
#line 1974 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 104:
/* Line 1792 of yacc.c  */
#line 1981 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 105:
/* Line 1792 of yacc.c  */
#line 1988 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 106:
/* Line 1792 of yacc.c  */
#line 1996 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item_string *table_item= new (thd->mem_root) Item_string((yyvsp[(1) - (3)].lex_str).str,
                                                              (yyvsp[(1) - (3)].lex_str).length,
                                                              thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            (yyval.item)= table_item;
          }
    break;

  case 107:
/* Line 1792 of yacc.c  */
#line 2009 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 108:
/* Line 1792 of yacc.c  */
#line 2015 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 109:
/* Line 1792 of yacc.c  */
#line 2022 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 110:
/* Line 1792 of yacc.c  */
#line 2029 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 111:
/* Line 1792 of yacc.c  */
#line 2037 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *string_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                               (yyvsp[(1) - (1)].lex_str).length,
                                                               thd->charset());
            (yyval.item)= string_item;
          }
    break;

  case 114:
/* Line 1792 of yacc.c  */
#line 2053 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 115:
/* Line 1792 of yacc.c  */
#line 2057 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 116:
/* Line 1792 of yacc.c  */
#line 2061 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 117:
/* Line 1792 of yacc.c  */
#line 2065 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
            if (strlen((yyvsp[(3) - (3)].lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
    break;

  case 118:
/* Line 1792 of yacc.c  */
#line 2075 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 119:
/* Line 1792 of yacc.c  */
#line 2079 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 120:
/* Line 1792 of yacc.c  */
#line 2083 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 121:
/* Line 1792 of yacc.c  */
#line 2088 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[(3) - (3)]).cpp.start, (yylsp[(3) - (3)]).cpp.end - (yylsp[(3) - (3)]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 122:
/* Line 1792 of yacc.c  */
#line 2099 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 123:
/* Line 1792 of yacc.c  */
#line 2104 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 124:
/* Line 1792 of yacc.c  */
#line 2108 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 125:
/* Line 1792 of yacc.c  */
#line 2112 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.tls_version= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 126:
/* Line 1792 of yacc.c  */
#line 2116 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 127:
/* Line 1792 of yacc.c  */
#line 2120 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 128:
/* Line 1792 of yacc.c  */
#line 2124 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 129:
/* Line 1792 of yacc.c  */
#line 2128 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 130:
/* Line 1792 of yacc.c  */
#line 2133 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 131:
/* Line 1792 of yacc.c  */
#line 2137 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 132:
/* Line 1792 of yacc.c  */
#line 2142 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 133:
/* Line 1792 of yacc.c  */
#line 2175 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 134:
/* Line 1792 of yacc.c  */
#line 2180 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 139:
/* Line 1792 of yacc.c  */
#line 2197 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[(1) - (1)].ulong_num));
          }
    break;

  case 140:
/* Line 1792 of yacc.c  */
#line 2203 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 141:
/* Line 1792 of yacc.c  */
#line 2207 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 142:
/* Line 1792 of yacc.c  */
#line 2223 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 143:
/* Line 1792 of yacc.c  */
#line 2227 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 144:
/* Line 1792 of yacc.c  */
#line 2237 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
    break;

  case 145:
/* Line 1792 of yacc.c  */
#line 2242 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
         Lex->mi.channel= (yyvsp[(3) - (3)].lex_str).str;
         Lex->mi.for_channel= true;
       }
    break;

  case 146:
/* Line 1792 of yacc.c  */
#line 2259 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_WRITE, MDL_SHARED))
              MYSQL_YYABORT;
            /*
              Instruct open_table() to acquire SHARED lock to check the
              existance of table. If the table does not exist then
              it will be upgraded EXCLUSIVE MDL lock. If table exist
              then open_table() will return with an error or warning.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_FOR_CREATE;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 147:
/* Line 1792 of yacc.c  */
#line 2285 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->set_current_select(lex->select_lex);
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 148:
/* Line 1792 of yacc.c  */
#line 2304 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 149:
/* Line 1792 of yacc.c  */
#line 2309 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 150:
/* Line 1792 of yacc.c  */
#line 2313 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 151:
/* Line 1792 of yacc.c  */
#line 2316 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 152:
/* Line 1792 of yacc.c  */
#line 2321 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 153:
/* Line 1792 of yacc.c  */
#line 2325 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 154:
/* Line 1792 of yacc.c  */
#line 2328 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 155:
/* Line 1792 of yacc.c  */
#line 2333 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 156:
/* Line 1792 of yacc.c  */
#line 2337 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 157:
/* Line 1792 of yacc.c  */
#line 2339 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 158:
/* Line 1792 of yacc.c  */
#line 2344 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 159:
/* Line 1792 of yacc.c  */
#line 2351 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 160:
/* Line 1792 of yacc.c  */
#line 2357 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 161:
/* Line 1792 of yacc.c  */
#line 2360 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->create_info.options=(yyvsp[(3) - (8)].num);
          }
    break;

  case 162:
/* Line 1792 of yacc.c  */
#line 2366 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 163:
/* Line 1792 of yacc.c  */
#line 2370 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 164:
/* Line 1792 of yacc.c  */
#line 2375 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[(3) - (11)].lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[(3) - (11)].lex_str);
            Lex->server_options.set_scheme((yyvsp[(7) - (11)].lex_str));
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_create_server(&Lex->server_options);
          }
    break;

  case 167:
/* Line 1792 of yacc.c  */
#line 2396 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_username((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 168:
/* Line 1792 of yacc.c  */
#line 2400 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_host((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 169:
/* Line 1792 of yacc.c  */
#line 2404 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_db((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 170:
/* Line 1792 of yacc.c  */
#line 2408 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_owner((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 171:
/* Line 1792 of yacc.c  */
#line 2412 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_password((yyvsp[(2) - (2)].lex_str));
            Lex->contains_plaintext_password= true;
          }
    break;

  case 172:
/* Line 1792 of yacc.c  */
#line 2417 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_socket((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 173:
/* Line 1792 of yacc.c  */
#line 2421 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_port((yyvsp[(2) - (2)].ulong_num));
          }
    break;

  case 174:
/* Line 1792 of yacc.c  */
#line 2428 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->create_info.options= (yyvsp[(2) - (3)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(3) - (3)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 175:
/* Line 1792 of yacc.c  */
#line 2448 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 176:
/* Line 1792 of yacc.c  */
#line 2459 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));

            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 178:
/* Line 1792 of yacc.c  */
#line 2468 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 179:
/* Line 1792 of yacc.c  */
#line 2476 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 180:
/* Line 1792 of yacc.c  */
#line 2478 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 181:
/* Line 1792 of yacc.c  */
#line 2484 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 182:
/* Line 1792 of yacc.c  */
#line 2490 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 183:
/* Line 1792 of yacc.c  */
#line 2499 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 184:
/* Line 1792 of yacc.c  */
#line 2506 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 186:
/* Line 1792 of yacc.c  */
#line 2516 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 187:
/* Line 1792 of yacc.c  */
#line 2524 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 189:
/* Line 1792 of yacc.c  */
#line 2530 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 190:
/* Line 1792 of yacc.c  */
#line 2536 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 191:
/* Line 1792 of yacc.c  */
#line 2544 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 192:
/* Line 1792 of yacc.c  */
#line 2546 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 193:
/* Line 1792 of yacc.c  */
#line 2553 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          SP_TYPE_EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[(0) - (0)]).cpp.end);
          }
    break;

  case 194:
/* Line 1792 of yacc.c  */
#line 2599 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 208:
/* Line 1792 of yacc.c  */
#line 2628 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex->db= NULL;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           lex->alter_password.update_account_locked_column= false;
           lex->alter_password.account_locked= false;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 209:
/* Line 1792 of yacc.c  */
#line 2645 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->alter_password.update_password_expired_fields= false;
           lex->alter_password.update_password_expired_column= false;
           lex->alter_password.use_default_password_lifetime= true;
           lex->alter_password.expire_after_days= 0;
         }
    break;

  case 210:
/* Line 1792 of yacc.c  */
#line 2656 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 211:
/* Line 1792 of yacc.c  */
#line 2670 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(to_lex_cstring(db), (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 212:
/* Line 1792 of yacc.c  */
#line 2688 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 213:
/* Line 1792 of yacc.c  */
#line 2689 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 214:
/* Line 1792 of yacc.c  */
#line 2693 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 215:
/* Line 1792 of yacc.c  */
#line 2694 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 216:
/* Line 1792 of yacc.c  */
#line 2700 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 217:
/* Line 1792 of yacc.c  */
#line 2702 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 218:
/* Line 1792 of yacc.c  */
#line 2704 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 219:
/* Line 1792 of yacc.c  */
#line 2706 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 220:
/* Line 1792 of yacc.c  */
#line 2708 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 221:
/* Line 1792 of yacc.c  */
#line 2710 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 222:
/* Line 1792 of yacc.c  */
#line 2712 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 223:
/* Line 1792 of yacc.c  */
#line 2717 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 224:
/* Line 1792 of yacc.c  */
#line 2718 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 225:
/* Line 1792 of yacc.c  */
#line 2719 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 226:
/* Line 1792 of yacc.c  */
#line 2724 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 227:
/* Line 1792 of yacc.c  */
#line 2728 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 228:
/* Line 1792 of yacc.c  */
#line 2735 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->call_value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), SP_TYPE_PROCEDURE);
          }
    break;

  case 229:
/* Line 1792 of yacc.c  */
#line 2743 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 234:
/* Line 1792 of yacc.c  */
#line 2759 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

           Lex->call_value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 235:
/* Line 1792 of yacc.c  */
#line 2765 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            Lex->call_value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 240:
/* Line 1792 of yacc.c  */
#line 2785 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 241:
/* Line 1792 of yacc.c  */
#line 2805 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   sp_variable::MODE_IN);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 246:
/* Line 1792 of yacc.c  */
#line 2846 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(3) - (4)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 247:
/* Line 1792 of yacc.c  */
#line 2874 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 248:
/* Line 1792 of yacc.c  */
#line 2875 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 249:
/* Line 1792 of yacc.c  */
#line 2876 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 250:
/* Line 1792 of yacc.c  */
#line 2877 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 251:
/* Line 1792 of yacc.c  */
#line 2881 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 253:
/* Line 1792 of yacc.c  */
#line 2886 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 255:
/* Line 1792 of yacc.c  */
#line 2892 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 256:
/* Line 1792 of yacc.c  */
#line 2896 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 257:
/* Line 1792 of yacc.c  */
#line 2923 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 258:
/* Line 1792 of yacc.c  */
#line 2934 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              // sp_opt_default only pushes start ptr for DEFAULT clause.
              const char *expr_start_ptr=
                sp->m_parser_data.pop_expr_start_ptr();
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[(5) - (5)]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= new (thd->mem_root) Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (fill_field_definition(thd, sp, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is=
                new (thd->mem_root)
                  sp_instr_set(sp->instructions(),
                               lex,
                               var_idx,
                               dflt_value_item,
                               dflt_value_query,
                               (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 259:
/* Line 1792 of yacc.c  */
#line 3007 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 260:
/* Line 1792 of yacc.c  */
#line 3024 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new (thd->mem_root)
                sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
    break;

  case 261:
/* Line 1792 of yacc.c  */
#line 3066 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 262:
/* Line 1792 of yacc.c  */
#line 3103 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[(4) - (4)]).raw.end);
          }
    break;

  case 263:
/* Line 1792 of yacc.c  */
#line 3112 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {             /*$7*/
            CONTEXTUALIZE((yyvsp[(6) - (6)].select));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(6) - (6)]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              new (thd->mem_root)
                sp_instr_cpush(sp->instructions(), pctx,
                               cursor_lex, cursor_query,
                               pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 264:
/* Line 1792 of yacc.c  */
#line 3177 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 265:
/* Line 1792 of yacc.c  */
#line 3178 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 266:
/* Line 1792 of yacc.c  */
#line 3184 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 267:
/* Line 1792 of yacc.c  */
#line 3186 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 268:
/* Line 1792 of yacc.c  */
#line 3191 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 269:
/* Line 1792 of yacc.c  */
#line 3214 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 271:
/* Line 1792 of yacc.c  */
#line 3229 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 272:
/* Line 1792 of yacc.c  */
#line 3250 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 273:
/* Line 1792 of yacc.c  */
#line 3251 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 274:
/* Line 1792 of yacc.c  */
#line 3256 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 275:
/* Line 1792 of yacc.c  */
#line 3260 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 276:
/* Line 1792 of yacc.c  */
#line 3273 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 277:
/* Line 1792 of yacc.c  */
#line 3279 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 278:
/* Line 1792 of yacc.c  */
#line 3285 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 279:
/* Line 1792 of yacc.c  */
#line 3294 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 280:
/* Line 1792 of yacc.c  */
#line 3307 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 281:
/* Line 1792 of yacc.c  */
#line 3333 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 282:
/* Line 1792 of yacc.c  */
#line 3338 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 283:
/* Line 1792 of yacc.c  */
#line 3340 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 284:
/* Line 1792 of yacc.c  */
#line 3345 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information(); }
    break;

  case 285:
/* Line 1792 of yacc.c  */
#line 3347 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= (yyvsp[(2) - (2)].signal_item_list); }
    break;

  case 286:
/* Line 1792 of yacc.c  */
#line 3352 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[(1) - (3)].da_condition_item_name), (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 287:
/* Line 1792 of yacc.c  */
#line 3359 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= (yyvsp[(1) - (5)].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[(3) - (5)].da_condition_item_name), (yyvsp[(5) - (5)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 288:
/* Line 1792 of yacc.c  */
#line 3371 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 289:
/* Line 1792 of yacc.c  */
#line 3373 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 290:
/* Line 1792 of yacc.c  */
#line 3393 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 291:
/* Line 1792 of yacc.c  */
#line 3399 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
    break;

  case 292:
/* Line 1792 of yacc.c  */
#line 3401 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
    break;

  case 293:
/* Line 1792 of yacc.c  */
#line 3403 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
    break;

  case 294:
/* Line 1792 of yacc.c  */
#line 3405 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
    break;

  case 295:
/* Line 1792 of yacc.c  */
#line 3407 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
    break;

  case 296:
/* Line 1792 of yacc.c  */
#line 3409 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
    break;

  case 297:
/* Line 1792 of yacc.c  */
#line 3411 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
    break;

  case 298:
/* Line 1792 of yacc.c  */
#line 3413 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
    break;

  case 299:
/* Line 1792 of yacc.c  */
#line 3415 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
    break;

  case 300:
/* Line 1792 of yacc.c  */
#line 3417 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
    break;

  case 301:
/* Line 1792 of yacc.c  */
#line 3419 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
    break;

  case 302:
/* Line 1792 of yacc.c  */
#line 3421 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
    break;

  case 303:
/* Line 1792 of yacc.c  */
#line 3426 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 304:
/* Line 1792 of yacc.c  */
#line 3440 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 305:
/* Line 1792 of yacc.c  */
#line 3456 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 306:
/* Line 1792 of yacc.c  */
#line 3458 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 307:
/* Line 1792 of yacc.c  */
#line 3460 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
    break;

  case 308:
/* Line 1792 of yacc.c  */
#line 3465 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 309:
/* Line 1792 of yacc.c  */
#line 3471 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 310:
/* Line 1792 of yacc.c  */
#line 3480 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 311:
/* Line 1792 of yacc.c  */
#line 3486 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 312:
/* Line 1792 of yacc.c  */
#line 3495 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 313:
/* Line 1792 of yacc.c  */
#line 3503 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[(1) - (1)].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[(1) - (1)]).raw.start,
                (yylsp[(1) - (1)]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 314:
/* Line 1792 of yacc.c  */
#line 3531 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[(2) - (2)].lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
    break;

  case 315:
/* Line 1792 of yacc.c  */
#line 3539 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 316:
/* Line 1792 of yacc.c  */
#line 3541 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 317:
/* Line 1792 of yacc.c  */
#line 3550 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 318:
/* Line 1792 of yacc.c  */
#line 3555 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 319:
/* Line 1792 of yacc.c  */
#line 3561 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 320:
/* Line 1792 of yacc.c  */
#line 3570 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 321:
/* Line 1792 of yacc.c  */
#line 3578 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 322:
/* Line 1792 of yacc.c  */
#line 3580 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 323:
/* Line 1792 of yacc.c  */
#line 3582 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 324:
/* Line 1792 of yacc.c  */
#line 3584 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 325:
/* Line 1792 of yacc.c  */
#line 3586 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 326:
/* Line 1792 of yacc.c  */
#line 3588 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 327:
/* Line 1792 of yacc.c  */
#line 3590 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 328:
/* Line 1792 of yacc.c  */
#line 3592 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 329:
/* Line 1792 of yacc.c  */
#line 3594 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 330:
/* Line 1792 of yacc.c  */
#line 3596 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 331:
/* Line 1792 of yacc.c  */
#line 3598 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 332:
/* Line 1792 of yacc.c  */
#line 3600 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 333:
/* Line 1792 of yacc.c  */
#line 3602 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 334:
/* Line 1792 of yacc.c  */
#line 3607 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 335:
/* Line 1792 of yacc.c  */
#line 3627 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 336:
/* Line 1792 of yacc.c  */
#line 3650 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 337:
/* Line 1792 of yacc.c  */
#line 3652 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end); }
    break;

  case 338:
/* Line 1792 of yacc.c  */
#line 3654 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            (yyval.item) = (yyvsp[(3) - (3)].item);
          }
    break;

  case 352:
/* Line 1792 of yacc.c  */
#line 3679 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 353:
/* Line 1792 of yacc.c  */
#line 3681 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 354:
/* Line 1792 of yacc.c  */
#line 3689 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
    break;

  case 355:
/* Line 1792 of yacc.c  */
#line 3698 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(2) - (2)]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                new (thd->mem_root)
                  sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 356:
/* Line 1792 of yacc.c  */
#line 3745 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);

            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 357:
/* Line 1792 of yacc.c  */
#line 3755 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != SP_TYPE_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              new (thd->mem_root)
                sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 358:
/* Line 1792 of yacc.c  */
#line 3803 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 359:
/* Line 1792 of yacc.c  */
#line 3814 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 360:
/* Line 1792 of yacc.c  */
#line 3826 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 361:
/* Line 1792 of yacc.c  */
#line 3885 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i=
              new (thd->mem_root) sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 362:
/* Line 1792 of yacc.c  */
#line 3935 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new (thd->mem_root)
                sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 363:
/* Line 1792 of yacc.c  */
#line 3959 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new (thd->mem_root)
                sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 364:
/* Line 1792 of yacc.c  */
#line 3980 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 365:
/* Line 1792 of yacc.c  */
#line 3985 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new (thd->mem_root)
                sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 369:
/* Line 1792 of yacc.c  */
#line 4015 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 370:
/* Line 1792 of yacc.c  */
#line 4033 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 371:
/* Line 1792 of yacc.c  */
#line 4053 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(0) - (0)]).raw.end);
          }
    break;

  case 372:
/* Line 1792 of yacc.c  */
#line 4062 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(2) - (2)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex,
                                     (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 373:
/* Line 1792 of yacc.c  */
#line 4101 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i =
              new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 374:
/* Line 1792 of yacc.c  */
#line 4120 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 380:
/* Line 1792 of yacc.c  */
#line 4143 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 381:
/* Line 1792 of yacc.c  */
#line 4154 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              new (thd->mem_root)
                sp_instr_set_case_expr(sp->instructions(), lex,
                                       case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 382:
/* Line 1792 of yacc.c  */
#line 4200 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 383:
/* Line 1792 of yacc.c  */
#line 4207 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 384:
/* Line 1792 of yacc.c  */
#line 4214 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 389:
/* Line 1792 of yacc.c  */
#line 4231 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 390:
/* Line 1792 of yacc.c  */
#line 4240 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              new (thd->mem_root)
                sp_instr_jump_case_when(sp->instructions(), lex,
                                        pctx->get_current_case_expr_id(),
                                        (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 391:
/* Line 1792 of yacc.c  */
#line 4283 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 392:
/* Line 1792 of yacc.c  */
#line 4291 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 393:
/* Line 1792 of yacc.c  */
#line 4300 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 394:
/* Line 1792 of yacc.c  */
#line 4338 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 395:
/* Line 1792 of yacc.c  */
#line 4346 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              new (thd->mem_root)
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 397:
/* Line 1792 of yacc.c  */
#line 4364 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 398:
/* Line 1792 of yacc.c  */
#line 4382 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 399:
/* Line 1792 of yacc.c  */
#line 4401 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 400:
/* Line 1792 of yacc.c  */
#line 4402 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 401:
/* Line 1792 of yacc.c  */
#line 4407 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 402:
/* Line 1792 of yacc.c  */
#line 4423 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 403:
/* Line 1792 of yacc.c  */
#line 4440 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 404:
/* Line 1792 of yacc.c  */
#line 4451 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 405:
/* Line 1792 of yacc.c  */
#line 4459 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 406:
/* Line 1792 of yacc.c  */
#line 4474 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i=
                new (thd->mem_root) sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i=
                new (thd->mem_root)
                  sp_instr_cpop(sp->instructions(), pctx, (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 407:
/* Line 1792 of yacc.c  */
#line 4510 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
                new (thd->mem_root)
                  sp_instr_jump(sp->instructions(), pctx,
                                pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 408:
/* Line 1792 of yacc.c  */
#line 4525 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 409:
/* Line 1792 of yacc.c  */
#line 4534 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 410:
/* Line 1792 of yacc.c  */
#line 4575 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
              new (thd->mem_root)
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 411:
/* Line 1792 of yacc.c  */
#line 4593 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(3) - (3)]).raw.end);
          }
    break;

  case 412:
/* Line 1792 of yacc.c  */
#line 4602 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                             /*$6*/
            ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(5) - (5)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                     pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 414:
/* Line 1792 of yacc.c  */
#line 4646 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 415:
/* Line 1792 of yacc.c  */
#line 4648 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 416:
/* Line 1792 of yacc.c  */
#line 4653 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 417:
/* Line 1792 of yacc.c  */
#line 4655 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 418:
/* Line 1792 of yacc.c  */
#line 4657 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 422:
/* Line 1792 of yacc.c  */
#line 4691 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 423:
/* Line 1792 of yacc.c  */
#line 4693 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 424:
/* Line 1792 of yacc.c  */
#line 4703 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE;
          }
    break;

  case 425:
/* Line 1792 of yacc.c  */
#line 4709 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE;
          }
    break;

  case 430:
/* Line 1792 of yacc.c  */
#line 4732 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 482:
/* Line 1792 of yacc.c  */
#line 4831 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 483:
/* Line 1792 of yacc.c  */
#line 4839 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 484:
/* Line 1792 of yacc.c  */
#line 4847 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 485:
/* Line 1792 of yacc.c  */
#line 4855 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 486:
/* Line 1792 of yacc.c  */
#line 4867 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 487:
/* Line 1792 of yacc.c  */
#line 4879 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 488:
/* Line 1792 of yacc.c  */
#line 4884 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 489:
/* Line 1792 of yacc.c  */
#line 4889 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 490:
/* Line 1792 of yacc.c  */
#line 4897 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 491:
/* Line 1792 of yacc.c  */
#line 4905 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 492:
/* Line 1792 of yacc.c  */
#line 4913 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 493:
/* Line 1792 of yacc.c  */
#line 4921 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 494:
/* Line 1792 of yacc.c  */
#line 4929 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 495:
/* Line 1792 of yacc.c  */
#line 4937 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 496:
/* Line 1792 of yacc.c  */
#line 4945 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 497:
/* Line 1792 of yacc.c  */
#line 4958 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 498:
/* Line 1792 of yacc.c  */
#line 4971 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 499:
/* Line 1792 of yacc.c  */
#line 4985 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->file_block_size != 0)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "FILE_BLOCK_SIZE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->file_block_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 500:
/* Line 1792 of yacc.c  */
#line 4999 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 501:
/* Line 1792 of yacc.c  */
#line 5004 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 502:
/* Line 1792 of yacc.c  */
#line 5016 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulonglong_number);}
    break;

  case 503:
/* Line 1792 of yacc.c  */
#line 5018 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            size_t str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 504:
/* Line 1792 of yacc.c  */
#line 5070 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 505:
/* Line 1792 of yacc.c  */
#line 5073 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 506:
/* Line 1792 of yacc.c  */
#line 5075 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 507:
/* Line 1792 of yacc.c  */
#line 5090 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 508:
/* Line 1792 of yacc.c  */
#line 5109 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 509:
/* Line 1792 of yacc.c  */
#line 5112 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             CONTEXTUALIZE((yyvsp[(2) - (3)].create_select));
             Select->set_braces(1);
           }
    break;

  case 510:
/* Line 1792 of yacc.c  */
#line 5117 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             if ((yyvsp[(5) - (5)].node) != NULL)
               CONTEXTUALIZE((yyvsp[(5) - (5)].node));
           }
    break;

  case 511:
/* Line 1792 of yacc.c  */
#line 5124 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 512:
/* Line 1792 of yacc.c  */
#line 5126 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(3) - (3)].create_select));
            Select->set_braces(0);
          }
    break;

  case 513:
/* Line 1792 of yacc.c  */
#line 5131 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(5) - (5)].union_list) != NULL)
              CONTEXTUALIZE((yyvsp[(5) - (5)].union_list));
          }
    break;

  case 514:
/* Line 1792 of yacc.c  */
#line 5136 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].create_select));
            Select->set_braces(1);
          }
    break;

  case 515:
/* Line 1792 of yacc.c  */
#line 5141 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             if ((yyvsp[(7) - (7)].node) != NULL)
               CONTEXTUALIZE((yyvsp[(7) - (7)].node));
          }
    break;

  case 516:
/* Line 1792 of yacc.c  */
#line 5149 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 517:
/* Line 1792 of yacc.c  */
#line 5185 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 519:
/* Line 1792 of yacc.c  */
#line 5191 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
    break;

  case 521:
/* Line 1792 of yacc.c  */
#line 5209 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_syntax_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 522:
/* Line 1792 of yacc.c  */
#line 5221 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 524:
/* Line 1792 of yacc.c  */
#line 5230 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 525:
/* Line 1792 of yacc.c  */
#line 5237 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 526:
/* Line 1792 of yacc.c  */
#line 5238 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 527:
/* Line 1792 of yacc.c  */
#line 5240 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 528:
/* Line 1792 of yacc.c  */
#line 5242 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 529:
/* Line 1792 of yacc.c  */
#line 5244 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 530:
/* Line 1792 of yacc.c  */
#line 5246 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 531:
/* Line 1792 of yacc.c  */
#line 5250 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 532:
/* Line 1792 of yacc.c  */
#line 5252 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 533:
/* Line 1792 of yacc.c  */
#line 5257 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
    break;

  case 534:
/* Line 1792 of yacc.c  */
#line 5259 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 535:
/* Line 1792 of yacc.c  */
#line 5275 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 536:
/* Line 1792 of yacc.c  */
#line 5276 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 537:
/* Line 1792 of yacc.c  */
#line 5280 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 538:
/* Line 1792 of yacc.c  */
#line 5281 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 539:
/* Line 1792 of yacc.c  */
#line 5286 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 540:
/* Line 1792 of yacc.c  */
#line 5305 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 541:
/* Line 1792 of yacc.c  */
#line 5315 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).cpp.end), (yyvsp[(2) - (3)].item),
                                         const_cast<char *>((yylsp[(2) - (3)]).cpp.end), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 542:
/* Line 1792 of yacc.c  */
#line 5331 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (Lex->part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).cpp.end), (yyvsp[(2) - (3)].item),
                                              const_cast<char *>((yylsp[(2) - (3)]).cpp.end), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 543:
/* Line 1792 of yacc.c  */
#line 5344 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 544:
/* Line 1792 of yacc.c  */
#line 5346 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 545:
/* Line 1792 of yacc.c  */
#line 5361 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 546:
/* Line 1792 of yacc.c  */
#line 5363 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 547:
/* Line 1792 of yacc.c  */
#line 5364 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 548:
/* Line 1792 of yacc.c  */
#line 5367 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 549:
/* Line 1792 of yacc.c  */
#line 5372 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 550:
/* Line 1792 of yacc.c  */
#line 5376 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 551:
/* Line 1792 of yacc.c  */
#line 5377 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 552:
/* Line 1792 of yacc.c  */
#line 5382 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 553:
/* Line 1792 of yacc.c  */
#line 5400 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 554:
/* Line 1792 of yacc.c  */
#line 5417 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 555:
/* Line 1792 of yacc.c  */
#line 5419 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 556:
/* Line 1792 of yacc.c  */
#line 5434 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 557:
/* Line 1792 of yacc.c  */
#line 5450 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 558:
/* Line 1792 of yacc.c  */
#line 5471 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 559:
/* Line 1792 of yacc.c  */
#line 5472 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 560:
/* Line 1792 of yacc.c  */
#line 5477 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 561:
/* Line 1792 of yacc.c  */
#line 5496 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 562:
/* Line 1792 of yacc.c  */
#line 5501 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (check_string_char_length(to_lex_cstring((yyvsp[(1) - (1)].lex_str)), "", NAME_CHAR_LEN,
                                         system_charset_info, true))
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 563:
/* Line 1792 of yacc.c  */
#line 5516 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 564:
/* Line 1792 of yacc.c  */
#line 5538 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 565:
/* Line 1792 of yacc.c  */
#line 5553 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 566:
/* Line 1792 of yacc.c  */
#line 5555 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 567:
/* Line 1792 of yacc.c  */
#line 5570 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 568:
/* Line 1792 of yacc.c  */
#line 5575 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 569:
/* Line 1792 of yacc.c  */
#line 5596 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 570:
/* Line 1792 of yacc.c  */
#line 5601 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 571:
/* Line 1792 of yacc.c  */
#line 5630 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_syntax_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 572:
/* Line 1792 of yacc.c  */
#line 5641 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 573:
/* Line 1792 of yacc.c  */
#line 5642 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 574:
/* Line 1792 of yacc.c  */
#line 5647 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 575:
/* Line 1792 of yacc.c  */
#line 5658 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 576:
/* Line 1792 of yacc.c  */
#line 5660 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 577:
/* Line 1792 of yacc.c  */
#line 5683 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 578:
/* Line 1792 of yacc.c  */
#line 5684 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 579:
/* Line 1792 of yacc.c  */
#line 5689 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_syntax_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 580:
/* Line 1792 of yacc.c  */
#line 5702 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 581:
/* Line 1792 of yacc.c  */
#line 5724 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 582:
/* Line 1792 of yacc.c  */
#line 5738 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 583:
/* Line 1792 of yacc.c  */
#line 5763 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 584:
/* Line 1792 of yacc.c  */
#line 5764 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 585:
/* Line 1792 of yacc.c  */
#line 5769 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 586:
/* Line 1792 of yacc.c  */
#line 5801 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 587:
/* Line 1792 of yacc.c  */
#line 5806 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (check_string_char_length(to_lex_cstring((yyvsp[(1) - (1)].lex_str)), "", NAME_CHAR_LEN,
                                         system_charset_info, true))
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 588:
/* Line 1792 of yacc.c  */
#line 5818 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 589:
/* Line 1792 of yacc.c  */
#line 5819 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 590:
/* Line 1792 of yacc.c  */
#line 5823 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 591:
/* Line 1792 of yacc.c  */
#line 5824 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 592:
/* Line 1792 of yacc.c  */
#line 5829 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 593:
/* Line 1792 of yacc.c  */
#line 5831 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 594:
/* Line 1792 of yacc.c  */
#line 5837 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 595:
/* Line 1792 of yacc.c  */
#line 5839 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 596:
/* Line 1792 of yacc.c  */
#line 5841 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 597:
/* Line 1792 of yacc.c  */
#line 5843 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 598:
/* Line 1792 of yacc.c  */
#line 5845 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 599:
/* Line 1792 of yacc.c  */
#line 5847 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 600:
/* Line 1792 of yacc.c  */
#line 5856 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_select)= NEW_PTN PT_create_select((yyvsp[(1) - (4)].optimizer_hints), (yyvsp[(2) - (4)].select_options), (yyvsp[(3) - (4)].item_list2), (yyvsp[(4) - (4)].table_expression));
          }
    break;

  case 601:
/* Line 1792 of yacc.c  */
#line 5862 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 602:
/* Line 1792 of yacc.c  */
#line 5863 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 603:
/* Line 1792 of yacc.c  */
#line 5867 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 604:
/* Line 1792 of yacc.c  */
#line 5868 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 605:
/* Line 1792 of yacc.c  */
#line 5872 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 606:
/* Line 1792 of yacc.c  */
#line 5873 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 607:
/* Line 1792 of yacc.c  */
#line 5877 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 608:
/* Line 1792 of yacc.c  */
#line 5878 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 609:
/* Line 1792 of yacc.c  */
#line 5882 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 610:
/* Line 1792 of yacc.c  */
#line 5883 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 611:
/* Line 1792 of yacc.c  */
#line 5887 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 612:
/* Line 1792 of yacc.c  */
#line 5888 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 613:
/* Line 1792 of yacc.c  */
#line 5892 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 614:
/* Line 1792 of yacc.c  */
#line 5896 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 615:
/* Line 1792 of yacc.c  */
#line 5897 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 623:
/* Line 1792 of yacc.c  */
#line 5918 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 624:
/* Line 1792 of yacc.c  */
#line 5923 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 625:
/* Line 1792 of yacc.c  */
#line 5928 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 626:
/* Line 1792 of yacc.c  */
#line 5933 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 627:
/* Line 1792 of yacc.c  */
#line 5938 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 628:
/* Line 1792 of yacc.c  */
#line 5943 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 629:
/* Line 1792 of yacc.c  */
#line 5948 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_COMPRESS;
            Lex->create_info.compress= (yyvsp[(3) - (3)].lex_str);
	  }
    break;

  case 630:
/* Line 1792 of yacc.c  */
#line 5953 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_ENCRYPT;
            Lex->create_info.encrypt_type= (yyvsp[(3) - (3)].lex_str);
	  }
    break;

  case 631:
/* Line 1792 of yacc.c  */
#line 5958 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 632:
/* Line 1792 of yacc.c  */
#line 5963 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 633:
/* Line 1792 of yacc.c  */
#line 5978 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 634:
/* Line 1792 of yacc.c  */
#line 5984 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 635:
/* Line 1792 of yacc.c  */
#line 5999 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 636:
/* Line 1792 of yacc.c  */
#line 6004 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 637:
/* Line 1792 of yacc.c  */
#line 6019 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 638:
/* Line 1792 of yacc.c  */
#line 6025 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 639:
/* Line 1792 of yacc.c  */
#line 6043 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 640:
/* Line 1792 of yacc.c  */
#line 6048 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 641:
/* Line 1792 of yacc.c  */
#line 6053 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 642:
/* Line 1792 of yacc.c  */
#line 6058 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 643:
/* Line 1792 of yacc.c  */
#line 6063 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 644:
/* Line 1792 of yacc.c  */
#line 6068 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->select_lex->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 645:
/* Line 1792 of yacc.c  */
#line 6072 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex->table_list;
            lex->select_lex->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 648:
/* Line 1792 of yacc.c  */
#line 6096 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 649:
/* Line 1792 of yacc.c  */
#line 6101 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 650:
/* Line 1792 of yacc.c  */
#line 6106 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 651:
/* Line 1792 of yacc.c  */
#line 6111 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.tablespace= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_TABLESPACE;
          }
    break;

  case 652:
/* Line 1792 of yacc.c  */
#line 6116 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 653:
/* Line 1792 of yacc.c  */
#line 6118 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 654:
/* Line 1792 of yacc.c  */
#line 6120 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 655:
/* Line 1792 of yacc.c  */
#line 6126 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 656:
/* Line 1792 of yacc.c  */
#line 6134 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 657:
/* Line 1792 of yacc.c  */
#line 6152 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 658:
/* Line 1792 of yacc.c  */
#line 6169 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data<handlerton*>(plugin);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::SL_WARNING,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 659:
/* Line 1792 of yacc.c  */
#line 6195 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data<handlerton*>(plugin);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 660:
/* Line 1792 of yacc.c  */
#line 6212 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 661:
/* Line 1792 of yacc.c  */
#line 6213 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 662:
/* Line 1792 of yacc.c  */
#line 6214 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 663:
/* Line 1792 of yacc.c  */
#line 6215 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 664:
/* Line 1792 of yacc.c  */
#line 6216 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 665:
/* Line 1792 of yacc.c  */
#line 6217 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 666:
/* Line 1792 of yacc.c  */
#line 6221 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 667:
/* Line 1792 of yacc.c  */
#line 6222 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 668:
/* Line 1792 of yacc.c  */
#line 6223 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 669:
/* Line 1792 of yacc.c  */
#line 6227 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 670:
/* Line 1792 of yacc.c  */
#line 6228 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 671:
/* Line 1792 of yacc.c  */
#line 6229 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 672:
/* Line 1792 of yacc.c  */
#line 6230 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 673:
/* Line 1792 of yacc.c  */
#line 6236 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 679:
/* Line 1792 of yacc.c  */
#line 6254 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 680:
/* Line 1792 of yacc.c  */
#line 6261 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 681:
/* Line 1792 of yacc.c  */
#line 6267 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 682:
/* Line 1792 of yacc.c  */
#line 6273 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 683:
/* Line 1792 of yacc.c  */
#line 6279 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 684:
/* Line 1792 of yacc.c  */
#line 6284 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table)->db,
                                      (yyvsp[(8) - (8)].table)->table,
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, KEYTYPE_MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
    break;

  case 685:
/* Line 1792 of yacc.c  */
#line 6303 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 688:
/* Line 1792 of yacc.c  */
#line 6315 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (4)].item), &(yyvsp[(3) - (4)].item));
          }
    break;

  case 689:
/* Line 1792 of yacc.c  */
#line 6322 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 690:
/* Line 1792 of yacc.c  */
#line 6323 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 691:
/* Line 1792 of yacc.c  */
#line 6327 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 692:
/* Line 1792 of yacc.c  */
#line 6332 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
            lex->gcol_info= 0;
          }
    break;

  case 693:
/* Line 1792 of yacc.c  */
#line 6342 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (3)].lex_str), (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          }
    break;

  case 694:
/* Line 1792 of yacc.c  */
#line 6356 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 695:
/* Line 1792 of yacc.c  */
#line 6360 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (9)].num);
            if (Lex->charset)
            {
              Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (9)].charset));
              if (Lex->charset == NULL)
                MYSQL_YYABORT;
            }
            else
              Lex->charset= (yyvsp[(2) - (9)].charset);
            Lex->gcol_info->set_field_type((enum enum_field_types) (yyval.num));
          }
    break;

  case 702:
/* Line 1792 of yacc.c  */
#line 6391 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 703:
/* Line 1792 of yacc.c  */
#line 6397 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 704:
/* Line 1792 of yacc.c  */
#line 6402 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 705:
/* Line 1792 of yacc.c  */
#line 6403 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 707:
/* Line 1792 of yacc.c  */
#line 6406 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 710:
/* Line 1792 of yacc.c  */
#line 6417 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->gcol_info->set_field_stored(TRUE);
          }
    break;

  case 711:
/* Line 1792 of yacc.c  */
#line 6424 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* 
              "PARSE_GCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            if (!Lex->parse_gcol_expr)
            {
              YYTHD->parse_error_at((yylsp[(1) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 712:
/* Line 1792 of yacc.c  */
#line 6440 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->gcol_info= new Generated_column();
            if (!Lex->gcol_info)
            {
              mem_alloc_error(sizeof(Generated_column));
              MYSQL_YYABORT;
            }
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));
            uint expr_len= (uint)(yylsp[(1) - (1)]).cpp.length();
            Lex->gcol_info->dup_expr_str(YYTHD->mem_root, (yylsp[(1) - (1)]).cpp.start, expr_len);
            Lex->gcol_info->expr_item= (yyvsp[(1) - (1)].item);
            /*
              @todo: problems:
              - here we have a call to the constructor of
              Generated_column, which takes no argument and builds a
              non-functional object
              - then we fill it member by member; either by assignment to
              public members (!) or by call to a public setter. Both these
              techniques allow changing, at any future point in time, vital
              properties of the object which should rather be constant.
              Class should rather have a constructor which takes arguments,
              sets members, and members should be constant after that.
              This would also get rid of some setters like set_field_stored();
            */
          }
    break;

  case 713:
/* Line 1792 of yacc.c  */
#line 6469 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            (yyval.num)=(yyvsp[(1) - (3)].num);
          }
    break;

  case 714:
/* Line 1792 of yacc.c  */
#line 6474 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=(yyvsp[(1) - (3)].num);
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
          }
    break;

  case 715:
/* Line 1792 of yacc.c  */
#line 6480 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_FLOAT;
          }
    break;

  case 716:
/* Line 1792 of yacc.c  */
#line 6486 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 717:
/* Line 1792 of yacc.c  */
#line 6491 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 718:
/* Line 1792 of yacc.c  */
#line 6496 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 719:
/* Line 1792 of yacc.c  */
#line 6501 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 720:
/* Line 1792 of yacc.c  */
#line 6506 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 721:
/* Line 1792 of yacc.c  */
#line 6513 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 722:
/* Line 1792 of yacc.c  */
#line 6520 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->type|= (yyvsp[(3) - (3)].ulong_num);
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 723:
/* Line 1792 of yacc.c  */
#line 6527 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->type|= (yyvsp[(2) - (2)].ulong_num);
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 724:
/* Line 1792 of yacc.c  */
#line 6534 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 725:
/* Line 1792 of yacc.c  */
#line 6540 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 726:
/* Line 1792 of yacc.c  */
#line 6546 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 727:
/* Line 1792 of yacc.c  */
#line 6553 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->type|= (yyvsp[(3) - (3)].ulong_num);
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 728:
/* Line 1792 of yacc.c  */
#line 6560 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 729:
/* Line 1792 of yacc.c  */
#line 6566 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            if (Lex->length)
            {
              errno= 0;
              ulong length= strtoul(Lex->length, NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            (yyval.num)=MYSQL_TYPE_YEAR;
          }
    break;

  case 730:
/* Line 1792 of yacc.c  */
#line 6582 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 731:
/* Line 1792 of yacc.c  */
#line 6584 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)= MYSQL_TYPE_TIME2;
          }
    break;

  case 732:
/* Line 1792 of yacc.c  */
#line 6589 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
            {
              push_warning(current_thd, Sql_condition::SL_WARNING,
                  WARN_DEPRECATED_MAXDB_SQL_MODE_FOR_TIMESTAMP,
                  ER_THD(YYTHD, WARN_DEPRECATED_MAXDB_SQL_MODE_FOR_TIMESTAMP));
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            }
            else
            {
              /*
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                This behavior is deprecated now.
              */
              if (!YYTHD->variables.explicit_defaults_for_timestamp)
                Lex->type|= NOT_NULL_FLAG;
              /*
                To flag the current statement as dependent for binary
                logging on the session var. Extra copying to Lex is
                done in case prepared stmt.
              */
              Lex->binlog_need_explicit_defaults_ts=
                YYTHD->binlog_need_explicit_defaults_ts= true;

              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
    break;

  case 733:
/* Line 1792 of yacc.c  */
#line 6618 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)= MYSQL_TYPE_DATETIME2;
          }
    break;

  case 734:
/* Line 1792 of yacc.c  */
#line 6623 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 735:
/* Line 1792 of yacc.c  */
#line 6628 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 736:
/* Line 1792 of yacc.c  */
#line 6634 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
          }
    break;

  case 737:
/* Line 1792 of yacc.c  */
#line 6640 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 738:
/* Line 1792 of yacc.c  */
#line 6645 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 739:
/* Line 1792 of yacc.c  */
#line 6650 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 740:
/* Line 1792 of yacc.c  */
#line 6655 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 741:
/* Line 1792 of yacc.c  */
#line 6661 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 742:
/* Line 1792 of yacc.c  */
#line 6667 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 743:
/* Line 1792 of yacc.c  */
#line 6674 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 744:
/* Line 1792 of yacc.c  */
#line 6680 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 745:
/* Line 1792 of yacc.c  */
#line 6686 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 746:
/* Line 1792 of yacc.c  */
#line 6692 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 747:
/* Line 1792 of yacc.c  */
#line 6698 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 748:
/* Line 1792 of yacc.c  */
#line 6704 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 749:
/* Line 1792 of yacc.c  */
#line 6706 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(6) - (6)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(6) - (6)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_ENUM;
          }
    break;

  case 750:
/* Line 1792 of yacc.c  */
#line 6712 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 751:
/* Line 1792 of yacc.c  */
#line 6714 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(6) - (6)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(6) - (6)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_SET;
          }
    break;

  case 752:
/* Line 1792 of yacc.c  */
#line 6720 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 753:
/* Line 1792 of yacc.c  */
#line 6726 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 754:
/* Line 1792 of yacc.c  */
#line 6732 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_JSON;
          }
    break;

  case 755:
/* Line 1792 of yacc.c  */
#line 6739 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 756:
/* Line 1792 of yacc.c  */
#line 6740 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 757:
/* Line 1792 of yacc.c  */
#line 6742 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char*>(STRINGIFY_ARG
                                           (MAX_LEN_GEOM_POINT_FIELD));
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 758:
/* Line 1792 of yacc.c  */
#line 6747 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 759:
/* Line 1792 of yacc.c  */
#line 6748 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 760:
/* Line 1792 of yacc.c  */
#line 6749 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 761:
/* Line 1792 of yacc.c  */
#line 6750 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 762:
/* Line 1792 of yacc.c  */
#line 6751 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 763:
/* Line 1792 of yacc.c  */
#line 6755 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 764:
/* Line 1792 of yacc.c  */
#line 6759 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 765:
/* Line 1792 of yacc.c  */
#line 6760 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 766:
/* Line 1792 of yacc.c  */
#line 6764 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 767:
/* Line 1792 of yacc.c  */
#line 6765 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 768:
/* Line 1792 of yacc.c  */
#line 6769 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 769:
/* Line 1792 of yacc.c  */
#line 6770 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 770:
/* Line 1792 of yacc.c  */
#line 6771 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 771:
/* Line 1792 of yacc.c  */
#line 6772 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 772:
/* Line 1792 of yacc.c  */
#line 6773 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 773:
/* Line 1792 of yacc.c  */
#line 6777 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 774:
/* Line 1792 of yacc.c  */
#line 6778 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 775:
/* Line 1792 of yacc.c  */
#line 6779 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 776:
/* Line 1792 of yacc.c  */
#line 6780 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 777:
/* Line 1792 of yacc.c  */
#line 6781 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 778:
/* Line 1792 of yacc.c  */
#line 6786 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 779:
/* Line 1792 of yacc.c  */
#line 6791 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 780:
/* Line 1792 of yacc.c  */
#line 6793 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 781:
/* Line 1792 of yacc.c  */
#line 6798 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
    break;

  case 782:
/* Line 1792 of yacc.c  */
#line 6803 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(1) - (1)].c_str);
            (yyval.precision).dec= NULL;
          }
    break;

  case 784:
/* Line 1792 of yacc.c  */
#line 6812 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(2) - (5)].lex_str).str;
            (yyval.precision).dec= (yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 785:
/* Line 1792 of yacc.c  */
#line 6820 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 786:
/* Line 1792 of yacc.c  */
#line 6821 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 787:
/* Line 1792 of yacc.c  */
#line 6825 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 788:
/* Line 1792 of yacc.c  */
#line 6826 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 789:
/* Line 1792 of yacc.c  */
#line 6828 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 790:
/* Line 1792 of yacc.c  */
#line 6835 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 791:
/* Line 1792 of yacc.c  */
#line 6836 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 792:
/* Line 1792 of yacc.c  */
#line 6840 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 793:
/* Line 1792 of yacc.c  */
#line 6841 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 794:
/* Line 1792 of yacc.c  */
#line 6845 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 795:
/* Line 1792 of yacc.c  */
#line 6846 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 796:
/* Line 1792 of yacc.c  */
#line 6847 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 797:
/* Line 1792 of yacc.c  */
#line 6851 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 798:
/* Line 1792 of yacc.c  */
#line 6852 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 799:
/* Line 1792 of yacc.c  */
#line 6853 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 800:
/* Line 1792 of yacc.c  */
#line 6854 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 801:
/* Line 1792 of yacc.c  */
#line 6857 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; /* use default length */ }
    break;

  case 803:
/* Line 1792 of yacc.c  */
#line 6863 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
    break;

  case 805:
/* Line 1792 of yacc.c  */
#line 6871 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 806:
/* Line 1792 of yacc.c  */
#line 6872 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 807:
/* Line 1792 of yacc.c  */
#line 6876 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 809:
/* Line 1792 of yacc.c  */
#line 6882 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~ NOT_NULL_FLAG;
            Lex->type|= EXPLICIT_NULL_FLAG;
          }
    break;

  case 810:
/* Line 1792 of yacc.c  */
#line 6886 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 811:
/* Line 1792 of yacc.c  */
#line 6887 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 812:
/* Line 1792 of yacc.c  */
#line 6889 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>((yyvsp[(3) - (3)].ulong_num)));
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->on_update_value= item;
          }
    break;

  case 813:
/* Line 1792 of yacc.c  */
#line 6896 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 814:
/* Line 1792 of yacc.c  */
#line 6898 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 815:
/* Line 1792 of yacc.c  */
#line 6904 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 816:
/* Line 1792 of yacc.c  */
#line 6910 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 817:
/* Line 1792 of yacc.c  */
#line 6916 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 818:
/* Line 1792 of yacc.c  */
#line 6921 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 819:
/* Line 1792 of yacc.c  */
#line 6923 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 820:
/* Line 1792 of yacc.c  */
#line 6936 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DEFAULT << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 821:
/* Line 1792 of yacc.c  */
#line 6942 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_FIXED << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 822:
/* Line 1792 of yacc.c  */
#line 6948 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DYNAMIC << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 823:
/* Line 1792 of yacc.c  */
#line 6954 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DEFAULT << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 824:
/* Line 1792 of yacc.c  */
#line 6959 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DISK << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 825:
/* Line 1792 of yacc.c  */
#line 6964 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_MEMORY << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 826:
/* Line 1792 of yacc.c  */
#line 6973 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 827:
/* Line 1792 of yacc.c  */
#line 6994 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 828:
/* Line 1792 of yacc.c  */
#line 7000 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 829:
/* Line 1792 of yacc.c  */
#line 7007 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 830:
/* Line 1792 of yacc.c  */
#line 7011 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 831:
/* Line 1792 of yacc.c  */
#line 7012 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 832:
/* Line 1792 of yacc.c  */
#line 7017 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 833:
/* Line 1792 of yacc.c  */
#line 7024 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 834:
/* Line 1792 of yacc.c  */
#line 7028 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 835:
/* Line 1792 of yacc.c  */
#line 7029 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 836:
/* Line 1792 of yacc.c  */
#line 7033 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 837:
/* Line 1792 of yacc.c  */
#line 7034 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 838:
/* Line 1792 of yacc.c  */
#line 7039 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 839:
/* Line 1792 of yacc.c  */
#line 7047 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 840:
/* Line 1792 of yacc.c  */
#line 7051 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 841:
/* Line 1792 of yacc.c  */
#line 7052 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 842:
/* Line 1792 of yacc.c  */
#line 7057 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 843:
/* Line 1792 of yacc.c  */
#line 7064 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 844:
/* Line 1792 of yacc.c  */
#line 7065 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 845:
/* Line 1792 of yacc.c  */
#line 7069 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 846:
/* Line 1792 of yacc.c  */
#line 7070 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 847:
/* Line 1792 of yacc.c  */
#line 7074 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 848:
/* Line 1792 of yacc.c  */
#line 7075 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 849:
/* Line 1792 of yacc.c  */
#line 7079 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 850:
/* Line 1792 of yacc.c  */
#line 7080 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 851:
/* Line 1792 of yacc.c  */
#line 7085 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1; }
    break;

  case 852:
/* Line 1792 of yacc.c  */
#line 7086 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 853:
/* Line 1792 of yacc.c  */
#line 7087 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 854:
/* Line 1792 of yacc.c  */
#line 7092 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 855:
/* Line 1792 of yacc.c  */
#line 7100 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 856:
/* Line 1792 of yacc.c  */
#line 7105 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 857:
/* Line 1792 of yacc.c  */
#line 7113 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= NULL;
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 858:
/* Line 1792 of yacc.c  */
#line 7118 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 859:
/* Line 1792 of yacc.c  */
#line 7123 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 860:
/* Line 1792 of yacc.c  */
#line 7128 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= &my_charset_bin;
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 861:
/* Line 1792 of yacc.c  */
#line 7133 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(2) - (3)].charset);
            (yyval.charset_with_flags).type_flags= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 862:
/* Line 1792 of yacc.c  */
#line 7138 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= NULL;
            (yyval.charset_with_flags).type_flags= BINCMP_FLAG;
          }
    break;

  case 863:
/* Line 1792 of yacc.c  */
#line 7143 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(3) - (3)].charset);
            (yyval.charset_with_flags).type_flags= BINCMP_FLAG;
          }
    break;

  case 864:
/* Line 1792 of yacc.c  */
#line 7150 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 865:
/* Line 1792 of yacc.c  */
#line 7151 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= BINCMP_FLAG; }
    break;

  case 866:
/* Line 1792 of yacc.c  */
#line 7156 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_syntax_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 867:
/* Line 1792 of yacc.c  */
#line 7164 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 868:
/* Line 1792 of yacc.c  */
#line 7168 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 869:
/* Line 1792 of yacc.c  */
#line 7169 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 870:
/* Line 1792 of yacc.c  */
#line 7173 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 871:
/* Line 1792 of yacc.c  */
#line 7176 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 872:
/* Line 1792 of yacc.c  */
#line 7177 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 873:
/* Line 1792 of yacc.c  */
#line 7178 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 874:
/* Line 1792 of yacc.c  */
#line 7179 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 875:
/* Line 1792 of yacc.c  */
#line 7184 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 876:
/* Line 1792 of yacc.c  */
#line 7192 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 877:
/* Line 1792 of yacc.c  */
#line 7198 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 878:
/* Line 1792 of yacc.c  */
#line 7199 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 879:
/* Line 1792 of yacc.c  */
#line 7204 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 880:
/* Line 1792 of yacc.c  */
#line 7213 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 881:
/* Line 1792 of yacc.c  */
#line 7214 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 882:
/* Line 1792 of yacc.c  */
#line 7218 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 883:
/* Line 1792 of yacc.c  */
#line 7219 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 886:
/* Line 1792 of yacc.c  */
#line 7233 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 887:
/* Line 1792 of yacc.c  */
#line 7240 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 889:
/* Line 1792 of yacc.c  */
#line 7246 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 890:
/* Line 1792 of yacc.c  */
#line 7253 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 891:
/* Line 1792 of yacc.c  */
#line 7265 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_UNDEF; }
    break;

  case 892:
/* Line 1792 of yacc.c  */
#line 7267 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_FULL; }
    break;

  case 893:
/* Line 1792 of yacc.c  */
#line 7269 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_PARTIAL; }
    break;

  case 894:
/* Line 1792 of yacc.c  */
#line 7271 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_SIMPLE; }
    break;

  case 895:
/* Line 1792 of yacc.c  */
#line 7276 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 896:
/* Line 1792 of yacc.c  */
#line 7282 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 897:
/* Line 1792 of yacc.c  */
#line 7288 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 898:
/* Line 1792 of yacc.c  */
#line 7295 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 899:
/* Line 1792 of yacc.c  */
#line 7302 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 900:
/* Line 1792 of yacc.c  */
#line 7310 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
    break;

  case 901:
/* Line 1792 of yacc.c  */
#line 7311 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
    break;

  case 902:
/* Line 1792 of yacc.c  */
#line 7312 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
    break;

  case 903:
/* Line 1792 of yacc.c  */
#line 7313 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
    break;

  case 904:
/* Line 1792 of yacc.c  */
#line 7314 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
    break;

  case 905:
/* Line 1792 of yacc.c  */
#line 7318 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 906:
/* Line 1792 of yacc.c  */
#line 7322 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
    break;

  case 907:
/* Line 1792 of yacc.c  */
#line 7323 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 908:
/* Line 1792 of yacc.c  */
#line 7327 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 909:
/* Line 1792 of yacc.c  */
#line 7328 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 910:
/* Line 1792 of yacc.c  */
#line 7332 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 912:
/* Line 1792 of yacc.c  */
#line 7337 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 913:
/* Line 1792 of yacc.c  */
#line 7338 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 914:
/* Line 1792 of yacc.c  */
#line 7339 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 915:
/* Line 1792 of yacc.c  */
#line 7343 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 916:
/* Line 1792 of yacc.c  */
#line 7344 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 917:
/* Line 1792 of yacc.c  */
#line 7348 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_FULLTEXT;}
    break;

  case 918:
/* Line 1792 of yacc.c  */
#line 7353 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_type)= KEYTYPE_SPATIAL;
          }
    break;

  case 919:
/* Line 1792 of yacc.c  */
#line 7359 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 922:
/* Line 1792 of yacc.c  */
#line 7376 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 924:
/* Line 1792 of yacc.c  */
#line 7381 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 926:
/* Line 1792 of yacc.c  */
#line 7386 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 934:
/* Line 1792 of yacc.c  */
#line 7406 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 935:
/* Line 1792 of yacc.c  */
#line 7407 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 936:
/* Line 1792 of yacc.c  */
#line 7412 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 937:
/* Line 1792 of yacc.c  */
#line 7413 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 942:
/* Line 1792 of yacc.c  */
#line 7428 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING plugin_name= {(yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length};
            if (plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 943:
/* Line 1792 of yacc.c  */
#line 7441 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 944:
/* Line 1792 of yacc.c  */
#line 7442 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 945:
/* Line 1792 of yacc.c  */
#line 7443 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 946:
/* Line 1792 of yacc.c  */
#line 7447 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 947:
/* Line 1792 of yacc.c  */
#line 7448 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 948:
/* Line 1792 of yacc.c  */
#line 7453 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 949:
/* Line 1792 of yacc.c  */
#line 7459 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 950:
/* Line 1792 of yacc.c  */
#line 7472 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 951:
/* Line 1792 of yacc.c  */
#line 7473 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 952:
/* Line 1792 of yacc.c  */
#line 7477 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 953:
/* Line 1792 of yacc.c  */
#line 7478 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 954:
/* Line 1792 of yacc.c  */
#line 7482 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 955:
/* Line 1792 of yacc.c  */
#line 7483 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 956:
/* Line 1792 of yacc.c  */
#line 7491 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex->init_order();
            lex->select_lex->db=
                    const_cast<char*>((lex->select_lex->table_list.first)->db);
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 957:
/* Line 1792 of yacc.c  */
#line 7518 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 958:
/* Line 1792 of yacc.c  */
#line 7530 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 959:
/* Line 1792 of yacc.c  */
#line 7535 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 960:
/* Line 1792 of yacc.c  */
#line 7544 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            push_deprecated_warn_no_replacement(YYTHD,
              "UPGRADE DATA DIRECTORY NAME");
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 961:
/* Line 1792 of yacc.c  */
#line 7557 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 962:
/* Line 1792 of yacc.c  */
#line 7568 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 963:
/* Line 1792 of yacc.c  */
#line 7575 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 964:
/* Line 1792 of yacc.c  */
#line 7586 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 965:
/* Line 1792 of yacc.c  */
#line 7593 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 966:
/* Line 1792 of yacc.c  */
#line 7604 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 967:
/* Line 1792 of yacc.c  */
#line 7611 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 968:
/* Line 1792 of yacc.c  */
#line 7623 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 969:
/* Line 1792 of yacc.c  */
#line 7625 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 970:
/* Line 1792 of yacc.c  */
#line 7645 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 971:
/* Line 1792 of yacc.c  */
#line 7658 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 972:
/* Line 1792 of yacc.c  */
#line 7663 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 973:
/* Line 1792 of yacc.c  */
#line 7668 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 974:
/* Line 1792 of yacc.c  */
#line 7673 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 975:
/* Line 1792 of yacc.c  */
#line 7678 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[(3) - (7)].lex_str);
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_alter_server(&Lex->server_options);
          }
    break;

  case 977:
/* Line 1792 of yacc.c  */
#line 7688 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(2) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(2) - (5)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 978:
/* Line 1792 of yacc.c  */
#line 7694 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 979:
/* Line 1792 of yacc.c  */
#line 7699 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
          }
    break;

  case 980:
/* Line 1792 of yacc.c  */
#line 7707 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 984:
/* Line 1792 of yacc.c  */
#line 7718 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
    break;

  case 985:
/* Line 1792 of yacc.c  */
#line 7724 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
    break;

  case 986:
/* Line 1792 of yacc.c  */
#line 7730 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.update_password_expired_column= true;
          }
    break;

  case 987:
/* Line 1792 of yacc.c  */
#line 7736 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if ((yyvsp[(3) - (4)].ulong_num) == 0 || (yyvsp[(3) - (4)].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              my_snprintf(buf, sizeof(buf), "%lu", (yyvsp[(3) - (4)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.expire_after_days= (yyvsp[(3) - (4)].ulong_num);
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 988:
/* Line 1792 of yacc.c  */
#line 7750 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 989:
/* Line 1792 of yacc.c  */
#line 7756 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_password.update_password_expired_fields= true;
          }
    break;

  case 990:
/* Line 1792 of yacc.c  */
#line 7762 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 991:
/* Line 1792 of yacc.c  */
#line 7766 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 993:
/* Line 1792 of yacc.c  */
#line 7771 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 994:
/* Line 1792 of yacc.c  */
#line 7772 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 995:
/* Line 1792 of yacc.c  */
#line 7777 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 996:
/* Line 1792 of yacc.c  */
#line 7783 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 997:
/* Line 1792 of yacc.c  */
#line 7789 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 998:
/* Line 1792 of yacc.c  */
#line 7795 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 999:
/* Line 1792 of yacc.c  */
#line 7804 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(st_lex_user));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
    break;

  case 1000:
/* Line 1792 of yacc.c  */
#line 7817 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1001:
/* Line 1792 of yacc.c  */
#line 7818 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1002:
/* Line 1792 of yacc.c  */
#line 7819 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1003:
/* Line 1792 of yacc.c  */
#line 7820 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1004:
/* Line 1792 of yacc.c  */
#line 7824 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1005:
/* Line 1792 of yacc.c  */
#line 7826 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname);
            (yyval.num)= 1;
          }
    break;

  case 1006:
/* Line 1792 of yacc.c  */
#line 7837 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1007:
/* Line 1792 of yacc.c  */
#line 7838 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1008:
/* Line 1792 of yacc.c  */
#line 7842 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 1009:
/* Line 1792 of yacc.c  */
#line 7843 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1019:
/* Line 1792 of yacc.c  */
#line 7863 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1020:
/* Line 1792 of yacc.c  */
#line 7871 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1022:
/* Line 1792 of yacc.c  */
#line 7887 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          }
    break;

  case 1023:
/* Line 1792 of yacc.c  */
#line 7892 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 1024:
/* Line 1792 of yacc.c  */
#line 7899 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1026:
/* Line 1792 of yacc.c  */
#line 7913 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1027:
/* Line 1792 of yacc.c  */
#line 7925 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1029:
/* Line 1792 of yacc.c  */
#line 7938 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1031:
/* Line 1792 of yacc.c  */
#line 7951 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 1032:
/* Line 1792 of yacc.c  */
#line 7958 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1034:
/* Line 1792 of yacc.c  */
#line 7971 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(6) - (7)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name.str= const_cast<char*>((yyvsp[(6) - (7)].table)->table.str);
            lex->name.length= (yyvsp[(6) - (7)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1035:
/* Line 1792 of yacc.c  */
#line 7997 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1036:
/* Line 1792 of yacc.c  */
#line 8006 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1039:
/* Line 1792 of yacc.c  */
#line 8022 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation= Alter_info::ALTER_WITH_VALIDATION;
          }
    break;

  case 1040:
/* Line 1792 of yacc.c  */
#line 8026 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation=
              Alter_info::ALTER_WITHOUT_VALIDATION;
          }
    break;

  case 1041:
/* Line 1792 of yacc.c  */
#line 8034 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 1042:
/* Line 1792 of yacc.c  */
#line 8041 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
    break;

  case 1044:
/* Line 1792 of yacc.c  */
#line 8049 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1045:
/* Line 1792 of yacc.c  */
#line 8061 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1047:
/* Line 1792 of yacc.c  */
#line 8067 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 1048:
/* Line 1792 of yacc.c  */
#line 8072 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 1049:
/* Line 1792 of yacc.c  */
#line 8079 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1051:
/* Line 1792 of yacc.c  */
#line 8094 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
    break;

  case 1052:
/* Line 1792 of yacc.c  */
#line 8098 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 1053:
/* Line 1792 of yacc.c  */
#line 8102 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 1054:
/* Line 1792 of yacc.c  */
#line 8109 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1055:
/* Line 1792 of yacc.c  */
#line 8110 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1056:
/* Line 1792 of yacc.c  */
#line 8115 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            if (Lex->alter_info.partition_names.push_back(s))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1062:
/* Line 1792 of yacc.c  */
#line 8146 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
    break;

  case 1063:
/* Line 1792 of yacc.c  */
#line 8155 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1064:
/* Line 1792 of yacc.c  */
#line 8159 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 1066:
/* Line 1792 of yacc.c  */
#line 8165 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 1067:
/* Line 1792 of yacc.c  */
#line 8171 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1068:
/* Line 1792 of yacc.c  */
#line 8175 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            lex->gcol_info= 0;
          }
    break;

  case 1069:
/* Line 1792 of yacc.c  */
#line 8185 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (5)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (5)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (5)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          }
    break;

  case 1070:
/* Line 1792 of yacc.c  */
#line 8198 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1071:
/* Line 1792 of yacc.c  */
#line 8202 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
    break;

  case 1072:
/* Line 1792 of yacc.c  */
#line 8211 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[(4) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
    break;

  case 1073:
/* Line 1792 of yacc.c  */
#line 8220 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1074:
/* Line 1792 of yacc.c  */
#line 8229 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1075:
/* Line 1792 of yacc.c  */
#line 8238 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1076:
/* Line 1792 of yacc.c  */
#line 8244 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1077:
/* Line 1792 of yacc.c  */
#line 8250 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1078:
/* Line 1792 of yacc.c  */
#line 8259 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1079:
/* Line 1792 of yacc.c  */
#line 8268 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(3) - (3)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            enum_ident_name_check ident_check_status=
              check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE);
            if (ident_check_status == IDENT_NAME_WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == IDENT_NAME_TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            LEX_STRING db_str= to_lex_string((yyvsp[(3) - (3)].table)->db);
            if (db_str.str &&
                (check_and_convert_db_name(&db_str, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            lex->name.str= const_cast<char*>((yyvsp[(3) - (3)].table)->table.str);
            lex->name.length= (yyvsp[(3) - (3)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
    break;

  case 1080:
/* Line 1792 of yacc.c  */
#line 8298 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (YYTHD->mem_root)
                                    Alter_rename_key((yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= Alter_info::ALTER_RENAME_INDEX;
          }
    break;

  case 1081:
/* Line 1792 of yacc.c  */
#line 8308 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
          }
    break;

  case 1082:
/* Line 1792 of yacc.c  */
#line 8329 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 1083:
/* Line 1792 of yacc.c  */
#line 8339 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
    break;

  case 1084:
/* Line 1792 of yacc.c  */
#line 8343 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
    break;

  case 1085:
/* Line 1792 of yacc.c  */
#line 8348 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_UPGRADE_PARTITIONING;
          }
    break;

  case 1094:
/* Line 1792 of yacc.c  */
#line 8368 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
    break;

  case 1095:
/* Line 1792 of yacc.c  */
#line 8373 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1096:
/* Line 1792 of yacc.c  */
#line 8384 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
    break;

  case 1097:
/* Line 1792 of yacc.c  */
#line 8389 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1098:
/* Line 1792 of yacc.c  */
#line 8399 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1099:
/* Line 1792 of yacc.c  */
#line 8400 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1100:
/* Line 1792 of yacc.c  */
#line 8404 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1101:
/* Line 1792 of yacc.c  */
#line 8405 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1102:
/* Line 1792 of yacc.c  */
#line 8409 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 1103:
/* Line 1792 of yacc.c  */
#line 8410 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 1104:
/* Line 1792 of yacc.c  */
#line 8411 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 1105:
/* Line 1792 of yacc.c  */
#line 8415 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1106:
/* Line 1792 of yacc.c  */
#line 8417 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column((yyvsp[(2) - (2)].lex_str).str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1107:
/* Line 1792 of yacc.c  */
#line 8422 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1108:
/* Line 1792 of yacc.c  */
#line 8429 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1109:
/* Line 1792 of yacc.c  */
#line 8430 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1110:
/* Line 1792 of yacc.c  */
#line 8431 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1111:
/* Line 1792 of yacc.c  */
#line 8432 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1112:
/* Line 1792 of yacc.c  */
#line 8437 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
    break;

  case 1113:
/* Line 1792 of yacc.c  */
#line 8442 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
    break;

  case 1114:
/* Line 1792 of yacc.c  */
#line 8449 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1115:
/* Line 1792 of yacc.c  */
#line 8451 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[(3) - (4)].num);
        }
    break;

  case 1116:
/* Line 1792 of yacc.c  */
#line 8461 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1117:
/* Line 1792 of yacc.c  */
#line 8476 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1119:
/* Line 1792 of yacc.c  */
#line 8497 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1120:
/* Line 1792 of yacc.c  */
#line 8513 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1121:
/* Line 1792 of yacc.c  */
#line 8517 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1122:
/* Line 1792 of yacc.c  */
#line 8524 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1123:
/* Line 1792 of yacc.c  */
#line 8528 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1124:
/* Line 1792 of yacc.c  */
#line 8535 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1125:
/* Line 1792 of yacc.c  */
#line 8539 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1126:
/* Line 1792 of yacc.c  */
#line 8543 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1128:
/* Line 1792 of yacc.c  */
#line 8554 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1129:
/* Line 1792 of yacc.c  */
#line 8558 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1130:
/* Line 1792 of yacc.c  */
#line 8564 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1131:
/* Line 1792 of yacc.c  */
#line 8568 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1132:
/* Line 1792 of yacc.c  */
#line 8574 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1133:
/* Line 1792 of yacc.c  */
#line 8578 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1134:
/* Line 1792 of yacc.c  */
#line 8584 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1135:
/* Line 1792 of yacc.c  */
#line 8588 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1136:
/* Line 1792 of yacc.c  */
#line 8595 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1137:
/* Line 1792 of yacc.c  */
#line 8599 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1138:
/* Line 1792 of yacc.c  */
#line 8606 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1139:
/* Line 1792 of yacc.c  */
#line 8610 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1140:
/* Line 1792 of yacc.c  */
#line 8617 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1141:
/* Line 1792 of yacc.c  */
#line 8621 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1142:
/* Line 1792 of yacc.c  */
#line 8628 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
    break;

  case 1143:
/* Line 1792 of yacc.c  */
#line 8633 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
    break;

  case 1146:
/* Line 1792 of yacc.c  */
#line 8661 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1147:
/* Line 1792 of yacc.c  */
#line 8666 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1148:
/* Line 1792 of yacc.c  */
#line 8671 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1149:
/* Line 1792 of yacc.c  */
#line 8678 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1150:
/* Line 1792 of yacc.c  */
#line 8685 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1151:
/* Line 1792 of yacc.c  */
#line 8689 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 1152:
/* Line 1792 of yacc.c  */
#line 8690 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 1153:
/* Line 1792 of yacc.c  */
#line 8691 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 1154:
/* Line 1792 of yacc.c  */
#line 8696 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1155:
/* Line 1792 of yacc.c  */
#line 8706 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1156:
/* Line 1792 of yacc.c  */
#line 8717 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1157:
/* Line 1792 of yacc.c  */
#line 8718 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1158:
/* Line 1792 of yacc.c  */
#line 8722 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1159:
/* Line 1792 of yacc.c  */
#line 8723 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1160:
/* Line 1792 of yacc.c  */
#line 8727 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1161:
/* Line 1792 of yacc.c  */
#line 8728 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1162:
/* Line 1792 of yacc.c  */
#line 8729 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 1163:
/* Line 1792 of yacc.c  */
#line 8734 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1164:
/* Line 1792 of yacc.c  */
#line 8744 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1165:
/* Line 1792 of yacc.c  */
#line 8756 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1166:
/* Line 1792 of yacc.c  */
#line 8764 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1167:
/* Line 1792 of yacc.c  */
#line 8779 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1168:
/* Line 1792 of yacc.c  */
#line 8790 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1169:
/* Line 1792 of yacc.c  */
#line 8791 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1170:
/* Line 1792 of yacc.c  */
#line 8795 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1171:
/* Line 1792 of yacc.c  */
#line 8796 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1172:
/* Line 1792 of yacc.c  */
#line 8800 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1173:
/* Line 1792 of yacc.c  */
#line 8801 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 1174:
/* Line 1792 of yacc.c  */
#line 8802 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 1175:
/* Line 1792 of yacc.c  */
#line 8803 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1176:
/* Line 1792 of yacc.c  */
#line 8804 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 1177:
/* Line 1792 of yacc.c  */
#line 8805 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 1178:
/* Line 1792 of yacc.c  */
#line 8810 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1179:
/* Line 1792 of yacc.c  */
#line 8820 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1180:
/* Line 1792 of yacc.c  */
#line 8831 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1181:
/* Line 1792 of yacc.c  */
#line 8832 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1182:
/* Line 1792 of yacc.c  */
#line 8833 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1183:
/* Line 1792 of yacc.c  */
#line 8838 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1184:
/* Line 1792 of yacc.c  */
#line 8842 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1185:
/* Line 1792 of yacc.c  */
#line 8844 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1186:
/* Line 1792 of yacc.c  */
#line 8851 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1187:
/* Line 1792 of yacc.c  */
#line 8856 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1190:
/* Line 1792 of yacc.c  */
#line 8869 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1191:
/* Line 1792 of yacc.c  */
#line 8882 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1192:
/* Line 1792 of yacc.c  */
#line 8886 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1197:
/* Line 1792 of yacc.c  */
#line 8905 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (2)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1198:
/* Line 1792 of yacc.c  */
#line 8915 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1199:
/* Line 1792 of yacc.c  */
#line 8924 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1200:
/* Line 1792 of yacc.c  */
#line 8925 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1201:
/* Line 1792 of yacc.c  */
#line 8930 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1202:
/* Line 1792 of yacc.c  */
#line 8936 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1207:
/* Line 1792 of yacc.c  */
#line 8951 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1208:
/* Line 1792 of yacc.c  */
#line 8961 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (4)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1209:
/* Line 1792 of yacc.c  */
#line 8971 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
    break;

  case 1212:
/* Line 1792 of yacc.c  */
#line 8982 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1213:
/* Line 1792 of yacc.c  */
#line 8984 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(3) - (4)].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[(3) - (4)].key_usage_list);
          }
    break;

  case 1214:
/* Line 1792 of yacc.c  */
#line 8994 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1215:
/* Line 1792 of yacc.c  */
#line 8995 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1216:
/* Line 1792 of yacc.c  */
#line 9005 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select)= NEW_PTN PT_select((yyvsp[(1) - (1)].select_init), SQLCOM_SELECT);
          }
    break;

  case 1217:
/* Line 1792 of yacc.c  */
#line 9013 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_init)= NEW_PTN PT_select_init2((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2), (yyvsp[(3) - (3)].union_list));
          }
    break;

  case 1218:
/* Line 1792 of yacc.c  */
#line 9017 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_init)= NEW_PTN PT_select_init_parenthesis((yyvsp[(2) - (4)].select_paren), (yyvsp[(4) - (4)].node));
          }
    break;

  case 1219:
/* Line 1792 of yacc.c  */
#line 9024 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_paren)= NEW_PTN PT_select_paren((yyvsp[(1) - (2)].optimizer_hints), (yyvsp[(2) - (2)].select_part2));
          }
    break;

  case 1220:
/* Line 1792 of yacc.c  */
#line 9027 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.select_paren)= (yyvsp[(2) - (3)].select_paren); }
    break;

  case 1221:
/* Line 1792 of yacc.c  */
#line 9033 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_paren_derived)= NEW_PTN PT_select_paren_derived((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2_derived), (yyvsp[(3) - (3)].table_expression));
          }
    break;

  case 1222:
/* Line 1792 of yacc.c  */
#line 9036 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.select_paren_derived)= (yyvsp[(2) - (3)].select_paren_derived); }
    break;

  case 1223:
/* Line 1792 of yacc.c  */
#line 9049 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (4)].select_options_and_item_list), NULL, NULL, NULL, NULL, NULL,
                                        (yyvsp[(2) - (4)].order), (yyvsp[(3) - (4)].limit_clause), NULL, NULL, (yyvsp[(4) - (4)].select_lock_type));
          }
    break;

  case 1224:
/* Line 1792 of yacc.c  */
#line 9054 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (3)].select_options_and_item_list), (yyvsp[(2) - (3)].into_destination), NULL, NULL, NULL, NULL, NULL,
                                        NULL, NULL, NULL, (yyvsp[(3) - (3)].select_lock_type));
          }
    break;

  case 1225:
/* Line 1792 of yacc.c  */
#line 9069 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (11)].into_destination) && (yyvsp[(10) - (11)].into_destination))
            {
              /* double "INTO" clause */
              YYTHD->parse_error_at((yylsp[(10) - (11)]), ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(9) - (11)].procedure_analyse) && ((yyvsp[(2) - (11)].into_destination) || (yyvsp[(10) - (11)].into_destination)))
            {
              /* "INTO" with "PROCEDURE ANALYSE" */
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (11)].select_options_and_item_list), (yyvsp[(2) - (11)].into_destination), (yyvsp[(3) - (11)].table_reference_list), (yyvsp[(4) - (11)].item), (yyvsp[(5) - (11)].group), (yyvsp[(6) - (11)].item), (yyvsp[(7) - (11)].order), (yyvsp[(8) - (11)].limit_clause), (yyvsp[(9) - (11)].procedure_analyse), (yyvsp[(10) - (11)].into_destination),
                                        (yyvsp[(11) - (11)].select_lock_type));
          }
    break;

  case 1226:
/* Line 1792 of yacc.c  */
#line 9088 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          }
    break;

  case 1227:
/* Line 1792 of yacc.c  */
#line 9095 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options_and_item_list)= NEW_PTN PT_select_options_and_item_list((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 1228:
/* Line 1792 of yacc.c  */
#line 9110 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_expression)= NEW_PTN PT_table_expression((yyvsp[(1) - (8)].table_reference_list), (yyvsp[(2) - (8)].item), (yyvsp[(3) - (8)].group), (yyvsp[(4) - (8)].item), (yyvsp[(5) - (8)].order), (yyvsp[(6) - (8)].limit_clause), (yyvsp[(7) - (8)].procedure_analyse), (yyvsp[(8) - (8)].select_lock_type));
          }
    break;

  case 1229:
/* Line 1792 of yacc.c  */
#line 9116 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (2)].table_reference_list); }
    break;

  case 1230:
/* Line 1792 of yacc.c  */
#line 9120 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= NULL; }
    break;

  case 1232:
/* Line 1792 of yacc.c  */
#line 9126 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= NEW_PTN PT_table_reference_list((yyvsp[(1) - (1)].join_table_list));
          }
    break;

  case 1233:
/* Line 1792 of yacc.c  */
#line 9129 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= NULL; }
    break;

  case 1234:
/* Line 1792 of yacc.c  */
#line 9138 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1236:
/* Line 1792 of yacc.c  */
#line 9147 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.select_options).merge((yyvsp[(1) - (2)].select_options), (yyvsp[(2) - (2)].select_options)))
              MYSQL_YYABORT;
          }
    break;

  case 1238:
/* Line 1792 of yacc.c  */
#line 9156 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= (yyvsp[(1) - (1)].ulonglong_number);
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1239:
/* Line 1792 of yacc.c  */
#line 9161 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
    break;

  case 1240:
/* Line 1792 of yacc.c  */
#line 9171 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_CACHE");
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE;
          }
    break;

  case 1241:
/* Line 1792 of yacc.c  */
#line 9183 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.select_lock_type).is_set= false; }
    break;

  case 1242:
/* Line 1792 of yacc.c  */
#line 9185 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_WRITE;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1243:
/* Line 1792 of yacc.c  */
#line 9191 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_READ_WITH_SHARED_LOCKS;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1244:
/* Line 1792 of yacc.c  */
#line 9200 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1245:
/* Line 1792 of yacc.c  */
#line 9206 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1246:
/* Line 1792 of yacc.c  */
#line 9212 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
    break;

  case 1247:
/* Line 1792 of yacc.c  */
#line 9221 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1248:
/* Line 1792 of yacc.c  */
#line 9223 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[(1) - (2)].item), (yylsp[(1) - (2)]).cpp, (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1249:
/* Line 1792 of yacc.c  */
#line 9230 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1250:
/* Line 1792 of yacc.c  */
#line 9231 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1251:
/* Line 1792 of yacc.c  */
#line 9232 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1252:
/* Line 1792 of yacc.c  */
#line 9233 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1253:
/* Line 1792 of yacc.c  */
#line 9234 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1254:
/* Line 1792 of yacc.c  */
#line 9238 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1255:
/* Line 1792 of yacc.c  */
#line 9239 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1256:
/* Line 1792 of yacc.c  */
#line 9245 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYTHD->mem_root, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1257:
/* Line 1792 of yacc.c  */
#line 9251 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1258:
/* Line 1792 of yacc.c  */
#line 9256 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYTHD->mem_root, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1259:
/* Line 1792 of yacc.c  */
#line 9262 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1260:
/* Line 1792 of yacc.c  */
#line 9266 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_istrue((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1261:
/* Line 1792 of yacc.c  */
#line 9270 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnottrue((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1262:
/* Line 1792 of yacc.c  */
#line 9274 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isfalse((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1263:
/* Line 1792 of yacc.c  */
#line 9278 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotfalse((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1264:
/* Line 1792 of yacc.c  */
#line 9282 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1265:
/* Line 1792 of yacc.c  */
#line 9286 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1267:
/* Line 1792 of yacc.c  */
#line 9294 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1268:
/* Line 1792 of yacc.c  */
#line 9298 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1269:
/* Line 1792 of yacc.c  */
#line 9302 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(2) - (3)].boolfunc2creator), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1270:
/* Line 1792 of yacc.c  */
#line 9306 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (6)].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->parse_error_at((yylsp[(2) - (6)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].subselect));
          }
    break;

  case 1272:
/* Line 1792 of yacc.c  */
#line 9323 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].subselect));
          }
    break;

  case 1273:
/* Line 1792 of yacc.c  */
#line 9327 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].subselect));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1274:
/* Line 1792 of yacc.c  */
#line 9332 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
          }
    break;

  case 1275:
/* Line 1792 of yacc.c  */
#line 9336 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item_list2) == NULL || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(4) - (7)].item)) || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(1) - (7)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(6) - (7)].item_list2), false);
          }
    break;

  case 1276:
/* Line 1792 of yacc.c  */
#line 9343 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
          }
    break;

  case 1277:
/* Line 1792 of yacc.c  */
#line 9347 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(7) - (8)].item_list2) == NULL || (yyvsp[(7) - (8)].item_list2)->push_front((yyvsp[(5) - (8)].item)) || (yyvsp[(7) - (8)].item_list2)->value.push_front((yyvsp[(1) - (8)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(7) - (8)].item_list2), true);
          }
    break;

  case 1278:
/* Line 1792 of yacc.c  */
#line 9354 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].item), false);
          }
    break;

  case 1279:
/* Line 1792 of yacc.c  */
#line 9358 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].item), true);
          }
    break;

  case 1280:
/* Line 1792 of yacc.c  */
#line 9362 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(1) - (4)].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
    break;

  case 1281:
/* Line 1792 of yacc.c  */
#line 9370 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(3) - (4)].item), (yyvsp[(4) - (4)].item));
          }
    break;

  case 1282:
/* Line 1792 of yacc.c  */
#line 9374 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_not((yyloc), item);
          }
    break;

  case 1283:
/* Line 1792 of yacc.c  */
#line 9381 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1284:
/* Line 1792 of yacc.c  */
#line 9385 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].item));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1286:
/* Line 1792 of yacc.c  */
#line 9394 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1287:
/* Line 1792 of yacc.c  */
#line 9398 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1288:
/* Line 1792 of yacc.c  */
#line 9402 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1289:
/* Line 1792 of yacc.c  */
#line 9406 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1290:
/* Line 1792 of yacc.c  */
#line 9410 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1291:
/* Line 1792 of yacc.c  */
#line 9414 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1292:
/* Line 1792 of yacc.c  */
#line 9418 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 0);
          }
    break;

  case 1293:
/* Line 1792 of yacc.c  */
#line 9422 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 1);
          }
    break;

  case 1294:
/* Line 1792 of yacc.c  */
#line 9426 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1295:
/* Line 1792 of yacc.c  */
#line 9430 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1296:
/* Line 1792 of yacc.c  */
#line 9434 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1297:
/* Line 1792 of yacc.c  */
#line 9438 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1298:
/* Line 1792 of yacc.c  */
#line 9442 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1299:
/* Line 1792 of yacc.c  */
#line 9446 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1309:
/* Line 1792 of yacc.c  */
#line 9473 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1310:
/* Line 1792 of yacc.c  */
#line 9474 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
    break;

  case 1311:
/* Line 1792 of yacc.c  */
#line 9475 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1312:
/* Line 1792 of yacc.c  */
#line 9476 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1313:
/* Line 1792 of yacc.c  */
#line 9477 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1314:
/* Line 1792 of yacc.c  */
#line 9478 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1315:
/* Line 1792 of yacc.c  */
#line 9479 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1316:
/* Line 1792 of yacc.c  */
#line 9483 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1317:
/* Line 1792 of yacc.c  */
#line 9484 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1323:
/* Line 1792 of yacc.c  */
#line 9494 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1325:
/* Line 1792 of yacc.c  */
#line 9498 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].param_marker); }
    break;

  case 1328:
/* Line 1792 of yacc.c  */
#line 9502 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1329:
/* Line 1792 of yacc.c  */
#line 9506 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
    break;

  case 1330:
/* Line 1792 of yacc.c  */
#line 9510 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1331:
/* Line 1792 of yacc.c  */
#line 9514 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1332:
/* Line 1792 of yacc.c  */
#line 9518 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1333:
/* Line 1792 of yacc.c  */
#line 9522 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[(2) - (3)].subselect));
          }
    break;

  case 1334:
/* Line 1792 of yacc.c  */
#line 9526 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1335:
/* Line 1792 of yacc.c  */
#line 9528 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item_list2)->value);
          }
    break;

  case 1336:
/* Line 1792 of yacc.c  */
#line 9532 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item_list2)->value);
          }
    break;

  case 1337:
/* Line 1792 of yacc.c  */
#line 9536 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[(3) - (4)].subselect));
          }
    break;

  case 1338:
/* Line 1792 of yacc.c  */
#line 9540 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[(2) - (4)].lex_str), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1339:
/* Line 1792 of yacc.c  */
#line 9544 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[(2) - (7)].item_list2), (yyvsp[(5) - (7)].item), (yyvsp[(6) - (7)].num));
          }
    break;

  case 1340:
/* Line 1792 of yacc.c  */
#line 9548 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(2) - (2)]), (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
    break;

  case 1341:
/* Line 1792 of yacc.c  */
#line 9552 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1342:
/* Line 1792 of yacc.c  */
#line 9556 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
          }
    break;

  case 1343:
/* Line 1792 of yacc.c  */
#line 9560 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1344:
/* Line 1792 of yacc.c  */
#line 9564 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
          }
    break;

  case 1345:
/* Line 1792 of yacc.c  */
#line 9568 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1346:
/* Line 1792 of yacc.c  */
#line 9572 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1347:
/* Line 1792 of yacc.c  */
#line 9577 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(5) - (5)].item), (yyvsp[(2) - (5)].item), (yyvsp[(3) - (5)].interval), 0);
          }
    break;

  case 1348:
/* Line 1792 of yacc.c  */
#line 9581 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
          }
    break;

  case 1349:
/* Line 1792 of yacc.c  */
#line 9588 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
    break;

  case 1350:
/* Line 1792 of yacc.c  */
#line 9605 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1351:
/* Line 1792 of yacc.c  */
#line 9609 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (6)].item_list2), (yyvsp[(5) - (6)].charset));
          }
    break;

  case 1352:
/* Line 1792 of yacc.c  */
#line 9613 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
    break;

  case 1353:
/* Line 1792 of yacc.c  */
#line 9617 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1354:
/* Line 1792 of yacc.c  */
#line 9621 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1355:
/* Line 1792 of yacc.c  */
#line 9625 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1356:
/* Line 1792 of yacc.c  */
#line 9629 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].item), (yyvsp[(7) - (10)].item), (yyvsp[(9) - (10)].item));
          }
    break;

  case 1357:
/* Line 1792 of yacc.c  */
#line 9633 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYTHD->mem_root, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1358:
/* Line 1792 of yacc.c  */
#line 9637 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYTHD->mem_root, (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item_list2));
          }
    break;

  case 1359:
/* Line 1792 of yacc.c  */
#line 9641 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1360:
/* Line 1792 of yacc.c  */
#line 9645 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1361:
/* Line 1792 of yacc.c  */
#line 9649 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1362:
/* Line 1792 of yacc.c  */
#line 9653 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1363:
/* Line 1792 of yacc.c  */
#line 9657 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1364:
/* Line 1792 of yacc.c  */
#line 9661 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_time_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1365:
/* Line 1792 of yacc.c  */
#line 9665 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_datetime_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1366:
/* Line 1792 of yacc.c  */
#line 9669 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
          }
    break;

  case 1367:
/* Line 1792 of yacc.c  */
#line 9673 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(3) - (4)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1368:
/* Line 1792 of yacc.c  */
#line 9678 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1369:
/* Line 1792 of yacc.c  */
#line 9683 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1370:
/* Line 1792 of yacc.c  */
#line 9688 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1371:
/* Line 1792 of yacc.c  */
#line 9692 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1372:
/* Line 1792 of yacc.c  */
#line 9696 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1373:
/* Line 1792 of yacc.c  */
#line 9700 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1374:
/* Line 1792 of yacc.c  */
#line 9704 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), (yyvsp[(3) - (6)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1375:
/* Line 1792 of yacc.c  */
#line 9709 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
    break;

  case 1376:
/* Line 1792 of yacc.c  */
#line 9713 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1377:
/* Line 1792 of yacc.c  */
#line 9732 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 0);
          }
    break;

  case 1378:
/* Line 1792 of yacc.c  */
#line 9736 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1379:
/* Line 1792 of yacc.c  */
#line 9740 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
    break;

  case 1380:
/* Line 1792 of yacc.c  */
#line 9744 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1381:
/* Line 1792 of yacc.c  */
#line 9749 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1382:
/* Line 1792 of yacc.c  */
#line 9754 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1383:
/* Line 1792 of yacc.c  */
#line 9758 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1384:
/* Line 1792 of yacc.c  */
#line 9762 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1385:
/* Line 1792 of yacc.c  */
#line 9766 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 1386:
/* Line 1792 of yacc.c  */
#line 9771 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
          }
    break;

  case 1387:
/* Line 1792 of yacc.c  */
#line 9775 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 1);
          }
    break;

  case 1388:
/* Line 1792 of yacc.c  */
#line 9779 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1389:
/* Line 1792 of yacc.c  */
#line 9783 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1390:
/* Line 1792 of yacc.c  */
#line 9787 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1391:
/* Line 1792 of yacc.c  */
#line 9791 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1392:
/* Line 1792 of yacc.c  */
#line 9795 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1393:
/* Line 1792 of yacc.c  */
#line 9799 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1394:
/* Line 1792 of yacc.c  */
#line 9804 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(7) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(3) - (8)].interval_time_st), 0);
          }
    break;

  case 1395:
/* Line 1792 of yacc.c  */
#line 9808 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
          }
    break;

  case 1396:
/* Line 1792 of yacc.c  */
#line 9812 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
    break;

  case 1397:
/* Line 1792 of yacc.c  */
#line 9816 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1398:
/* Line 1792 of yacc.c  */
#line 9820 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1399:
/* Line 1792 of yacc.c  */
#line 9832 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1400:
/* Line 1792 of yacc.c  */
#line 9836 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1401:
/* Line 1792 of yacc.c  */
#line 9840 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1402:
/* Line 1792 of yacc.c  */
#line 9844 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1403:
/* Line 1792 of yacc.c  */
#line 9848 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
    break;

  case 1404:
/* Line 1792 of yacc.c  */
#line 9852 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1405:
/* Line 1792 of yacc.c  */
#line 9856 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1406:
/* Line 1792 of yacc.c  */
#line 9860 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
          }
    break;

  case 1407:
/* Line 1792 of yacc.c  */
#line 9864 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1408:
/* Line 1792 of yacc.c  */
#line 9868 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1409:
/* Line 1792 of yacc.c  */
#line 9872 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_password((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1410:
/* Line 1792 of yacc.c  */
#line 9876 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1411:
/* Line 1792 of yacc.c  */
#line 9880 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1412:
/* Line 1792 of yacc.c  */
#line 9884 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1413:
/* Line 1792 of yacc.c  */
#line 9888 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1414:
/* Line 1792 of yacc.c  */
#line 9892 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
    break;

  case 1415:
/* Line 1792 of yacc.c  */
#line 9896 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
          }
    break;

  case 1416:
/* Line 1792 of yacc.c  */
#line 9900 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (4)].item), NULL);
          }
    break;

  case 1417:
/* Line 1792 of yacc.c  */
#line 9904 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1418:
/* Line 1792 of yacc.c  */
#line 9908 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
          }
    break;

  case 1419:
/* Line 1792 of yacc.c  */
#line 9912 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
          }
    break;

  case 1420:
/* Line 1792 of yacc.c  */
#line 9917 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc),
                        (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE, true);
          }
    break;

  case 1421:
/* Line 1792 of yacc.c  */
#line 9922 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
          }
    break;

  case 1423:
/* Line 1792 of yacc.c  */
#line 9930 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "CONTAINS", "MBRCONTAINS");
            (yyval.item)= NEW_PTN Item_func_spatial_mbr_rel((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                        Item_func::SP_CONTAINS_FUNC);
          }
    break;

  case 1424:
/* Line 1792 of yacc.c  */
#line 9936 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
    break;

  case 1425:
/* Line 1792 of yacc.c  */
#line 9942 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
    break;

  case 1426:
/* Line 1792 of yacc.c  */
#line 9948 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
    break;

  case 1427:
/* Line 1792 of yacc.c  */
#line 9954 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
    break;

  case 1428:
/* Line 1792 of yacc.c  */
#line 9960 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
    break;

  case 1429:
/* Line 1792 of yacc.c  */
#line 9966 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1430:
/* Line 1792 of yacc.c  */
#line 9970 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
    break;

  case 1431:
/* Line 1792 of yacc.c  */
#line 9988 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1432:
/* Line 1792 of yacc.c  */
#line 9992 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), (yyvsp[(5) - (6)].item_list2));
          }
    break;

  case 1433:
/* Line 1792 of yacc.c  */
#line 9999 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1434:
/* Line 1792 of yacc.c  */
#line 10001 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                MYSQLerror(NULL,thd,"syntax error");
                            });
          }
    break;

  case 1435:
/* Line 1792 of yacc.c  */
#line 10013 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1436:
/* Line 1792 of yacc.c  */
#line 10014 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1437:
/* Line 1792 of yacc.c  */
#line 10018 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1438:
/* Line 1792 of yacc.c  */
#line 10019 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1439:
/* Line 1792 of yacc.c  */
#line 10023 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1440:
/* Line 1792 of yacc.c  */
#line 10024 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1441:
/* Line 1792 of yacc.c  */
#line 10029 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1442:
/* Line 1792 of yacc.c  */
#line 10035 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1443:
/* Line 1792 of yacc.c  */
#line 10044 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].lex_str), (yylsp[(1) - (2)]).cpp);
          }
    break;

  case 1444:
/* Line 1792 of yacc.c  */
#line 10051 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1445:
/* Line 1792 of yacc.c  */
#line 10055 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1446:
/* Line 1792 of yacc.c  */
#line 10059 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1447:
/* Line 1792 of yacc.c  */
#line 10063 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1448:
/* Line 1792 of yacc.c  */
#line 10067 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_json_array((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1449:
/* Line 1792 of yacc.c  */
#line 10071 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_json_object((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1450:
/* Line 1792 of yacc.c  */
#line 10075 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1451:
/* Line 1792 of yacc.c  */
#line 10079 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc));
          }
    break;

  case 1452:
/* Line 1792 of yacc.c  */
#line 10083 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1453:
/* Line 1792 of yacc.c  */
#line 10087 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[(4) - (5)].item_list2));
          }
    break;

  case 1454:
/* Line 1792 of yacc.c  */
#line 10091 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1455:
/* Line 1792 of yacc.c  */
#line 10100 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1456:
/* Line 1792 of yacc.c  */
#line 10104 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1457:
/* Line 1792 of yacc.c  */
#line 10108 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1458:
/* Line 1792 of yacc.c  */
#line 10112 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1459:
/* Line 1792 of yacc.c  */
#line 10116 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1460:
/* Line 1792 of yacc.c  */
#line 10120 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1461:
/* Line 1792 of yacc.c  */
#line 10124 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1462:
/* Line 1792 of yacc.c  */
#line 10128 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1463:
/* Line 1792 of yacc.c  */
#line 10132 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1464:
/* Line 1792 of yacc.c  */
#line 10139 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[(3) - (7)].num), (yyvsp[(4) - (7)].item_list2), (yyvsp[(5) - (7)].order_list), (yyvsp[(6) - (7)].string));
          }
    break;

  case 1465:
/* Line 1792 of yacc.c  */
#line 10145 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1466:
/* Line 1792 of yacc.c  */
#line 10150 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1467:
/* Line 1792 of yacc.c  */
#line 10154 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1468:
/* Line 1792 of yacc.c  */
#line 10158 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yylsp[(3) - (4)]), (yyvsp[(4) - (4)].lex_str));
          }
    break;

  case 1469:
/* Line 1792 of yacc.c  */
#line 10164 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1470:
/* Line 1792 of yacc.c  */
#line 10165 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1471:
/* Line 1792 of yacc.c  */
#line 10170 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1472:
/* Line 1792 of yacc.c  */
#line 10175 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1473:
/* Line 1792 of yacc.c  */
#line 10179 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= NULL; }
    break;

  case 1474:
/* Line 1792 of yacc.c  */
#line 10180 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= (yyvsp[(3) - (3)].order_list); }
    break;

  case 1475:
/* Line 1792 of yacc.c  */
#line 10185 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1476:
/* Line 1792 of yacc.c  */
#line 10190 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1477:
/* Line 1792 of yacc.c  */
#line 10200 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1478:
/* Line 1792 of yacc.c  */
#line 10207 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1479:
/* Line 1792 of yacc.c  */
#line 10215 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            (yyval.cast_type).type_flags= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.cast_type).length= (yyvsp[(2) - (3)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1480:
/* Line 1792 of yacc.c  */
#line 10223 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1481:
/* Line 1792 of yacc.c  */
#line 10231 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1482:
/* Line 1792 of yacc.c  */
#line 10239 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1483:
/* Line 1792 of yacc.c  */
#line 10247 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1484:
/* Line 1792 of yacc.c  */
#line 10255 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1485:
/* Line 1792 of yacc.c  */
#line 10263 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1486:
/* Line 1792 of yacc.c  */
#line 10271 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1487:
/* Line 1792 of yacc.c  */
#line 10279 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1488:
/* Line 1792 of yacc.c  */
#line 10287 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].precision).length;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].precision).dec;
          }
    break;

  case 1489:
/* Line 1792 of yacc.c  */
#line 10295 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1490:
/* Line 1792 of yacc.c  */
#line 10305 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1492:
/* Line 1792 of yacc.c  */
#line 10311 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1493:
/* Line 1792 of yacc.c  */
#line 10317 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1494:
/* Line 1792 of yacc.c  */
#line 10325 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1495:
/* Line 1792 of yacc.c  */
#line 10326 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1496:
/* Line 1792 of yacc.c  */
#line 10331 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1497:
/* Line 1792 of yacc.c  */
#line 10337 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1498:
/* Line 1792 of yacc.c  */
#line 10345 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1499:
/* Line 1792 of yacc.c  */
#line 10346 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1500:
/* Line 1792 of yacc.c  */
#line 10350 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1501:
/* Line 1792 of yacc.c  */
#line 10351 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1502:
/* Line 1792 of yacc.c  */
#line 10356 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1503:
/* Line 1792 of yacc.c  */
#line 10364 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1505:
/* Line 1792 of yacc.c  */
#line 10376 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_ref_join_table((yyvsp[(1) - (1)].node));
          }
    break;

  case 1506:
/* Line 1792 of yacc.c  */
#line 10383 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table_list)= NEW_PTN PT_join_table_list((yyloc), (yyvsp[(1) - (1)].table_list2));
          }
    break;

  case 1508:
/* Line 1792 of yacc.c  */
#line 10397 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.table_list2)= (yyvsp[(3) - (4)].table_list2); }
    break;

  case 1510:
/* Line 1792 of yacc.c  */
#line 10405 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_derived_table_list((yyloc), (yyvsp[(1) - (3)].table_list2), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1511:
/* Line 1792 of yacc.c  */
#line 10425 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NORMAL>((yyvsp[(1) - (3)].table_list2), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1512:
/* Line 1792 of yacc.c  */
#line 10429 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_STRAIGHT>((yyvsp[(1) - (3)].table_list2), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1513:
/* Line 1792 of yacc.c  */
#line 10435 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_NORMAL>((yyvsp[(1) - (5)].table_list2), (yylsp[(2) - (5)]), (yyvsp[(3) - (5)].table_list2), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1514:
/* Line 1792 of yacc.c  */
#line 10441 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_STRAIGHT>((yyvsp[(1) - (5)].table_list2), (yylsp[(2) - (5)]), (yyvsp[(3) - (5)].table_list2), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1515:
/* Line 1792 of yacc.c  */
#line 10447 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_NORMAL>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(3) - (7)].table_list2), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1516:
/* Line 1792 of yacc.c  */
#line 10451 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL>((yyvsp[(1) - (4)].table_list2), (yylsp[(2) - (4)]), (yyvsp[(4) - (4)].table_list2));
          }
    break;

  case 1517:
/* Line 1792 of yacc.c  */
#line 10459 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_LEFT>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(5) - (7)].table_list2), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1518:
/* Line 1792 of yacc.c  */
#line 10464 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_LEFT>((yyvsp[(1) - (9)].table_list2), (yylsp[(2) - (9)]), (yyvsp[(5) - (9)].table_list2), (yyvsp[(8) - (9)].string_list));
          }
    break;

  case 1519:
/* Line 1792 of yacc.c  */
#line 10468 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL_LEFT>((yyvsp[(1) - (6)].table_list2), (yylsp[(2) - (6)]), (yyvsp[(6) - (6)].table_list2));
          }
    break;

  case 1520:
/* Line 1792 of yacc.c  */
#line 10476 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_RIGHT>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(5) - (7)].table_list2), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1521:
/* Line 1792 of yacc.c  */
#line 10481 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_RIGHT>((yyvsp[(1) - (9)].table_list2), (yylsp[(2) - (9)]), (yyvsp[(5) - (9)].table_list2), (yyvsp[(8) - (9)].string_list));
          }
    break;

  case 1522:
/* Line 1792 of yacc.c  */
#line 10485 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL_RIGHT>((yyvsp[(1) - (6)].table_list2), (yylsp[(2) - (6)]), (yyvsp[(6) - (6)].table_list2));
          }
    break;

  case 1523:
/* Line 1792 of yacc.c  */
#line 10491 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1524:
/* Line 1792 of yacc.c  */
#line 10492 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1525:
/* Line 1792 of yacc.c  */
#line 10493 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1526:
/* Line 1792 of yacc.c  */
#line 10501 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 1528:
/* Line 1792 of yacc.c  */
#line 10507 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (4)].string_list);
          }
    break;

  case 1529:
/* Line 1792 of yacc.c  */
#line 10522 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_table_ident((yyvsp[(1) - (4)].table), (yyvsp[(2) - (4)].string_list), (yyvsp[(3) - (4)].lex_str_ptr), (yyvsp[(4) - (4)].key_usage_list));
          }
    break;

  case 1530:
/* Line 1792 of yacc.c  */
#line 10526 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_select_sym((yyloc), (yyvsp[(1) - (4)].optimizer_hints), (yyvsp[(2) - (4)].select_options), (yyvsp[(3) - (4)].item_list2), (yyvsp[(4) - (4)].table_expression));
          }
    break;

  case 1531:
/* Line 1792 of yacc.c  */
#line 10548 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_parenthesis((yyvsp[(2) - (4)].table_list2), (yyvsp[(4) - (4)].lex_str_ptr), (yylsp[(4) - (4)]));
          }
    break;

  case 1532:
/* Line 1792 of yacc.c  */
#line 10575 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived_union_select((yyvsp[(1) - (2)].table_list2), (yyvsp[(2) - (2)].node), (yylsp[(2) - (2)]));
          }
    break;

  case 1533:
/* Line 1792 of yacc.c  */
#line 10579 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived_union_union((yyvsp[(1) - (4)].table_list2), (yylsp[(2) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].select_lex2));
          }
    break;

  case 1534:
/* Line 1792 of yacc.c  */
#line 10586 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          }
    break;

  case 1535:
/* Line 1792 of yacc.c  */
#line 10593 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2_derived)= NEW_PTN PT_select_part2_derived((yyvsp[(2) - (3)].ulonglong_number), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 1536:
/* Line 1792 of yacc.c  */
#line 10601 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].table_list2));
          }
    break;

  case 1537:
/* Line 1792 of yacc.c  */
#line 10607 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1538:
/* Line 1792 of yacc.c  */
#line 10608 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1539:
/* Line 1792 of yacc.c  */
#line 10613 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
    break;

  case 1540:
/* Line 1792 of yacc.c  */
#line 10616 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1541:
/* Line 1792 of yacc.c  */
#line 10617 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1542:
/* Line 1792 of yacc.c  */
#line 10618 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1543:
/* Line 1792 of yacc.c  */
#line 10622 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1544:
/* Line 1792 of yacc.c  */
#line 10623 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1545:
/* Line 1792 of yacc.c  */
#line 10629 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), (yyvsp[(1) - (6)].index_hint), (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1546:
/* Line 1792 of yacc.c  */
#line 10635 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), INDEX_HINT_USE, (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1548:
/* Line 1792 of yacc.c  */
#line 10644 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].key_usage_list)->concat((yyvsp[(1) - (2)].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[(2) - (2)].key_usage_list);
          }
    break;

  case 1549:
/* Line 1792 of yacc.c  */
#line 10651 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1552:
/* Line 1792 of yacc.c  */
#line 10661 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= new (YYTHD->mem_root) List<Index_hint>;
            Index_hint *hint= new (YYTHD->mem_root) Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
    break;

  case 1554:
/* Line 1792 of yacc.c  */
#line 10672 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= new (YYTHD->mem_root) Index_hint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1555:
/* Line 1792 of yacc.c  */
#line 10678 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= new (YYTHD->mem_root) Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1556:
/* Line 1792 of yacc.c  */
#line 10687 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= new (YYTHD->mem_root) List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[(1) - (1)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1557:
/* Line 1792 of yacc.c  */
#line 10693 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[(3) - (3)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1558:
/* Line 1792 of yacc.c  */
#line 10701 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1559:
/* Line 1792 of yacc.c  */
#line 10712 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1560:
/* Line 1792 of yacc.c  */
#line 10724 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1561:
/* Line 1792 of yacc.c  */
#line 10725 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1562:
/* Line 1792 of yacc.c  */
#line 10726 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1563:
/* Line 1792 of yacc.c  */
#line 10727 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1564:
/* Line 1792 of yacc.c  */
#line 10728 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1565:
/* Line 1792 of yacc.c  */
#line 10729 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1566:
/* Line 1792 of yacc.c  */
#line 10730 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1567:
/* Line 1792 of yacc.c  */
#line 10731 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1568:
/* Line 1792 of yacc.c  */
#line 10732 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1569:
/* Line 1792 of yacc.c  */
#line 10733 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1570:
/* Line 1792 of yacc.c  */
#line 10734 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1571:
/* Line 1792 of yacc.c  */
#line 10735 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1572:
/* Line 1792 of yacc.c  */
#line 10739 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1573:
/* Line 1792 of yacc.c  */
#line 10740 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1574:
/* Line 1792 of yacc.c  */
#line 10741 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1575:
/* Line 1792 of yacc.c  */
#line 10742 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1576:
/* Line 1792 of yacc.c  */
#line 10743 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1577:
/* Line 1792 of yacc.c  */
#line 10744 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1578:
/* Line 1792 of yacc.c  */
#line 10745 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1579:
/* Line 1792 of yacc.c  */
#line 10746 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1580:
/* Line 1792 of yacc.c  */
#line 10747 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1581:
/* Line 1792 of yacc.c  */
#line 10751 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1582:
/* Line 1792 of yacc.c  */
#line 10752 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1583:
/* Line 1792 of yacc.c  */
#line 10753 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1584:
/* Line 1792 of yacc.c  */
#line 10754 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1588:
/* Line 1792 of yacc.c  */
#line 10764 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1589:
/* Line 1792 of yacc.c  */
#line 10766 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1592:
/* Line 1792 of yacc.c  */
#line 10779 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1593:
/* Line 1792 of yacc.c  */
#line 10781 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_WHERE>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1594:
/* Line 1792 of yacc.c  */
#line 10787 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1595:
/* Line 1792 of yacc.c  */
#line 10789 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_HAVING>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1596:
/* Line 1792 of yacc.c  */
#line 10795 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1597:
/* Line 1792 of yacc.c  */
#line 10796 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1598:
/* Line 1792 of yacc.c  */
#line 10804 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.group)= NULL; }
    break;

  case 1599:
/* Line 1792 of yacc.c  */
#line 10806 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[(3) - (4)].order_list), (yyvsp[(4) - (4)].olap_type));
          }
    break;

  case 1600:
/* Line 1792 of yacc.c  */
#line 10813 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1601:
/* Line 1792 of yacc.c  */
#line 10818 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1602:
/* Line 1792 of yacc.c  */
#line 10827 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
    break;

  case 1603:
/* Line 1792 of yacc.c  */
#line 10828 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= CUBE_TYPE; }
    break;

  case 1604:
/* Line 1792 of yacc.c  */
#line 10836 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= ROLLUP_TYPE; }
    break;

  case 1608:
/* Line 1792 of yacc.c  */
#line 10861 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (2)].item), &(yyvsp[(1) - (2)].item));

            THD *thd= YYTHD;
            ORDER *order= (ORDER *) thd->alloc(sizeof(ORDER));
            if (order == NULL)
              MYSQL_YYABORT;
            order->item_ptr= (yyvsp[(1) - (2)].item);
            order->direction= ((yyvsp[(2) - (2)].num) == 1) ? ORDER::ORDER_ASC : ORDER::ORDER_DESC;
            order->is_position= false;
            add_order_to_list(thd, order);
          }
    break;

  case 1609:
/* Line 1792 of yacc.c  */
#line 10880 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.order)= NULL; }
    break;

  case 1611:
/* Line 1792 of yacc.c  */
#line 10886 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1612:
/* Line 1792 of yacc.c  */
#line 10893 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1613:
/* Line 1792 of yacc.c  */
#line 10898 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1614:
/* Line 1792 of yacc.c  */
#line 10907 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1615:
/* Line 1792 of yacc.c  */
#line 10908 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1616:
/* Line 1792 of yacc.c  */
#line 10909 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1617:
/* Line 1792 of yacc.c  */
#line 10913 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.limit_clause)= NULL; }
    break;

  case 1619:
/* Line 1792 of yacc.c  */
#line 10919 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[(2) - (2)].limit_options));
          }
    break;

  case 1620:
/* Line 1792 of yacc.c  */
#line 10926 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (1)].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1621:
/* Line 1792 of yacc.c  */
#line 10932 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).is_offset_first= true;
          }
    break;

  case 1622:
/* Line 1792 of yacc.c  */
#line 10938 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1623:
/* Line 1792 of yacc.c  */
#line 10947 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), (yyvsp[(1) - (1)].lex_str), (yylsp[(1) - (1)]).raw);
          }
    break;

  case 1624:
/* Line 1792 of yacc.c  */
#line 10951 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[(1) - (1)].param_marker));
          }
    break;

  case 1625:
/* Line 1792 of yacc.c  */
#line 10955 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1626:
/* Line 1792 of yacc.c  */
#line 10959 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1627:
/* Line 1792 of yacc.c  */
#line 10963 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1628:
/* Line 1792 of yacc.c  */
#line 10969 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1629:
/* Line 1792 of yacc.c  */
#line 10970 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1630:
/* Line 1792 of yacc.c  */
#line 10974 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1631:
/* Line 1792 of yacc.c  */
#line 10975 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1632:
/* Line 1792 of yacc.c  */
#line 10976 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1633:
/* Line 1792 of yacc.c  */
#line 10977 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1634:
/* Line 1792 of yacc.c  */
#line 10978 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1635:
/* Line 1792 of yacc.c  */
#line 10979 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1636:
/* Line 1792 of yacc.c  */
#line 10983 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1637:
/* Line 1792 of yacc.c  */
#line 10984 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1638:
/* Line 1792 of yacc.c  */
#line 10985 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1639:
/* Line 1792 of yacc.c  */
#line 10986 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1640:
/* Line 1792 of yacc.c  */
#line 10987 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1641:
/* Line 1792 of yacc.c  */
#line 10991 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1642:
/* Line 1792 of yacc.c  */
#line 10992 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1643:
/* Line 1792 of yacc.c  */
#line 10993 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1644:
/* Line 1792 of yacc.c  */
#line 10994 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1645:
/* Line 1792 of yacc.c  */
#line 10995 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1646:
/* Line 1792 of yacc.c  */
#line 10999 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1647:
/* Line 1792 of yacc.c  */
#line 11000 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1648:
/* Line 1792 of yacc.c  */
#line 11001 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1649:
/* Line 1792 of yacc.c  */
#line 11002 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1650:
/* Line 1792 of yacc.c  */
#line 11007 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { my_syntax_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1653:
/* Line 1792 of yacc.c  */
#line 11016 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.procedure_analyse)= NULL; }
    break;

  case 1654:
/* Line 1792 of yacc.c  */
#line 11019 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn_no_replacement(YYTHD, "PROCEDURE ANALYSE");
            (yyval.procedure_analyse)= NEW_PTN PT_procedure_analyse((yyvsp[(4) - (5)].procedure_analyse_params));
          }
    break;

  case 1655:
/* Line 1792 of yacc.c  */
#line 11027 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= Proc_analyse_params::default_max_tree_elements;
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1656:
/* Line 1792 of yacc.c  */
#line 11032 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (1)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1657:
/* Line 1792 of yacc.c  */
#line 11037 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (3)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= static_cast<uint>((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 1658:
/* Line 1792 of yacc.c  */
#line 11045 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1659:
/* Line 1792 of yacc.c  */
#line 11058 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= (yyvsp[(1) - (3)].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(3) - (3)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1660:
/* Line 1792 of yacc.c  */
#line 11064 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list;
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(1) - (1)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1661:
/* Line 1792 of yacc.c  */
#line 11073 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1662:
/* Line 1792 of yacc.c  */
#line 11077 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1663:
/* Line 1792 of yacc.c  */
#line 11083 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= NULL; }
    break;

  case 1665:
/* Line 1792 of yacc.c  */
#line 11089 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= (yyvsp[(2) - (2)].into_destination);
          }
    break;

  case 1666:
/* Line 1792 of yacc.c  */
#line 11098 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].charset), (yyvsp[(4) - (5)].field_separators), (yyvsp[(5) - (5)].line_separators));
          }
    break;

  case 1667:
/* Line 1792 of yacc.c  */
#line 11102 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1668:
/* Line 1792 of yacc.c  */
#line 11105 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= (yyvsp[(1) - (1)].select_var_list); }
    break;

  case 1669:
/* Line 1792 of yacc.c  */
#line 11114 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select)= NEW_PTN PT_select(
                  NEW_PTN PT_select_init2(NULL,
                    NEW_PTN PT_select_part2(
                      NEW_PTN PT_select_options_and_item_list((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2))), NULL),
                                                              SQLCOM_DO);
          }
    break;

  case 1670:
/* Line 1792 of yacc.c  */
#line 11125 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1671:
/* Line 1792 of yacc.c  */
#line 11137 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1672:
/* Line 1792 of yacc.c  */
#line 11146 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1673:
/* Line 1792 of yacc.c  */
#line 11147 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1674:
/* Line 1792 of yacc.c  */
#line 11148 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
    break;

  case 1675:
/* Line 1792 of yacc.c  */
#line 11163 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1676:
/* Line 1792 of yacc.c  */
#line 11165 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1677:
/* Line 1792 of yacc.c  */
#line 11172 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), FALSE) != IDENT_NAME_OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(6) - (6)].lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name(to_lex_cstring((yyvsp[(4) - (6)].lex_str)), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1678:
/* Line 1792 of yacc.c  */
#line 11195 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(4) - (4)].lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(to_lex_cstring(db), (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1679:
/* Line 1792 of yacc.c  */
#line 11227 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1680:
/* Line 1792 of yacc.c  */
#line 11239 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[(3) - (5)].num);
          }
    break;

  case 1681:
/* Line 1792 of yacc.c  */
#line 11245 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1682:
/* Line 1792 of yacc.c  */
#line 11253 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1683:
/* Line 1792 of yacc.c  */
#line 11255 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1684:
/* Line 1792 of yacc.c  */
#line 11261 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1685:
/* Line 1792 of yacc.c  */
#line 11268 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1686:
/* Line 1792 of yacc.c  */
#line 11273 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1687:
/* Line 1792 of yacc.c  */
#line 11278 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_drop_server((yyvsp[(4) - (4)].lex_str), (yyvsp[(3) - (4)].num));
          }
    break;

  case 1690:
/* Line 1792 of yacc.c  */
#line 11292 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1691:
/* Line 1792 of yacc.c  */
#line 11303 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list).init(YYTHD->mem_root);
            if ((yyval.table_ident_list).push_back((yyvsp[(1) - (1)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1692:
/* Line 1792 of yacc.c  */
#line 11309 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list)= (yyvsp[(1) - (3)].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[(3) - (3)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1693:
/* Line 1792 of yacc.c  */
#line 11317 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1694:
/* Line 1792 of yacc.c  */
#line 11318 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1695:
/* Line 1792 of yacc.c  */
#line 11322 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1696:
/* Line 1792 of yacc.c  */
#line 11323 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1704:
/* Line 1792 of yacc.c  */
#line 11353 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].column_row_value_list_pair).column_list, (yyvsp[(7) - (8)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1705:
/* Line 1792 of yacc.c  */
#line 11368 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(8) - (9)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list),
                                  (yyvsp[(8) - (9)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[(9) - (9)].column_value_list_pair).column_list, (yyvsp[(9) - (9)].column_value_list_pair).value_list);
          }
    break;

  case 1706:
/* Line 1792 of yacc.c  */
#line 11385 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].insert_from_subquery).column_list, NULL,
                                  (yyvsp[(7) - (8)].insert_from_subquery).insert_query_expression,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1707:
/* Line 1792 of yacc.c  */
#line 11400 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].column_row_value_list_pair).column_list, (yyvsp[(6) - (6)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1708:
/* Line 1792 of yacc.c  */
#line 11413 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(7) - (7)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].lock_type), false, (yyvsp[(4) - (7)].table), (yyvsp[(5) - (7)].string_list),
                                  (yyvsp[(7) - (7)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1709:
/* Line 1792 of yacc.c  */
#line 11428 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].insert_from_subquery).column_list, NULL,
                                  (yyvsp[(6) - (6)].insert_from_subquery).insert_query_expression,
                                  NULL, NULL);
          }
    break;

  case 1710:
/* Line 1792 of yacc.c  */
#line 11437 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
    break;

  case 1711:
/* Line 1792 of yacc.c  */
#line 11438 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1712:
/* Line 1792 of yacc.c  */
#line 11440 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1713:
/* Line 1792 of yacc.c  */
#line 11448 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1714:
/* Line 1792 of yacc.c  */
#line 11452 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1715:
/* Line 1792 of yacc.c  */
#line 11454 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1718:
/* Line 1792 of yacc.c  */
#line 11471 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(1) - (1)].values_list);
          }
    break;

  case 1719:
/* Line 1792 of yacc.c  */
#line 11476 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(3) - (3)].values_list);
          }
    break;

  case 1720:
/* Line 1792 of yacc.c  */
#line 11481 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(4) - (4)].values_list);
          }
    break;

  case 1721:
/* Line 1792 of yacc.c  */
#line 11489 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= NEW_PTN PT_item_list;
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(1) - (1)].insert_query_expression);
          }
    break;

  case 1722:
/* Line 1792 of yacc.c  */
#line 11494 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= NEW_PTN PT_item_list;
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(3) - (3)].insert_query_expression);
          }
    break;

  case 1723:
/* Line 1792 of yacc.c  */
#line 11499 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(4) - (4)].insert_query_expression);
          }
    break;

  case 1724:
/* Line 1792 of yacc.c  */
#line 11507 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1725:
/* Line 1792 of yacc.c  */
#line 11513 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1726:
/* Line 1792 of yacc.c  */
#line 11522 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= (yyvsp[(2) - (2)].values_list);
          }
    break;

  case 1727:
/* Line 1792 of yacc.c  */
#line 11529 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression)= NEW_PTN PT_insert_query_expression(false, (yyvsp[(1) - (2)].create_select), (yyvsp[(2) - (2)].union_list));
          }
    break;

  case 1728:
/* Line 1792 of yacc.c  */
#line 11533 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression)= NEW_PTN PT_insert_query_expression(true, (yyvsp[(2) - (4)].create_select), (yyvsp[(4) - (4)].node));
          }
    break;

  case 1731:
/* Line 1792 of yacc.c  */
#line 11545 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.values_list)->push_back(&(yyvsp[(3) - (3)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1732:
/* Line 1792 of yacc.c  */
#line 11550 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[(1) - (1)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1733:
/* Line 1792 of yacc.c  */
#line 11559 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1734:
/* Line 1792 of yacc.c  */
#line 11560 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1735:
/* Line 1792 of yacc.c  */
#line 11564 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1736:
/* Line 1792 of yacc.c  */
#line 11565 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1737:
/* Line 1792 of yacc.c  */
#line 11569 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1738:
/* Line 1792 of yacc.c  */
#line 11574 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1740:
/* Line 1792 of yacc.c  */
#line 11584 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1741:
/* Line 1792 of yacc.c  */
#line 11590 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1743:
/* Line 1792 of yacc.c  */
#line 11600 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
    break;

  case 1744:
/* Line 1792 of yacc.c  */
#line 11607 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
    break;

  case 1745:
/* Line 1792 of yacc.c  */
#line 11612 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(5) - (5)].column_value_list_pair);
          }
    break;

  case 1746:
/* Line 1792 of yacc.c  */
#line 11629 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_update((yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(4) - (9)].join_table_list), (yyvsp[(6) - (9)].column_value_list_pair).column_list, (yyvsp[(6) - (9)].column_value_list_pair).value_list,
                                  (yyvsp[(7) - (9)].item), (yyvsp[(8) - (9)].order), (yyvsp[(9) - (9)].item));
          }
    break;

  case 1747:
/* Line 1792 of yacc.c  */
#line 11637 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(1) - (3)].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[(3) - (3)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(3) - (3)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1748:
/* Line 1792 of yacc.c  */
#line 11644 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[(1) - (1)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(1) - (1)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1749:
/* Line 1792 of yacc.c  */
#line 11656 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_pair).column= (yyvsp[(1) - (3)].item);
            (yyval.column_value_pair).value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1750:
/* Line 1792 of yacc.c  */
#line 11663 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1751:
/* Line 1792 of yacc.c  */
#line 11664 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1752:
/* Line 1792 of yacc.c  */
#line 11678 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete(YYTHD->mem_root, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].num), (yyvsp[(4) - (8)].table), (yyvsp[(5) - (8)].string_list), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].order), (yyvsp[(8) - (8)].item));
          }
    break;

  case 1753:
/* Line 1792 of yacc.c  */
#line 11687 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].num), (yyvsp[(3) - (6)].table_ident_list), (yyvsp[(5) - (6)].join_table_list), (yyvsp[(6) - (6)].item));
          }
    break;

  case 1754:
/* Line 1792 of yacc.c  */
#line 11697 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].num), (yyvsp[(4) - (7)].table_ident_list), (yyvsp[(6) - (7)].join_table_list), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1757:
/* Line 1792 of yacc.c  */
#line 11708 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1758:
/* Line 1792 of yacc.c  */
#line 11709 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].opt_delete_option) | (yyvsp[(2) - (2)].num); }
    break;

  case 1759:
/* Line 1792 of yacc.c  */
#line 11713 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_QUICK; }
    break;

  case 1760:
/* Line 1792 of yacc.c  */
#line 11714 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
    break;

  case 1761:
/* Line 1792 of yacc.c  */
#line 11715 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
    break;

  case 1762:
/* Line 1792 of yacc.c  */
#line 11720 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1763:
/* Line 1792 of yacc.c  */
#line 11728 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1770:
/* Line 1792 of yacc.c  */
#line 11753 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1771:
/* Line 1792 of yacc.c  */
#line 11757 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1772:
/* Line 1792 of yacc.c  */
#line 11761 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1773:
/* Line 1792 of yacc.c  */
#line 11765 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1774:
/* Line 1792 of yacc.c  */
#line 11769 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1775:
/* Line 1792 of yacc.c  */
#line 11773 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1776:
/* Line 1792 of yacc.c  */
#line 11777 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1777:
/* Line 1792 of yacc.c  */
#line 11781 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1778:
/* Line 1792 of yacc.c  */
#line 11785 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1779:
/* Line 1792 of yacc.c  */
#line 11792 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      Lex->query_id= 0;
    }
    break;

  case 1780:
/* Line 1792 of yacc.c  */
#line 11796 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
      int error;
      Lex->query_id= static_cast<my_thread_id>(my_strtoll10((yyvsp[(3) - (3)].lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
    break;

  case 1781:
/* Line 1792 of yacc.c  */
#line 11808 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
    break;

  case 1783:
/* Line 1792 of yacc.c  */
#line 11817 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1784:
/* Line 1792 of yacc.c  */
#line 11824 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1785:
/* Line 1792 of yacc.c  */
#line 11832 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1786:
/* Line 1792 of yacc.c  */
#line 11840 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1787:
/* Line 1792 of yacc.c  */
#line 11848 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1788:
/* Line 1792 of yacc.c  */
#line 11856 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1789:
/* Line 1792 of yacc.c  */
#line 11864 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1790:
/* Line 1792 of yacc.c  */
#line 11871 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1791:
/* Line 1792 of yacc.c  */
#line 11873 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1792:
/* Line 1792 of yacc.c  */
#line 11875 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1793:
/* Line 1792 of yacc.c  */
#line 11884 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1794:
/* Line 1792 of yacc.c  */
#line 11888 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1795:
/* Line 1792 of yacc.c  */
#line 11892 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1796:
/* Line 1792 of yacc.c  */
#line 11897 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (6)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 1797:
/* Line 1792 of yacc.c  */
#line 11902 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1798:
/* Line 1792 of yacc.c  */
#line 11907 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (7)].limit_clause));
          }
    break;

  case 1799:
/* Line 1792 of yacc.c  */
#line 11916 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(5) - (5)].item) != NULL)
              ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));
            Select->set_where_cond((yyvsp[(5) - (5)].item));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1800:
/* Line 1792 of yacc.c  */
#line 11929 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1801:
/* Line 1792 of yacc.c  */
#line 11936 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1802:
/* Line 1792 of yacc.c  */
#line 11941 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "warning_count");
          }
    break;

  case 1803:
/* Line 1792 of yacc.c  */
#line 11947 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "error_count");
          }
    break;

  case 1804:
/* Line 1792 of yacc.c  */
#line 11953 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
    break;

  case 1805:
/* Line 1792 of yacc.c  */
#line 11961 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
    break;

  case 1806:
/* Line 1792 of yacc.c  */
#line 11969 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
    break;

  case 1807:
/* Line 1792 of yacc.c  */
#line 11977 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1808:
/* Line 1792 of yacc.c  */
#line 11987 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_STATUS;
              lex->option_type= (yyvsp[(1) - (3)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1809:
/* Line 1792 of yacc.c  */
#line 12018 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1810:
/* Line 1792 of yacc.c  */
#line 12020 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_VARIABLES;
              lex->option_type= (yyvsp[(1) - (3)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1811:
/* Line 1792 of yacc.c  */
#line 12051 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1812:
/* Line 1792 of yacc.c  */
#line 12058 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1813:
/* Line 1792 of yacc.c  */
#line 12065 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1814:
/* Line 1792 of yacc.c  */
#line 12075 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->auth= NULL_CSTR;
          }
    break;

  case 1815:
/* Line 1792 of yacc.c  */
#line 12082 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1816:
/* Line 1792 of yacc.c  */
#line 12088 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1817:
/* Line 1792 of yacc.c  */
#line 12097 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1818:
/* Line 1792 of yacc.c  */
#line 12105 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1819:
/* Line 1792 of yacc.c  */
#line 12109 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1820:
/* Line 1792 of yacc.c  */
#line 12113 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1821:
/* Line 1792 of yacc.c  */
#line 12120 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1822:
/* Line 1792 of yacc.c  */
#line 12127 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1823:
/* Line 1792 of yacc.c  */
#line 12133 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1824:
/* Line 1792 of yacc.c  */
#line 12140 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1825:
/* Line 1792 of yacc.c  */
#line 12147 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1826:
/* Line 1792 of yacc.c  */
#line 12152 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1827:
/* Line 1792 of yacc.c  */
#line 12157 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1828:
/* Line 1792 of yacc.c  */
#line 12162 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[(4) - (4)].lex_user);
          }
    break;

  case 1829:
/* Line 1792 of yacc.c  */
#line 12171 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1830:
/* Line 1792 of yacc.c  */
#line 12173 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1831:
/* Line 1792 of yacc.c  */
#line 12175 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1836:
/* Line 1792 of yacc.c  */
#line 12189 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1837:
/* Line 1792 of yacc.c  */
#line 12190 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1838:
/* Line 1792 of yacc.c  */
#line 12194 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1839:
/* Line 1792 of yacc.c  */
#line 12195 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1842:
/* Line 1792 of yacc.c  */
#line 12204 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1843:
/* Line 1792 of yacc.c  */
#line 12205 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1844:
/* Line 1792 of yacc.c  */
#line 12209 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1845:
/* Line 1792 of yacc.c  */
#line 12210 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1847:
/* Line 1792 of yacc.c  */
#line 12216 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1848:
/* Line 1792 of yacc.c  */
#line 12223 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Select->set_where_cond((yyvsp[(2) - (2)].item));
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1850:
/* Line 1792 of yacc.c  */
#line 12235 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1851:
/* Line 1792 of yacc.c  */
#line 12242 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (show_compatibility_56)
            {
              /*
                This parsed tree fragment is added as part of a
                SQLCOM_SHOW_STATUS or SQLCOM_SHOW_VARIABLES command.
              */
              ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

              Select->set_where_cond((yyvsp[(2) - (2)].item));
              if ((yyvsp[(2) - (2)].item))
                (yyvsp[(2) - (2)].item)->top_level_item();
            }
            else
            {
              /*
                This parsed tree fragment is used to build a
                SQLCOM_SELECT statement, see sql/sql_show_status.cc
              */
              Select->set_where_cond((yyvsp[(2) - (2)].item));
            }
          }
    break;

  case 1852:
/* Line 1792 of yacc.c  */
#line 12269 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex->db= NULL;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1853:
/* Line 1792 of yacc.c  */
#line 12279 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1854:
/* Line 1792 of yacc.c  */
#line 12285 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->describe|= DESCRIBE_NORMAL;
          }
    break;

  case 1856:
/* Line 1792 of yacc.c  */
#line 12292 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 1857:
/* Line 1792 of yacc.c  */
#line 12293 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1858:
/* Line 1792 of yacc.c  */
#line 12294 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1859:
/* Line 1792 of yacc.c  */
#line 12295 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1860:
/* Line 1792 of yacc.c  */
#line 12296 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1861:
/* Line 1792 of yacc.c  */
#line 12298 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_EXPLAIN_OTHER;
            if (Lex->sphead)
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "non-standalone EXPLAIN FOR CONNECTION");
              MYSQL_YYABORT;
            }
            Lex->query_id= (my_thread_id)((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 1864:
/* Line 1792 of yacc.c  */
#line 12317 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1865:
/* Line 1792 of yacc.c  */
#line 12322 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "EXTENDED");
          }
    break;

  case 1866:
/* Line 1792 of yacc.c  */
#line 12328 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "PARTITIONS");
          }
    break;

  case 1867:
/* Line 1792 of yacc.c  */
#line 12334 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1868:
/* Line 1792 of yacc.c  */
#line 12354 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1869:
/* Line 1792 of yacc.c  */
#line 12355 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1870:
/* Line 1792 of yacc.c  */
#line 12357 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1871:
/* Line 1792 of yacc.c  */
#line 12371 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1872:
/* Line 1792 of yacc.c  */
#line 12378 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1873:
/* Line 1792 of yacc.c  */
#line 12383 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1874:
/* Line 1792 of yacc.c  */
#line 12392 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1875:
/* Line 1792 of yacc.c  */
#line 12393 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1877:
/* Line 1792 of yacc.c  */
#line 12398 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1878:
/* Line 1792 of yacc.c  */
#line 12400 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1879:
/* Line 1792 of yacc.c  */
#line 12411 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_syntax_error(ER(ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1880:
/* Line 1792 of yacc.c  */
#line 12419 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1882:
/* Line 1792 of yacc.c  */
#line 12434 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1883:
/* Line 1792 of yacc.c  */
#line 12439 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1884:
/* Line 1792 of yacc.c  */
#line 12441 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1885:
/* Line 1792 of yacc.c  */
#line 12443 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1886:
/* Line 1792 of yacc.c  */
#line 12445 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1887:
/* Line 1792 of yacc.c  */
#line 12447 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1888:
/* Line 1792 of yacc.c  */
#line 12449 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1889:
/* Line 1792 of yacc.c  */
#line 12451 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn_no_replacement(YYTHD, "FLUSH QUERY CACHE");
            Lex->type|= REFRESH_QUERY_CACHE_FREE;
          }
    break;

  case 1890:
/* Line 1792 of yacc.c  */
#line 12456 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1891:
/* Line 1792 of yacc.c  */
#line 12458 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1892:
/* Line 1792 of yacc.c  */
#line 12460 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1893:
/* Line 1792 of yacc.c  */
#line 12462 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1894:
/* Line 1792 of yacc.c  */
#line 12464 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1895:
/* Line 1792 of yacc.c  */
#line 12466 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1896:
/* Line 1792 of yacc.c  */
#line 12468 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
    break;

  case 1897:
/* Line 1792 of yacc.c  */
#line 12472 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1898:
/* Line 1792 of yacc.c  */
#line 12473 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1899:
/* Line 1792 of yacc.c  */
#line 12478 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1900:
/* Line 1792 of yacc.c  */
#line 12483 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1903:
/* Line 1792 of yacc.c  */
#line 12492 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1905:
/* Line 1792 of yacc.c  */
#line 12494 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1906:
/* Line 1792 of yacc.c  */
#line 12496 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn_no_replacement(YYTHD, "RESET QUERY CACHE");
            Lex->type|= REFRESH_QUERY_CACHE;
          }
    break;

  case 1907:
/* Line 1792 of yacc.c  */
#line 12503 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1908:
/* Line 1792 of yacc.c  */
#line 12504 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1909:
/* Line 1792 of yacc.c  */
#line 12509 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1910:
/* Line 1792 of yacc.c  */
#line 12515 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1912:
/* Line 1792 of yacc.c  */
#line 12524 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1913:
/* Line 1792 of yacc.c  */
#line 12528 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1914:
/* Line 1792 of yacc.c  */
#line 12542 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1915:
/* Line 1792 of yacc.c  */
#line 12553 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1916:
/* Line 1792 of yacc.c  */
#line 12554 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1917:
/* Line 1792 of yacc.c  */
#line 12555 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1918:
/* Line 1792 of yacc.c  */
#line 12562 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1919:
/* Line 1792 of yacc.c  */
#line 12573 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0),
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1920:
/* Line 1792 of yacc.c  */
#line 12585 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->set_ignore(false);
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1921:
/* Line 1792 of yacc.c  */
#line 12595 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Fix lock for LOAD DATA CONCURRENT REPLACE */
            if (lex->duplicates == DUP_REPLACE && (yyvsp[(4) - (13)].lock_type) == TL_WRITE_CONCURRENT_INSERT)
              (yyvsp[(4) - (13)].lock_type)= TL_WRITE_DEFAULT;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (13)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (13)].lock_type), (yyvsp[(4) - (13)].lock_type) == TL_WRITE_LOW_PRIORITY ?
                                               MDL_SHARED_WRITE_LOW_PRIO :
                                               MDL_SHARED_WRITE, NULL, (yyvsp[(13) - (13)].string_list)))
              MYSQL_YYABORT;
            lex->load_field_list.empty();
            lex->load_update_list.empty();
            lex->load_value_list.empty();
            /* We can't give an error in the middle when using LOCAL files */
            if (lex->local_file && lex->duplicates == DUP_ERROR)
              lex->set_ignore(true);
          }
    break;

  case 1922:
/* Line 1792 of yacc.c  */
#line 12613 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(15) - (15)].charset); }
    break;

  case 1923:
/* Line 1792 of yacc.c  */
#line 12617 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->exchange->field.merge_field_separators((yyvsp[(18) - (22)].field_separators));
            Lex->exchange->line.merge_line_separators((yyvsp[(19) - (22)].line_separators));
          }
    break;

  case 1924:
/* Line 1792 of yacc.c  */
#line 12624 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1925:
/* Line 1792 of yacc.c  */
#line 12625 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1926:
/* Line 1792 of yacc.c  */
#line 12629 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1927:
/* Line 1792 of yacc.c  */
#line 12630 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1928:
/* Line 1792 of yacc.c  */
#line 12634 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1929:
/* Line 1792 of yacc.c  */
#line 12635 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 1930:
/* Line 1792 of yacc.c  */
#line 12636 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1931:
/* Line 1792 of yacc.c  */
#line 12640 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1932:
/* Line 1792 of yacc.c  */
#line 12641 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1933:
/* Line 1792 of yacc.c  */
#line 12642 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->set_ignore(true); }
    break;

  case 1934:
/* Line 1792 of yacc.c  */
#line 12646 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators).cleanup(); }
    break;

  case 1935:
/* Line 1792 of yacc.c  */
#line 12647 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators)= (yyvsp[(2) - (2)].field_separators); }
    break;

  case 1936:
/* Line 1792 of yacc.c  */
#line 12652 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators)= (yyvsp[(1) - (2)].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[(2) - (2)].field_separators));
          }
    break;

  case 1938:
/* Line 1792 of yacc.c  */
#line 12661 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1939:
/* Line 1792 of yacc.c  */
#line 12666 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(4) - (4)].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
    break;

  case 1940:
/* Line 1792 of yacc.c  */
#line 12672 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1941:
/* Line 1792 of yacc.c  */
#line 12677 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1942:
/* Line 1792 of yacc.c  */
#line 12684 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators).cleanup(); }
    break;

  case 1943:
/* Line 1792 of yacc.c  */
#line 12685 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators)= (yyvsp[(2) - (2)].line_separators); }
    break;

  case 1944:
/* Line 1792 of yacc.c  */
#line 12690 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators)= (yyvsp[(1) - (2)].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[(2) - (2)].line_separators));
          }
    break;

  case 1946:
/* Line 1792 of yacc.c  */
#line 12699 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1947:
/* Line 1792 of yacc.c  */
#line 12704 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1948:
/* Line 1792 of yacc.c  */
#line 12711 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1949:
/* Line 1792 of yacc.c  */
#line 12713 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->exchange->line.line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1951:
/* Line 1792 of yacc.c  */
#line 12718 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1952:
/* Line 1792 of yacc.c  */
#line 12725 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1953:
/* Line 1792 of yacc.c  */
#line 12727 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1954:
/* Line 1792 of yacc.c  */
#line 12731 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1955:
/* Line 1792 of yacc.c  */
#line 12732 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1956:
/* Line 1792 of yacc.c  */
#line 12733 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1957:
/* Line 1792 of yacc.c  */
#line 12738 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1958:
/* Line 1792 of yacc.c  */
#line 12740 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1959:
/* Line 1792 of yacc.c  */
#line 12744 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1960:
/* Line 1792 of yacc.c  */
#line 12746 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1961:
/* Line 1792 of yacc.c  */
#line 12754 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1962:
/* Line 1792 of yacc.c  */
#line 12755 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1965:
/* Line 1792 of yacc.c  */
#line 12765 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (3)].item), &(yyvsp[(1) - (3)].item));
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex= Lex;
            uint length= (uint) ((yylsp[(3) - (3)]).cpp.end - (yylsp[(2) - (3)]).cpp.start);
            String *val= new (YYTHD->mem_root) String((yylsp[(2) - (3)]).cpp.start,
                                                      length,
                                                      YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->load_update_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->load_value_list.push_back((yyvsp[(3) - (3)].item)) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            (yyvsp[(3) - (3)].item)->item_name.copy((yylsp[(2) - (3)]).cpp.start, length, YYTHD->charset());
          }
    break;

  case 1966:
/* Line 1792 of yacc.c  */
#line 12788 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1967:
/* Line 1792 of yacc.c  */
#line 12793 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1968:
/* Line 1792 of yacc.c  */
#line 12798 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1969:
/* Line 1792 of yacc.c  */
#line 12803 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].text_literal), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1970:
/* Line 1792 of yacc.c  */
#line 12811 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1971:
/* Line 1792 of yacc.c  */
#line 12819 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_hex_string::make_hex_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1972:
/* Line 1792 of yacc.c  */
#line 12826 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_bin_string::make_bin_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1973:
/* Line 1792 of yacc.c  */
#line 12836 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.param_marker)= NEW_PTN Item_param((yyloc),
                                   (uint) ((yylsp[(1) - (1)]).raw.start - YYLIP->get_buf()));
          }
    break;

  case 1974:
/* Line 1792 of yacc.c  */
#line 12843 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1975:
/* Line 1792 of yacc.c  */
#line 12844 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(2) - (2)].item), &(yyval.item)); }
    break;

  case 1976:
/* Line 1792 of yacc.c  */
#line 12846 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            (yyvsp[(2) - (2)].item)->max_length++;
            (yyval.item)= ((Item_int *)(yyvsp[(2) - (2)].item))->neg();
          }
    break;

  case 1977:
/* Line 1792 of yacc.c  */
#line 12856 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].text_literal); }
    break;

  case 1980:
/* Line 1792 of yacc.c  */
#line 12860 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
            lip->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1981:
/* Line 1792 of yacc.c  */
#line 12873 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("FALSE"), 0, 1);
          }
    break;

  case 1982:
/* Line 1792 of yacc.c  */
#line 12877 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("TRUE"), 1, 1);
          }
    break;

  case 1983:
/* Line 1792 of yacc.c  */
#line 12881 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1984:
/* Line 1792 of yacc.c  */
#line 12885 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1985:
/* Line 1792 of yacc.c  */
#line 12889 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1986:
/* Line 1792 of yacc.c  */
#line 12893 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1987:
/* Line 1792 of yacc.c  */
#line 12900 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_num_literal_num((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1988:
/* Line 1792 of yacc.c  */
#line 12904 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_num_literal_num((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1989:
/* Line 1792 of yacc.c  */
#line 12908 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1990:
/* Line 1792 of yacc.c  */
#line 12912 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_decimal((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, YYCSCL);
          }
    break;

  case 1991:
/* Line 1792 of yacc.c  */
#line 12916 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_float((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1992:
/* Line 1792 of yacc.c  */
#line 12924 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
    break;

  case 1993:
/* Line 1792 of yacc.c  */
#line 12928 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
    break;

  case 1994:
/* Line 1792 of yacc.c  */
#line 12932 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
    break;

  case 1997:
/* Line 1792 of yacc.c  */
#line 12951 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[(1) - (3)].lex_str).str);
          }
    break;

  case 1998:
/* Line 1792 of yacc.c  */
#line 12955 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str);
          }
    break;

  case 1999:
/* Line 1792 of yacc.c  */
#line 12962 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].num));
          }
    break;

  case 2000:
/* Line 1792 of yacc.c  */
#line 12969 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2002:
/* Line 1792 of yacc.c  */
#line 12977 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2004:
/* Line 1792 of yacc.c  */
#line 12985 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 2005:
/* Line 1792 of yacc.c  */
#line 12989 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, ".<table>.<column>",
                                 "the table.column name without a dot prefix");
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), NULL, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 2006:
/* Line 1792 of yacc.c  */
#line 12995 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
          }
    break;

  case 2007:
/* Line 1792 of yacc.c  */
#line 13001 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2008:
/* Line 1792 of yacc.c  */
#line 13003 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2009:
/* Line 1792 of yacc.c  */
#line 13019 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2010:
/* Line 1792 of yacc.c  */
#line 13029 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, ".<column>", "the column name without a dot prefix");
            (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2011:
/* Line 1792 of yacc.c  */
#line 13037 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (1)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2012:
/* Line 1792 of yacc.c  */
#line 13043 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2013:
/* Line 1792 of yacc.c  */
#line 13053 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /* For Delphi */
            push_deprecated_warn(YYTHD, ".<table>", "the table name without a dot prefix");
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(2) - (2)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2014:
/* Line 1792 of yacc.c  */
#line 13064 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (2)].lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2015:
/* Line 1792 of yacc.c  */
#line 13070 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD, to_lex_cstring((yyvsp[(1) - (4)].lex_str)),
                                    to_lex_cstring((yyvsp[(3) - (4)].lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2016:
/* Line 1792 of yacc.c  */
#line 13080 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING db= { any_db, strlen(any_db) };
            (yyval.table)= new Table_ident(YYTHD, db, to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2017:
/* Line 1792 of yacc.c  */
#line 13089 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 2018:
/* Line 1792 of yacc.c  */
#line 13091 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                     (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                     (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2019:
/* Line 1792 of yacc.c  */
#line 13121 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 2020:
/* Line 1792 of yacc.c  */
#line 13134 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (strcont((yyvsp[(1) - (1)].lex_str).str, "."))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2021:
/* Line 1792 of yacc.c  */
#line 13147 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2022:
/* Line 1792 of yacc.c  */
#line 13163 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2023:
/* Line 1792 of yacc.c  */
#line 13179 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2024:
/* Line 1792 of yacc.c  */
#line 13195 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2025:
/* Line 1792 of yacc.c  */
#line 13197 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2026:
/* Line 1792 of yacc.c  */
#line 13207 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2027:
/* Line 1792 of yacc.c  */
#line 13209 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2028:
/* Line 1792 of yacc.c  */
#line 13219 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2029:
/* Line 1792 of yacc.c  */
#line 13220 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2030:
/* Line 1792 of yacc.c  */
#line 13221 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2031:
/* Line 1792 of yacc.c  */
#line 13226 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyvsp[(1) - (1)].lex_str));

            (yyval.lex_user)->user.str= (yyvsp[(1) - (1)].lex_str).str;
            (yyval.lex_user)->user.length= (yyvsp[(1) - (1)].lex_str).length;
            (yyval.lex_user)->host.str= "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->plugin= EMPTY_CSTR;
            (yyval.lex_user)->auth= NULL_CSTR;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length((yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2032:
/* Line 1792 of yacc.c  */
#line 13254 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyvsp[(1) - (3)].lex_str));
            trim_whitespace(system_charset_info, &(yyvsp[(3) - (3)].lex_str));

            (yyval.lex_user)->user.str= (yyvsp[(1) - (3)].lex_str).str;
            (yyval.lex_user)->user.length= (yyvsp[(1) - (3)].lex_str).length;
            (yyval.lex_user)->host.str= (yyvsp[(3) - (3)].lex_str).str;
            (yyval.lex_user)->host.length= (yyvsp[(3) - (3)].lex_str).length;
            (yyval.lex_user)->plugin= EMPTY_CSTR;
            (yyval.lex_user)->auth= NULL_CSTR;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length((yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name((yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
            (yyval.lex_user)->host.str= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 2033:
/* Line 1792 of yacc.c  */
#line 13291 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 2034:
/* Line 1792 of yacc.c  */
#line 13305 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2035:
/* Line 1792 of yacc.c  */
#line 13306 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2036:
/* Line 1792 of yacc.c  */
#line 13307 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2037:
/* Line 1792 of yacc.c  */
#line 13308 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2038:
/* Line 1792 of yacc.c  */
#line 13309 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2039:
/* Line 1792 of yacc.c  */
#line 13310 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2040:
/* Line 1792 of yacc.c  */
#line 13311 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2041:
/* Line 1792 of yacc.c  */
#line 13312 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2042:
/* Line 1792 of yacc.c  */
#line 13313 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2043:
/* Line 1792 of yacc.c  */
#line 13314 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2044:
/* Line 1792 of yacc.c  */
#line 13315 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2045:
/* Line 1792 of yacc.c  */
#line 13316 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2046:
/* Line 1792 of yacc.c  */
#line 13317 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2047:
/* Line 1792 of yacc.c  */
#line 13318 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2048:
/* Line 1792 of yacc.c  */
#line 13319 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2049:
/* Line 1792 of yacc.c  */
#line 13320 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2050:
/* Line 1792 of yacc.c  */
#line 13321 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2051:
/* Line 1792 of yacc.c  */
#line 13322 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2052:
/* Line 1792 of yacc.c  */
#line 13323 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2053:
/* Line 1792 of yacc.c  */
#line 13324 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2054:
/* Line 1792 of yacc.c  */
#line 13325 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2055:
/* Line 1792 of yacc.c  */
#line 13326 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2056:
/* Line 1792 of yacc.c  */
#line 13327 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2057:
/* Line 1792 of yacc.c  */
#line 13328 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2058:
/* Line 1792 of yacc.c  */
#line 13329 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2059:
/* Line 1792 of yacc.c  */
#line 13330 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2060:
/* Line 1792 of yacc.c  */
#line 13331 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2061:
/* Line 1792 of yacc.c  */
#line 13332 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2062:
/* Line 1792 of yacc.c  */
#line 13333 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2063:
/* Line 1792 of yacc.c  */
#line 13334 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2064:
/* Line 1792 of yacc.c  */
#line 13335 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2065:
/* Line 1792 of yacc.c  */
#line 13336 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2066:
/* Line 1792 of yacc.c  */
#line 13337 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2067:
/* Line 1792 of yacc.c  */
#line 13338 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2068:
/* Line 1792 of yacc.c  */
#line 13339 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2069:
/* Line 1792 of yacc.c  */
#line 13340 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2070:
/* Line 1792 of yacc.c  */
#line 13341 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2071:
/* Line 1792 of yacc.c  */
#line 13342 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2072:
/* Line 1792 of yacc.c  */
#line 13343 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2073:
/* Line 1792 of yacc.c  */
#line 13344 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2074:
/* Line 1792 of yacc.c  */
#line 13345 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2075:
/* Line 1792 of yacc.c  */
#line 13346 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2076:
/* Line 1792 of yacc.c  */
#line 13347 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2077:
/* Line 1792 of yacc.c  */
#line 13348 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2078:
/* Line 1792 of yacc.c  */
#line 13349 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2079:
/* Line 1792 of yacc.c  */
#line 13350 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2080:
/* Line 1792 of yacc.c  */
#line 13351 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2081:
/* Line 1792 of yacc.c  */
#line 13352 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2082:
/* Line 1792 of yacc.c  */
#line 13353 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2083:
/* Line 1792 of yacc.c  */
#line 13354 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2084:
/* Line 1792 of yacc.c  */
#line 13355 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2085:
/* Line 1792 of yacc.c  */
#line 13356 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2086:
/* Line 1792 of yacc.c  */
#line 13357 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2087:
/* Line 1792 of yacc.c  */
#line 13358 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2088:
/* Line 1792 of yacc.c  */
#line 13359 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2089:
/* Line 1792 of yacc.c  */
#line 13360 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2090:
/* Line 1792 of yacc.c  */
#line 13361 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2091:
/* Line 1792 of yacc.c  */
#line 13371 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2092:
/* Line 1792 of yacc.c  */
#line 13372 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2093:
/* Line 1792 of yacc.c  */
#line 13373 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2094:
/* Line 1792 of yacc.c  */
#line 13374 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2095:
/* Line 1792 of yacc.c  */
#line 13375 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2096:
/* Line 1792 of yacc.c  */
#line 13376 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2097:
/* Line 1792 of yacc.c  */
#line 13377 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2098:
/* Line 1792 of yacc.c  */
#line 13378 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2099:
/* Line 1792 of yacc.c  */
#line 13379 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2100:
/* Line 1792 of yacc.c  */
#line 13380 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2101:
/* Line 1792 of yacc.c  */
#line 13381 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2102:
/* Line 1792 of yacc.c  */
#line 13382 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2103:
/* Line 1792 of yacc.c  */
#line 13383 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2104:
/* Line 1792 of yacc.c  */
#line 13384 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2105:
/* Line 1792 of yacc.c  */
#line 13385 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2106:
/* Line 1792 of yacc.c  */
#line 13386 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2107:
/* Line 1792 of yacc.c  */
#line 13387 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2108:
/* Line 1792 of yacc.c  */
#line 13388 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2109:
/* Line 1792 of yacc.c  */
#line 13389 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2110:
/* Line 1792 of yacc.c  */
#line 13390 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2111:
/* Line 1792 of yacc.c  */
#line 13391 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2112:
/* Line 1792 of yacc.c  */
#line 13392 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2113:
/* Line 1792 of yacc.c  */
#line 13393 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2114:
/* Line 1792 of yacc.c  */
#line 13394 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2115:
/* Line 1792 of yacc.c  */
#line 13395 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2116:
/* Line 1792 of yacc.c  */
#line 13396 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2117:
/* Line 1792 of yacc.c  */
#line 13397 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2118:
/* Line 1792 of yacc.c  */
#line 13398 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2119:
/* Line 1792 of yacc.c  */
#line 13399 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2120:
/* Line 1792 of yacc.c  */
#line 13400 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2121:
/* Line 1792 of yacc.c  */
#line 13401 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2122:
/* Line 1792 of yacc.c  */
#line 13402 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2123:
/* Line 1792 of yacc.c  */
#line 13403 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2124:
/* Line 1792 of yacc.c  */
#line 13404 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2125:
/* Line 1792 of yacc.c  */
#line 13405 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2126:
/* Line 1792 of yacc.c  */
#line 13406 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2127:
/* Line 1792 of yacc.c  */
#line 13407 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2128:
/* Line 1792 of yacc.c  */
#line 13408 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2129:
/* Line 1792 of yacc.c  */
#line 13409 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2130:
/* Line 1792 of yacc.c  */
#line 13410 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2131:
/* Line 1792 of yacc.c  */
#line 13411 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2132:
/* Line 1792 of yacc.c  */
#line 13412 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2133:
/* Line 1792 of yacc.c  */
#line 13413 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2134:
/* Line 1792 of yacc.c  */
#line 13414 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2135:
/* Line 1792 of yacc.c  */
#line 13415 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2136:
/* Line 1792 of yacc.c  */
#line 13416 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2137:
/* Line 1792 of yacc.c  */
#line 13417 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2138:
/* Line 1792 of yacc.c  */
#line 13418 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2139:
/* Line 1792 of yacc.c  */
#line 13423 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2140:
/* Line 1792 of yacc.c  */
#line 13424 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2141:
/* Line 1792 of yacc.c  */
#line 13425 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2142:
/* Line 1792 of yacc.c  */
#line 13426 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2143:
/* Line 1792 of yacc.c  */
#line 13427 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2144:
/* Line 1792 of yacc.c  */
#line 13428 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2145:
/* Line 1792 of yacc.c  */
#line 13429 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2146:
/* Line 1792 of yacc.c  */
#line 13430 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2147:
/* Line 1792 of yacc.c  */
#line 13431 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2148:
/* Line 1792 of yacc.c  */
#line 13432 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2149:
/* Line 1792 of yacc.c  */
#line 13433 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2150:
/* Line 1792 of yacc.c  */
#line 13434 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2151:
/* Line 1792 of yacc.c  */
#line 13435 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2152:
/* Line 1792 of yacc.c  */
#line 13436 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2153:
/* Line 1792 of yacc.c  */
#line 13437 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2154:
/* Line 1792 of yacc.c  */
#line 13438 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2155:
/* Line 1792 of yacc.c  */
#line 13439 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2156:
/* Line 1792 of yacc.c  */
#line 13440 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2157:
/* Line 1792 of yacc.c  */
#line 13441 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2158:
/* Line 1792 of yacc.c  */
#line 13442 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2159:
/* Line 1792 of yacc.c  */
#line 13443 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2160:
/* Line 1792 of yacc.c  */
#line 13444 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2161:
/* Line 1792 of yacc.c  */
#line 13445 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2162:
/* Line 1792 of yacc.c  */
#line 13446 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2163:
/* Line 1792 of yacc.c  */
#line 13447 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2164:
/* Line 1792 of yacc.c  */
#line 13448 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2165:
/* Line 1792 of yacc.c  */
#line 13449 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2166:
/* Line 1792 of yacc.c  */
#line 13450 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2167:
/* Line 1792 of yacc.c  */
#line 13451 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2168:
/* Line 1792 of yacc.c  */
#line 13452 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2169:
/* Line 1792 of yacc.c  */
#line 13453 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2170:
/* Line 1792 of yacc.c  */
#line 13454 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2171:
/* Line 1792 of yacc.c  */
#line 13455 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2172:
/* Line 1792 of yacc.c  */
#line 13456 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2173:
/* Line 1792 of yacc.c  */
#line 13457 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2174:
/* Line 1792 of yacc.c  */
#line 13458 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2175:
/* Line 1792 of yacc.c  */
#line 13459 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2176:
/* Line 1792 of yacc.c  */
#line 13460 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2177:
/* Line 1792 of yacc.c  */
#line 13461 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2178:
/* Line 1792 of yacc.c  */
#line 13462 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2179:
/* Line 1792 of yacc.c  */
#line 13463 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2180:
/* Line 1792 of yacc.c  */
#line 13464 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2181:
/* Line 1792 of yacc.c  */
#line 13465 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2182:
/* Line 1792 of yacc.c  */
#line 13466 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2183:
/* Line 1792 of yacc.c  */
#line 13467 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2184:
/* Line 1792 of yacc.c  */
#line 13468 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2185:
/* Line 1792 of yacc.c  */
#line 13469 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2186:
/* Line 1792 of yacc.c  */
#line 13470 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2187:
/* Line 1792 of yacc.c  */
#line 13471 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2188:
/* Line 1792 of yacc.c  */
#line 13472 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2189:
/* Line 1792 of yacc.c  */
#line 13473 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2190:
/* Line 1792 of yacc.c  */
#line 13474 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2191:
/* Line 1792 of yacc.c  */
#line 13475 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2192:
/* Line 1792 of yacc.c  */
#line 13476 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2193:
/* Line 1792 of yacc.c  */
#line 13477 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2194:
/* Line 1792 of yacc.c  */
#line 13478 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2195:
/* Line 1792 of yacc.c  */
#line 13479 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2196:
/* Line 1792 of yacc.c  */
#line 13480 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2197:
/* Line 1792 of yacc.c  */
#line 13481 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2198:
/* Line 1792 of yacc.c  */
#line 13482 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2199:
/* Line 1792 of yacc.c  */
#line 13483 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2200:
/* Line 1792 of yacc.c  */
#line 13484 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2201:
/* Line 1792 of yacc.c  */
#line 13485 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2202:
/* Line 1792 of yacc.c  */
#line 13486 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2203:
/* Line 1792 of yacc.c  */
#line 13487 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2204:
/* Line 1792 of yacc.c  */
#line 13488 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2205:
/* Line 1792 of yacc.c  */
#line 13489 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2206:
/* Line 1792 of yacc.c  */
#line 13490 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2207:
/* Line 1792 of yacc.c  */
#line 13491 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2208:
/* Line 1792 of yacc.c  */
#line 13492 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2209:
/* Line 1792 of yacc.c  */
#line 13493 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2210:
/* Line 1792 of yacc.c  */
#line 13494 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2211:
/* Line 1792 of yacc.c  */
#line 13495 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2212:
/* Line 1792 of yacc.c  */
#line 13496 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2213:
/* Line 1792 of yacc.c  */
#line 13497 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2214:
/* Line 1792 of yacc.c  */
#line 13498 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2215:
/* Line 1792 of yacc.c  */
#line 13499 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2216:
/* Line 1792 of yacc.c  */
#line 13500 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2217:
/* Line 1792 of yacc.c  */
#line 13501 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2218:
/* Line 1792 of yacc.c  */
#line 13502 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2219:
/* Line 1792 of yacc.c  */
#line 13503 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2220:
/* Line 1792 of yacc.c  */
#line 13504 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2221:
/* Line 1792 of yacc.c  */
#line 13505 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2222:
/* Line 1792 of yacc.c  */
#line 13506 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2223:
/* Line 1792 of yacc.c  */
#line 13507 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2224:
/* Line 1792 of yacc.c  */
#line 13508 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2225:
/* Line 1792 of yacc.c  */
#line 13509 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2226:
/* Line 1792 of yacc.c  */
#line 13510 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2227:
/* Line 1792 of yacc.c  */
#line 13511 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2228:
/* Line 1792 of yacc.c  */
#line 13512 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2229:
/* Line 1792 of yacc.c  */
#line 13513 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2230:
/* Line 1792 of yacc.c  */
#line 13514 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2231:
/* Line 1792 of yacc.c  */
#line 13515 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2232:
/* Line 1792 of yacc.c  */
#line 13516 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2233:
/* Line 1792 of yacc.c  */
#line 13517 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2234:
/* Line 1792 of yacc.c  */
#line 13518 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2235:
/* Line 1792 of yacc.c  */
#line 13519 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2236:
/* Line 1792 of yacc.c  */
#line 13520 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2237:
/* Line 1792 of yacc.c  */
#line 13521 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2238:
/* Line 1792 of yacc.c  */
#line 13522 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2239:
/* Line 1792 of yacc.c  */
#line 13523 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2240:
/* Line 1792 of yacc.c  */
#line 13524 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2241:
/* Line 1792 of yacc.c  */
#line 13525 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2242:
/* Line 1792 of yacc.c  */
#line 13526 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2243:
/* Line 1792 of yacc.c  */
#line 13527 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2244:
/* Line 1792 of yacc.c  */
#line 13528 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2245:
/* Line 1792 of yacc.c  */
#line 13529 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2246:
/* Line 1792 of yacc.c  */
#line 13530 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2247:
/* Line 1792 of yacc.c  */
#line 13531 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2248:
/* Line 1792 of yacc.c  */
#line 13532 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2249:
/* Line 1792 of yacc.c  */
#line 13533 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2250:
/* Line 1792 of yacc.c  */
#line 13534 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2251:
/* Line 1792 of yacc.c  */
#line 13535 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2252:
/* Line 1792 of yacc.c  */
#line 13536 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2253:
/* Line 1792 of yacc.c  */
#line 13537 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2254:
/* Line 1792 of yacc.c  */
#line 13538 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2255:
/* Line 1792 of yacc.c  */
#line 13539 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2256:
/* Line 1792 of yacc.c  */
#line 13540 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2257:
/* Line 1792 of yacc.c  */
#line 13541 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2258:
/* Line 1792 of yacc.c  */
#line 13542 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2259:
/* Line 1792 of yacc.c  */
#line 13543 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2260:
/* Line 1792 of yacc.c  */
#line 13544 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2261:
/* Line 1792 of yacc.c  */
#line 13545 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2262:
/* Line 1792 of yacc.c  */
#line 13546 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2263:
/* Line 1792 of yacc.c  */
#line 13547 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2264:
/* Line 1792 of yacc.c  */
#line 13548 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2265:
/* Line 1792 of yacc.c  */
#line 13549 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2266:
/* Line 1792 of yacc.c  */
#line 13550 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2267:
/* Line 1792 of yacc.c  */
#line 13551 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2268:
/* Line 1792 of yacc.c  */
#line 13552 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2269:
/* Line 1792 of yacc.c  */
#line 13553 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2270:
/* Line 1792 of yacc.c  */
#line 13554 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2271:
/* Line 1792 of yacc.c  */
#line 13555 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2272:
/* Line 1792 of yacc.c  */
#line 13556 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2273:
/* Line 1792 of yacc.c  */
#line 13557 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2274:
/* Line 1792 of yacc.c  */
#line 13558 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2275:
/* Line 1792 of yacc.c  */
#line 13559 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2276:
/* Line 1792 of yacc.c  */
#line 13560 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2277:
/* Line 1792 of yacc.c  */
#line 13561 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2278:
/* Line 1792 of yacc.c  */
#line 13562 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2279:
/* Line 1792 of yacc.c  */
#line 13563 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2280:
/* Line 1792 of yacc.c  */
#line 13564 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2281:
/* Line 1792 of yacc.c  */
#line 13565 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2282:
/* Line 1792 of yacc.c  */
#line 13566 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2283:
/* Line 1792 of yacc.c  */
#line 13567 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2284:
/* Line 1792 of yacc.c  */
#line 13568 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2285:
/* Line 1792 of yacc.c  */
#line 13569 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2286:
/* Line 1792 of yacc.c  */
#line 13570 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2287:
/* Line 1792 of yacc.c  */
#line 13571 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2288:
/* Line 1792 of yacc.c  */
#line 13572 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2289:
/* Line 1792 of yacc.c  */
#line 13573 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2290:
/* Line 1792 of yacc.c  */
#line 13574 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2291:
/* Line 1792 of yacc.c  */
#line 13575 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2292:
/* Line 1792 of yacc.c  */
#line 13576 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2293:
/* Line 1792 of yacc.c  */
#line 13577 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2294:
/* Line 1792 of yacc.c  */
#line 13578 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2295:
/* Line 1792 of yacc.c  */
#line 13579 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2296:
/* Line 1792 of yacc.c  */
#line 13580 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2297:
/* Line 1792 of yacc.c  */
#line 13581 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2298:
/* Line 1792 of yacc.c  */
#line 13582 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2299:
/* Line 1792 of yacc.c  */
#line 13583 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2300:
/* Line 1792 of yacc.c  */
#line 13584 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2301:
/* Line 1792 of yacc.c  */
#line 13585 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2302:
/* Line 1792 of yacc.c  */
#line 13586 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2303:
/* Line 1792 of yacc.c  */
#line 13587 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2304:
/* Line 1792 of yacc.c  */
#line 13588 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2305:
/* Line 1792 of yacc.c  */
#line 13589 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2306:
/* Line 1792 of yacc.c  */
#line 13590 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2307:
/* Line 1792 of yacc.c  */
#line 13591 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2308:
/* Line 1792 of yacc.c  */
#line 13592 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2309:
/* Line 1792 of yacc.c  */
#line 13593 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2310:
/* Line 1792 of yacc.c  */
#line 13594 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2311:
/* Line 1792 of yacc.c  */
#line 13595 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2312:
/* Line 1792 of yacc.c  */
#line 13596 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2313:
/* Line 1792 of yacc.c  */
#line 13597 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2314:
/* Line 1792 of yacc.c  */
#line 13598 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2315:
/* Line 1792 of yacc.c  */
#line 13599 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2316:
/* Line 1792 of yacc.c  */
#line 13600 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2317:
/* Line 1792 of yacc.c  */
#line 13601 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2318:
/* Line 1792 of yacc.c  */
#line 13602 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2319:
/* Line 1792 of yacc.c  */
#line 13603 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2320:
/* Line 1792 of yacc.c  */
#line 13604 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2321:
/* Line 1792 of yacc.c  */
#line 13605 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2322:
/* Line 1792 of yacc.c  */
#line 13606 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2323:
/* Line 1792 of yacc.c  */
#line 13607 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2324:
/* Line 1792 of yacc.c  */
#line 13608 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2325:
/* Line 1792 of yacc.c  */
#line 13609 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2326:
/* Line 1792 of yacc.c  */
#line 13610 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2327:
/* Line 1792 of yacc.c  */
#line 13611 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2328:
/* Line 1792 of yacc.c  */
#line 13612 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2329:
/* Line 1792 of yacc.c  */
#line 13613 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2330:
/* Line 1792 of yacc.c  */
#line 13614 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2331:
/* Line 1792 of yacc.c  */
#line 13615 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2332:
/* Line 1792 of yacc.c  */
#line 13616 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2333:
/* Line 1792 of yacc.c  */
#line 13617 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2334:
/* Line 1792 of yacc.c  */
#line 13618 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2335:
/* Line 1792 of yacc.c  */
#line 13619 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2336:
/* Line 1792 of yacc.c  */
#line 13620 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2337:
/* Line 1792 of yacc.c  */
#line 13621 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2338:
/* Line 1792 of yacc.c  */
#line 13622 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2339:
/* Line 1792 of yacc.c  */
#line 13623 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2340:
/* Line 1792 of yacc.c  */
#line 13624 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2341:
/* Line 1792 of yacc.c  */
#line 13625 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2342:
/* Line 1792 of yacc.c  */
#line 13626 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2343:
/* Line 1792 of yacc.c  */
#line 13627 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2344:
/* Line 1792 of yacc.c  */
#line 13628 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2345:
/* Line 1792 of yacc.c  */
#line 13629 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2346:
/* Line 1792 of yacc.c  */
#line 13630 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2347:
/* Line 1792 of yacc.c  */
#line 13631 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2348:
/* Line 1792 of yacc.c  */
#line 13632 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2349:
/* Line 1792 of yacc.c  */
#line 13633 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2350:
/* Line 1792 of yacc.c  */
#line 13634 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2351:
/* Line 1792 of yacc.c  */
#line 13635 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2352:
/* Line 1792 of yacc.c  */
#line 13636 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2353:
/* Line 1792 of yacc.c  */
#line 13637 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2354:
/* Line 1792 of yacc.c  */
#line 13638 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2355:
/* Line 1792 of yacc.c  */
#line 13639 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2356:
/* Line 1792 of yacc.c  */
#line 13640 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2357:
/* Line 1792 of yacc.c  */
#line 13641 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2358:
/* Line 1792 of yacc.c  */
#line 13642 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2359:
/* Line 1792 of yacc.c  */
#line 13643 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2360:
/* Line 1792 of yacc.c  */
#line 13644 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2361:
/* Line 1792 of yacc.c  */
#line 13645 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2362:
/* Line 1792 of yacc.c  */
#line 13646 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2363:
/* Line 1792 of yacc.c  */
#line 13647 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2364:
/* Line 1792 of yacc.c  */
#line 13648 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2365:
/* Line 1792 of yacc.c  */
#line 13649 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2366:
/* Line 1792 of yacc.c  */
#line 13650 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2367:
/* Line 1792 of yacc.c  */
#line 13651 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2368:
/* Line 1792 of yacc.c  */
#line 13652 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2369:
/* Line 1792 of yacc.c  */
#line 13653 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2370:
/* Line 1792 of yacc.c  */
#line 13654 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2371:
/* Line 1792 of yacc.c  */
#line 13655 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2372:
/* Line 1792 of yacc.c  */
#line 13656 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2373:
/* Line 1792 of yacc.c  */
#line 13657 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2374:
/* Line 1792 of yacc.c  */
#line 13658 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2375:
/* Line 1792 of yacc.c  */
#line 13659 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2376:
/* Line 1792 of yacc.c  */
#line 13660 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2377:
/* Line 1792 of yacc.c  */
#line 13661 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2378:
/* Line 1792 of yacc.c  */
#line 13662 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2379:
/* Line 1792 of yacc.c  */
#line 13663 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2380:
/* Line 1792 of yacc.c  */
#line 13664 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2381:
/* Line 1792 of yacc.c  */
#line 13665 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2382:
/* Line 1792 of yacc.c  */
#line 13666 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2383:
/* Line 1792 of yacc.c  */
#line 13667 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2384:
/* Line 1792 of yacc.c  */
#line 13668 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2385:
/* Line 1792 of yacc.c  */
#line 13669 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2386:
/* Line 1792 of yacc.c  */
#line 13670 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2387:
/* Line 1792 of yacc.c  */
#line 13671 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2388:
/* Line 1792 of yacc.c  */
#line 13672 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2389:
/* Line 1792 of yacc.c  */
#line 13673 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2390:
/* Line 1792 of yacc.c  */
#line 13674 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2391:
/* Line 1792 of yacc.c  */
#line 13675 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2392:
/* Line 1792 of yacc.c  */
#line 13676 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2393:
/* Line 1792 of yacc.c  */
#line 13677 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2394:
/* Line 1792 of yacc.c  */
#line 13678 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2395:
/* Line 1792 of yacc.c  */
#line 13679 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2396:
/* Line 1792 of yacc.c  */
#line 13680 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2397:
/* Line 1792 of yacc.c  */
#line 13681 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2398:
/* Line 1792 of yacc.c  */
#line 13682 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2399:
/* Line 1792 of yacc.c  */
#line 13683 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2400:
/* Line 1792 of yacc.c  */
#line 13684 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2401:
/* Line 1792 of yacc.c  */
#line 13685 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2402:
/* Line 1792 of yacc.c  */
#line 13686 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2403:
/* Line 1792 of yacc.c  */
#line 13687 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2404:
/* Line 1792 of yacc.c  */
#line 13688 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2405:
/* Line 1792 of yacc.c  */
#line 13689 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2406:
/* Line 1792 of yacc.c  */
#line 13690 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2407:
/* Line 1792 of yacc.c  */
#line 13691 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2408:
/* Line 1792 of yacc.c  */
#line 13692 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2409:
/* Line 1792 of yacc.c  */
#line 13693 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2410:
/* Line 1792 of yacc.c  */
#line 13694 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2411:
/* Line 1792 of yacc.c  */
#line 13706 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].start_option_value_list));
          }
    break;

  case 2412:
/* Line 1792 of yacc.c  */
#line 13715 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[(1) - (2)].option_value_no_option_type), (yylsp[(1) - (2)]), (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2413:
/* Line 1792 of yacc.c  */
#line 13719 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[(2) - (2)].transaction_characteristics), (yylsp[(2) - (2)]));
          }
    break;

  case 2414:
/* Line 1792 of yacc.c  */
#line 13723 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].start_option_value_list_following_option_type));
          }
    break;

  case 2415:
/* Line 1792 of yacc.c  */
#line 13727 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(3) - (3)].simple_string), (yylsp[(3) - (3)]));
          }
    break;

  case 2416:
/* Line 1792 of yacc.c  */
#line 13731 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD = '<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(5) - (6)].simple_string), (yylsp[(5) - (6)]));
          }
    break;

  case 2417:
/* Line 1792 of yacc.c  */
#line 13738 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].simple_string), (yylsp[(5) - (5)]));
          }
    break;

  case 2418:
/* Line 1792 of yacc.c  */
#line 13742 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD FOR <user> = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD FOR <user> = "
                                 "'<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (8)].lex_user), (yyvsp[(7) - (8)].simple_string), (yylsp[(7) - (8)]));
          }
    break;

  case 2419:
/* Line 1792 of yacc.c  */
#line 13755 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[(1) - (2)].option_value_following_option_type),
                                                                          (yylsp[(1) - (2)]),
                                                                          (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2420:
/* Line 1792 of yacc.c  */
#line 13762 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[(2) - (2)].transaction_characteristics),
                                                                           (yylsp[(2) - (2)]));
          }
    break;

  case 2421:
/* Line 1792 of yacc.c  */
#line 13771 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= NULL; }
    break;

  case 2422:
/* Line 1792 of yacc.c  */
#line 13772 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= (yyvsp[(2) - (2)].option_value_list); }
    break;

  case 2423:
/* Line 1792 of yacc.c  */
#line 13778 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[(0) - (1)]), (yyvsp[(1) - (1)].node), (yylsp[(1) - (1)]));
          }
    break;

  case 2424:
/* Line 1792 of yacc.c  */
#line 13782 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[(1) - (3)].option_value_list), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].node), (yylsp[(3) - (3)]));
          }
    break;

  case 2425:
/* Line 1792 of yacc.c  */
#line 13790 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].option_value_following_option_type));
          }
    break;

  case 2426:
/* Line 1792 of yacc.c  */
#line 13793 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].option_value_no_option_type); }
    break;

  case 2427:
/* Line 1792 of yacc.c  */
#line 13797 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2428:
/* Line 1792 of yacc.c  */
#line 13798 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2429:
/* Line 1792 of yacc.c  */
#line 13799 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2430:
/* Line 1792 of yacc.c  */
#line 13803 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2431:
/* Line 1792 of yacc.c  */
#line 13804 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2432:
/* Line 1792 of yacc.c  */
#line 13805 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2433:
/* Line 1792 of yacc.c  */
#line 13806 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2434:
/* Line 1792 of yacc.c  */
#line 13810 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2435:
/* Line 1792 of yacc.c  */
#line 13811 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2436:
/* Line 1792 of yacc.c  */
#line 13812 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2437:
/* Line 1792 of yacc.c  */
#line 13813 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2438:
/* Line 1792 of yacc.c  */
#line 13819 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item));
          }
    break;

  case 2439:
/* Line 1792 of yacc.c  */
#line 13829 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item), (yylsp[(3) - (3)]));
          }
    break;

  case 2440:
/* Line 1792 of yacc.c  */
#line 13833 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
          }
    break;

  case 2441:
/* Line 1792 of yacc.c  */
#line 13837 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[(3) - (6)].var_type), (yyvsp[(4) - (6)].internal_variable_name), (yyvsp[(6) - (6)].item));
          }
    break;

  case 2442:
/* Line 1792 of yacc.c  */
#line 13841 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[(2) - (2)].charset));
          }
    break;

  case 2443:
/* Line 1792 of yacc.c  */
#line 13845 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[(2) - (3)]));
          }
    break;

  case 2444:
/* Line 1792 of yacc.c  */
#line 13852 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names_charset((yyvsp[(2) - (3)].charset), (yyvsp[(3) - (3)].charset));
          }
    break;

  case 2445:
/* Line 1792 of yacc.c  */
#line 13859 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2446:
/* Line 1792 of yacc.c  */
#line 13863 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2447:
/* Line 1792 of yacc.c  */
#line 13867 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2448:
/* Line 1792 of yacc.c  */
#line 13874 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].transaction_access_mode), (yyvsp[(2) - (2)].isolation_level));
          }
    break;

  case 2449:
/* Line 1792 of yacc.c  */
#line 13878 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].isolation_level), (yyvsp[(2) - (2)].transaction_access_mode));
          }
    break;

  case 2450:
/* Line 1792 of yacc.c  */
#line 13885 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[(1) - (1)].num));
          }
    break;

  case 2451:
/* Line 1792 of yacc.c  */
#line 13891 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= NULL; }
    break;

  case 2452:
/* Line 1792 of yacc.c  */
#line 13892 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= (yyvsp[(2) - (2)].transaction_access_mode); }
    break;

  case 2453:
/* Line 1792 of yacc.c  */
#line 13897 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[(3) - (3)].tx_isolation));
          }
    break;

  case 2454:
/* Line 1792 of yacc.c  */
#line 13903 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= NULL; }
    break;

  case 2455:
/* Line 1792 of yacc.c  */
#line 13904 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= (yyvsp[(2) - (2)].isolation_level); }
    break;

  case 2456:
/* Line 1792 of yacc.c  */
#line 13908 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2457:
/* Line 1792 of yacc.c  */
#line 13909 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2458:
/* Line 1792 of yacc.c  */
#line 13913 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2459:
/* Line 1792 of yacc.c  */
#line 13914 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2460:
/* Line 1792 of yacc.c  */
#line 13915 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2461:
/* Line 1792 of yacc.c  */
#line 13916 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2462:
/* Line 1792 of yacc.c  */
#line 13921 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2464:
/* Line 1792 of yacc.c  */
#line 13930 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 2465:
/* Line 1792 of yacc.c  */
#line 13932 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON",  2, system_charset_info);
          }
    break;

  case 2466:
/* Line 1792 of yacc.c  */
#line 13936 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
    break;

  case 2467:
/* Line 1792 of yacc.c  */
#line 13940 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
    break;

  case 2468:
/* Line 1792 of yacc.c  */
#line 13949 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2469:
/* Line 1792 of yacc.c  */
#line 13960 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2474:
/* Line 1792 of yacc.c  */
#line 13975 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
    break;

  case 2475:
/* Line 1792 of yacc.c  */
#line 14002 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2476:
/* Line 1792 of yacc.c  */
#line 14003 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2477:
/* Line 1792 of yacc.c  */
#line 14005 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2478:
/* Line 1792 of yacc.c  */
#line 14009 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2479:
/* Line 1792 of yacc.c  */
#line 14014 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2480:
/* Line 1792 of yacc.c  */
#line 14025 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2481:
/* Line 1792 of yacc.c  */
#line 14031 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.statement)= NEW_PTN PT_shutdown();
          }
    break;

  case 2482:
/* Line 1792 of yacc.c  */
#line 14039 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.statement)= NEW_PTN PT_alter_instance((yyvsp[(3) - (3)].alter_instance_action));
          }
    break;

  case 2483:
/* Line 1792 of yacc.c  */
#line 14046 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(2) - (4)].lex_str).str, "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else
            {
              YYTHD->parse_error_at((yylsp[(2) - (4)]), ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2484:
/* Line 1792 of yacc.c  */
#line 14065 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2485:
/* Line 1792 of yacc.c  */
#line 14081 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2486:
/* Line 1792 of yacc.c  */
#line 14099 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /* #4 */
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select()->select_limit= one;
            lex->current_select()->offset_limit= 0;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2487:
/* Line 1792 of yacc.c  */
#line 14119 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item) != NULL)
              ITEMIZE((yyvsp[(6) - (7)].item), &(yyvsp[(6) - (7)].item));
            Select->set_where_cond((yyvsp[(6) - (7)].item));

            if ((yyvsp[(7) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(7) - (7)].limit_clause));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->handler_insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2488:
/* Line 1792 of yacc.c  */
#line 14146 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2489:
/* Line 1792 of yacc.c  */
#line 14147 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2490:
/* Line 1792 of yacc.c  */
#line 14151 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2491:
/* Line 1792 of yacc.c  */
#line 14152 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2492:
/* Line 1792 of yacc.c  */
#line 14156 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2493:
/* Line 1792 of yacc.c  */
#line 14157 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2494:
/* Line 1792 of yacc.c  */
#line 14158 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RPREV;  }
    break;

  case 2495:
/* Line 1792 of yacc.c  */
#line 14159 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RLAST;  }
    break;

  case 2496:
/* Line 1792 of yacc.c  */
#line 14161 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
          }
    break;

  case 2497:
/* Line 1792 of yacc.c  */
#line 14165 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].item_list2));
            Lex->handler_insert_list= &(yyvsp[(4) - (5)].item_list2)->value;
            (yyval.ha_read_mode)= RKEY;
          }
    break;

  case 2498:
/* Line 1792 of yacc.c  */
#line 14173 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2499:
/* Line 1792 of yacc.c  */
#line 14174 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2500:
/* Line 1792 of yacc.c  */
#line 14175 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2501:
/* Line 1792 of yacc.c  */
#line 14176 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2502:
/* Line 1792 of yacc.c  */
#line 14177 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2503:
/* Line 1792 of yacc.c  */
#line 14183 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_REVOKE; }
    break;

  case 2504:
/* Line 1792 of yacc.c  */
#line 14184 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2505:
/* Line 1792 of yacc.c  */
#line 14189 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2506:
/* Line 1792 of yacc.c  */
#line 14194 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2507:
/* Line 1792 of yacc.c  */
#line 14204 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2508:
/* Line 1792 of yacc.c  */
#line 14214 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2509:
/* Line 1792 of yacc.c  */
#line 14218 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2510:
/* Line 1792 of yacc.c  */
#line 14226 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_GRANT; }
    break;

  case 2511:
/* Line 1792 of yacc.c  */
#line 14227 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2512:
/* Line 1792 of yacc.c  */
#line 14233 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2513:
/* Line 1792 of yacc.c  */
#line 14239 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2514:
/* Line 1792 of yacc.c  */
#line 14250 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2515:
/* Line 1792 of yacc.c  */
#line 14260 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2518:
/* Line 1792 of yacc.c  */
#line 14274 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->grant == GLOBAL_ACLS &&
                lex->sql_command == SQLCOM_REVOKE)
              lex->sql_command= SQLCOM_REVOKE_ALL;
          }
    break;

  case 2519:
/* Line 1792 of yacc.c  */
#line 14281 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2524:
/* Line 1792 of yacc.c  */
#line 14299 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2525:
/* Line 1792 of yacc.c  */
#line 14300 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2526:
/* Line 1792 of yacc.c  */
#line 14302 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2527:
/* Line 1792 of yacc.c  */
#line 14303 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2528:
/* Line 1792 of yacc.c  */
#line 14305 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2529:
/* Line 1792 of yacc.c  */
#line 14306 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2530:
/* Line 1792 of yacc.c  */
#line 14308 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2531:
/* Line 1792 of yacc.c  */
#line 14309 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2532:
/* Line 1792 of yacc.c  */
#line 14310 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2533:
/* Line 1792 of yacc.c  */
#line 14311 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2534:
/* Line 1792 of yacc.c  */
#line 14312 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2535:
/* Line 1792 of yacc.c  */
#line 14313 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2536:
/* Line 1792 of yacc.c  */
#line 14314 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2537:
/* Line 1792 of yacc.c  */
#line 14315 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2538:
/* Line 1792 of yacc.c  */
#line 14316 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2539:
/* Line 1792 of yacc.c  */
#line 14317 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2540:
/* Line 1792 of yacc.c  */
#line 14318 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2541:
/* Line 1792 of yacc.c  */
#line 14319 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2542:
/* Line 1792 of yacc.c  */
#line 14320 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2543:
/* Line 1792 of yacc.c  */
#line 14321 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2544:
/* Line 1792 of yacc.c  */
#line 14322 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2545:
/* Line 1792 of yacc.c  */
#line 14323 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2546:
/* Line 1792 of yacc.c  */
#line 14324 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2547:
/* Line 1792 of yacc.c  */
#line 14325 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2548:
/* Line 1792 of yacc.c  */
#line 14326 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2549:
/* Line 1792 of yacc.c  */
#line 14327 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2550:
/* Line 1792 of yacc.c  */
#line 14328 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2551:
/* Line 1792 of yacc.c  */
#line 14329 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2552:
/* Line 1792 of yacc.c  */
#line 14330 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2553:
/* Line 1792 of yacc.c  */
#line 14331 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2554:
/* Line 1792 of yacc.c  */
#line 14332 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2555:
/* Line 1792 of yacc.c  */
#line 14333 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2556:
/* Line 1792 of yacc.c  */
#line 14334 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2557:
/* Line 1792 of yacc.c  */
#line 14335 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2558:
/* Line 1792 of yacc.c  */
#line 14339 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2559:
/* Line 1792 of yacc.c  */
#line 14340 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2562:
/* Line 1792 of yacc.c  */
#line 14350 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2563:
/* Line 1792 of yacc.c  */
#line 14360 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2564:
/* Line 1792 of yacc.c  */
#line 14370 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2565:
/* Line 1792 of yacc.c  */
#line 14383 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2566:
/* Line 1792 of yacc.c  */
#line 14398 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2567:
/* Line 1792 of yacc.c  */
#line 14411 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2568:
/* Line 1792 of yacc.c  */
#line 14424 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2569:
/* Line 1792 of yacc.c  */
#line 14436 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2570:
/* Line 1792 of yacc.c  */
#line 14441 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2571:
/* Line 1792 of yacc.c  */
#line 14449 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2572:
/* Line 1792 of yacc.c  */
#line 14454 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2573:
/* Line 1792 of yacc.c  */
#line 14462 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->auth.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->auth.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2574:
/* Line 1792 of yacc.c  */
#line 14470 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user);
            (yyvsp[(1) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(1) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(1) - (5)].lex_user)->uses_identified_by_password_clause= true;
            if (Lex->sql_command == SQLCOM_ALTER_USER)
            {
              my_syntax_error(ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
              push_deprecated_warn(YYTHD, "IDENTIFIED BY PASSWORD",
                                   "IDENTIFIED WITH <plugin> AS <hash>");
          }
    break;

  case 2575:
/* Line 1792 of yacc.c  */
#line 14485 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->plugin.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_with_clause= true;
          }
    break;

  case 2576:
/* Line 1792 of yacc.c  */
#line 14493 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_authentication_string_clause= true;
          }
    break;

  case 2577:
/* Line 1792 of yacc.c  */
#line 14503 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2578:
/* Line 1792 of yacc.c  */
#line 14514 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user);
            (yyvsp[(1) - (1)].lex_user)->auth= NULL_CSTR;
          }
    break;

  case 2579:
/* Line 1792 of yacc.c  */
#line 14522 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2583:
/* Line 1792 of yacc.c  */
#line 14536 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2585:
/* Line 1792 of yacc.c  */
#line 14565 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2586:
/* Line 1792 of yacc.c  */
#line 14569 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2587:
/* Line 1792 of yacc.c  */
#line 14573 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2588:
/* Line 1792 of yacc.c  */
#line 14577 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2589:
/* Line 1792 of yacc.c  */
#line 14583 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2591:
/* Line 1792 of yacc.c  */
#line 14588 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2592:
/* Line 1792 of yacc.c  */
#line 14589 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2593:
/* Line 1792 of yacc.c  */
#line 14593 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2594:
/* Line 1792 of yacc.c  */
#line 14594 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2595:
/* Line 1792 of yacc.c  */
#line 14598 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2596:
/* Line 1792 of yacc.c  */
#line 14600 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2597:
/* Line 1792 of yacc.c  */
#line 14606 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2598:
/* Line 1792 of yacc.c  */
#line 14612 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2599:
/* Line 1792 of yacc.c  */
#line 14618 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2600:
/* Line 1792 of yacc.c  */
#line 14627 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2601:
/* Line 1792 of yacc.c  */
#line 14632 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2602:
/* Line 1792 of yacc.c  */
#line 14636 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2603:
/* Line 1792 of yacc.c  */
#line 14637 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2604:
/* Line 1792 of yacc.c  */
#line 14642 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2605:
/* Line 1792 of yacc.c  */
#line 14643 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2606:
/* Line 1792 of yacc.c  */
#line 14644 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2607:
/* Line 1792 of yacc.c  */
#line 14649 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2608:
/* Line 1792 of yacc.c  */
#line 14650 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2609:
/* Line 1792 of yacc.c  */
#line 14651 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2610:
/* Line 1792 of yacc.c  */
#line 14655 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2611:
/* Line 1792 of yacc.c  */
#line 14656 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2612:
/* Line 1792 of yacc.c  */
#line 14661 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2613:
/* Line 1792 of yacc.c  */
#line 14673 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2614:
/* Line 1792 of yacc.c  */
#line 14683 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2615:
/* Line 1792 of yacc.c  */
#line 14692 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2616:
/* Line 1792 of yacc.c  */
#line 14701 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2617:
/* Line 1792 of yacc.c  */
#line 14714 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.union_list)= NULL; }
    break;

  case 2619:
/* Line 1792 of yacc.c  */
#line 14720 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.union_list)= NEW_PTN PT_union_list((yyvsp[(2) - (3)].num), (yyvsp[(3) - (3)].select_init));
          }
    break;

  case 2620:
/* Line 1792 of yacc.c  */
#line 14726 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.node)= NULL; }
    break;

  case 2621:
/* Line 1792 of yacc.c  */
#line 14727 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_list); }
    break;

  case 2622:
/* Line 1792 of yacc.c  */
#line 14728 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_order_or_limit); }
    break;

  case 2623:
/* Line 1792 of yacc.c  */
#line 14732 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.node)= NULL; }
    break;

  case 2624:
/* Line 1792 of yacc.c  */
#line 14733 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_order_or_limit); }
    break;

  case 2625:
/* Line 1792 of yacc.c  */
#line 14738 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.union_order_or_limit)= NEW_PTN PT_union_order_or_limit((yyvsp[(1) - (1)].node));
          }
    break;

  case 2626:
/* Line 1792 of yacc.c  */
#line 14745 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_order_or_limit_order((yyvsp[(1) - (2)].order), (yyvsp[(2) - (2)].limit_clause));
          }
    break;

  case 2627:
/* Line 1792 of yacc.c  */
#line 14748 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].limit_clause); }
    break;

  case 2628:
/* Line 1792 of yacc.c  */
#line 14752 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2629:
/* Line 1792 of yacc.c  */
#line 14753 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2630:
/* Line 1792 of yacc.c  */
#line 14754 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2631:
/* Line 1792 of yacc.c  */
#line 14759 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_specification_select((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2_derived), (yyvsp[(3) - (3)].table_expression));
          }
    break;

  case 2632:
/* Line 1792 of yacc.c  */
#line 14764 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_specification_parenthesis((yyvsp[(2) - (4)].select_paren_derived), (yyvsp[(4) - (4)].node));
          }
    break;

  case 2634:
/* Line 1792 of yacc.c  */
#line 14772 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_expression_body_union((yyloc), (yyvsp[(1) - (4)].select_lex2), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].select_lex2));
          }
    break;

  case 2635:
/* Line 1792 of yacc.c  */
#line 14779 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds reduce/reduce conflict)
            */
          }
    break;

  case 2636:
/* Line 1792 of yacc.c  */
#line 14786 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.subselect)= NEW_PTN PT_subselect((yyloc), (yyvsp[(2) - (2)].select_lex2));
          }
    break;

  case 2637:
/* Line 1792 of yacc.c  */
#line 14792 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= 0; }
    break;

  case 2639:
/* Line 1792 of yacc.c  */
#line 14798 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulonglong_number)= (yyvsp[(1) - (2)].ulonglong_number) | (yyvsp[(2) - (2)].ulonglong_number);
          }
    break;

  case 2641:
/* Line 1792 of yacc.c  */
#line 14805 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
    break;

  case 2642:
/* Line 1792 of yacc.c  */
#line 14806 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
    break;

  case 2643:
/* Line 1792 of yacc.c  */
#line 14807 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
    break;

  case 2644:
/* Line 1792 of yacc.c  */
#line 14808 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
    break;

  case 2645:
/* Line 1792 of yacc.c  */
#line 14809 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
    break;

  case 2646:
/* Line 1792 of yacc.c  */
#line 14810 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
    break;

  case 2647:
/* Line 1792 of yacc.c  */
#line 14811 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_FOUND_ROWS; }
    break;

  case 2648:
/* Line 1792 of yacc.c  */
#line 14812 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_ALL; }
    break;

  case 2649:
/* Line 1792 of yacc.c  */
#line 14823 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2650:
/* Line 1792 of yacc.c  */
#line 14825 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2651:
/* Line 1792 of yacc.c  */
#line 14827 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2665:
/* Line 1792 of yacc.c  */
#line 14860 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2666:
/* Line 1792 of yacc.c  */
#line 14874 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2667:
/* Line 1792 of yacc.c  */
#line 14887 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2668:
/* Line 1792 of yacc.c  */
#line 14889 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2669:
/* Line 1792 of yacc.c  */
#line 14891 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2670:
/* Line 1792 of yacc.c  */
#line 14896 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2671:
/* Line 1792 of yacc.c  */
#line 14901 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2672:
/* Line 1792 of yacc.c  */
#line 14903 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2673:
/* Line 1792 of yacc.c  */
#line 14905 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
    break;

  case 2674:
/* Line 1792 of yacc.c  */
#line 14910 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2675:
/* Line 1792 of yacc.c  */
#line 14912 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2676:
/* Line 1792 of yacc.c  */
#line 14914 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2677:
/* Line 1792 of yacc.c  */
#line 14919 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2679:
/* Line 1792 of yacc.c  */
#line 14936 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2681:
/* Line 1792 of yacc.c  */
#line 14942 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2682:
/* Line 1792 of yacc.c  */
#line 14947 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2683:
/* Line 1792 of yacc.c  */
#line 14954 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
          }
    break;

  case 2684:
/* Line 1792 of yacc.c  */
#line 14961 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            lex->create_view_select.str= const_cast<char *>((yylsp[(2) - (3)]).cpp.start);
            size_t len= (yylsp[(3) - (3)]).cpp.end - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
          }
    break;

  case 2685:
/* Line 1792 of yacc.c  */
#line 14979 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (Lex->current_select()->set_braces(0))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              For statment as "CREATE VIEW v1 AS SELECT1 UNION SELECT2",
              parsing of Select query (SELECT1) is completed and UNION_CLAUSE
              is not yet parsed. So check for
              Lex->current_select()->master_unit()->first_select()->braces
              (as its done in "PT_select_init2::contextualize()) is not
              done here.
            */
          }
    break;

  case 2686:
/* Line 1792 of yacc.c  */
#line 14995 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].union_list) != NULL)
              CONTEXTUALIZE((yyvsp[(3) - (3)].union_list));
          }
    break;

  case 2687:
/* Line 1792 of yacc.c  */
#line 15000 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].node) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].node));
          }
    break;

  case 2688:
/* Line 1792 of yacc.c  */
#line 15007 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->set_braces(true);
          }
    break;

  case 2689:
/* Line 1792 of yacc.c  */
#line 15011 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Select))
              MYSQL_YYABORT;
          }
    break;

  case 2691:
/* Line 1792 of yacc.c  */
#line 15020 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 2692:
/* Line 1792 of yacc.c  */
#line 15024 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(3) - (3)].select_part2));

            Lex->current_select()->table_list.push_front(&Lex->save_list);
          }
    break;

  case 2693:
/* Line 1792 of yacc.c  */
#line 15033 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2694:
/* Line 1792 of yacc.c  */
#line 15035 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2695:
/* Line 1792 of yacc.c  */
#line 15037 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2696:
/* Line 1792 of yacc.c  */
#line 15039 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2697:
/* Line 1792 of yacc.c  */
#line 15050 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
    break;

  case 2698:
/* Line 1792 of yacc.c  */
#line 15052 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
    break;

  case 2699:
/* Line 1792 of yacc.c  */
#line 15057 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name.str= NULL;
              (yyval.trg_characteristics).anchor_trigger_name.length= 0;
            }
    break;

  case 2700:
/* Line 1792 of yacc.c  */
#line 15064 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[(1) - (2)].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= (yyvsp[(2) - (2)].lex_str);
            }
    break;

  case 2701:
/* Line 1792 of yacc.c  */
#line 15081 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            lex->raw_trg_on_table_name_begin= (yylsp[(5) - (10)]).raw.start;
            lex->raw_trg_on_table_name_end= (yylsp[(7) - (10)]).raw.start;

            if ((yylsp[(10) - (10)]).is_empty())
            {
              /*
                @10.is_empty() is true when a clause PRECEDES/FOLLOWS is absent.
              */
              lex->trg_ordering_clause_begin= NULL;
              lex->trg_ordering_clause_end= NULL;
            }
            else
            {
              lex->trg_ordering_clause_begin= (yylsp[(10) - (10)]).cpp.start;
              lex->trg_ordering_clause_end= (yylsp[(10) - (10)]).cpp.end;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_TRIGGER, (yyvsp[(2) - (10)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[(3) - (10)].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[(4) - (10)].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[(10) - (10)].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[(10) - (10)].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[(1) - (10)]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[(6) - (10)]).cpp.start);
            lex->ident.length= (yylsp[(8) - (10)]).cpp.start - (yylsp[(6) - (10)]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[(2) - (10)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            sp->set_body_start(thd, (yylsp[(9) - (10)]).cpp.end);
          }
    break;

  case 2702:
/* Line 1792 of yacc.c  */
#line 15131 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (12)].table),
                                                    (LEX_STRING*) 0,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2703:
/* Line 1792 of yacc.c  */
#line 15166 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[(2) - (7)]).cpp.start;
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2704:
/* Line 1792 of yacc.c  */
#line 15184 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(2) - (6)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(2) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[(1) - (6)]).cpp.start;
            lex->udf.name = (yyvsp[(2) - (6)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(4) - (6)].num);
            lex->udf.dl=(yyvsp[(6) - (6)].lex_str).str;
          }
    break;

  case 2705:
/* Line 1792 of yacc.c  */
#line 15206 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->spname= (yyvsp[(2) - (3)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[(3) - (3)]).cpp.end);
          }
    break;

  case 2706:
/* Line 1792 of yacc.c  */
#line 15230 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(6) - (6)]).cpp.start);
          }
    break;

  case 2707:
/* Line 1792 of yacc.c  */
#line 15234 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* $9 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
            lex->gcol_info= 0;
          }
    break;

  case 2708:
/* Line 1792 of yacc.c  */
#line 15243 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(10) - (10)].num) == MYSQL_TYPE_STRING || (yyvsp[(10) - (10)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (fill_field_definition(YYTHD, sp,
                                      (enum enum_field_types) (yyvsp[(10) - (10)].num),
                                      &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2709:
/* Line 1792 of yacc.c  */
#line 15266 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2710:
/* Line 1792 of yacc.c  */
#line 15274 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 2711:
/* Line 1792 of yacc.c  */
#line 15333 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[(2) - (2)]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_PROCEDURE, (yyvsp[(2) - (2)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
    break;

  case 2712:
/* Line 1792 of yacc.c  */
#line 15353 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[(4) - (4)]).cpp.end);
          }
    break;

  case 2713:
/* Line 1792 of yacc.c  */
#line 15358 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(7) - (7)]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2714:
/* Line 1792 of yacc.c  */
#line 15366 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2715:
/* Line 1792 of yacc.c  */
#line 15374 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 2716:
/* Line 1792 of yacc.c  */
#line 15388 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_start((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2717:
/* Line 1792 of yacc.c  */
#line 15393 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_end((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2718:
/* Line 1792 of yacc.c  */
#line 15398 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_prepare((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2719:
/* Line 1792 of yacc.c  */
#line 15403 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_commit((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2720:
/* Line 1792 of yacc.c  */
#line 15408 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_rollback((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2721:
/* Line 1792 of yacc.c  */
#line 15413 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_recover((yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 2722:
/* Line 1792 of yacc.c  */
#line 15420 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2723:
/* Line 1792 of yacc.c  */
#line 15421 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2724:
/* Line 1792 of yacc.c  */
#line 15425 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
    break;

  case 2725:
/* Line 1792 of yacc.c  */
#line 15434 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2726:
/* Line 1792 of yacc.c  */
#line 15444 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            // check for overwflow of xid format id 
            bool format_id_overflow_detected= ((yyvsp[(5) - (5)].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2727:
/* Line 1792 of yacc.c  */
#line 15461 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2728:
/* Line 1792 of yacc.c  */
#line 15462 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2729:
/* Line 1792 of yacc.c  */
#line 15466 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2730:
/* Line 1792 of yacc.c  */
#line 15467 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_JOIN;        }
    break;

  case 2731:
/* Line 1792 of yacc.c  */
#line 15468 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_RESUME;      }
    break;

  case 2732:
/* Line 1792 of yacc.c  */
#line 15472 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2733:
/* Line 1792 of yacc.c  */
#line 15473 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
    break;

  case 2734:
/* Line 1792 of yacc.c  */
#line 15478 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2735:
/* Line 1792 of yacc.c  */
#line 15480 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_SUSPEND;     }
    break;

  case 2736:
/* Line 1792 of yacc.c  */
#line 15482 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
    break;

  case 2737:
/* Line 1792 of yacc.c  */
#line 15487 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_install_plugin((yyvsp[(3) - (5)].lex_str), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 2738:
/* Line 1792 of yacc.c  */
#line 15496 "/export/home/pb2/build/sb_3-27500156-1520170992.64/mysql-5.7.22-release-export-12668489_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_uninstall_plugin((yyvsp[(3) - (3)].lex_str));
          }
    break;


/* Line 1792 of yacc.c  */
#line 40739 "/export/home/pb2/build/sb_3-27500156-1520170992.64/dist_GPL/sql/sql_yacc.cc"
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, YYTHD);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD);
    }
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


